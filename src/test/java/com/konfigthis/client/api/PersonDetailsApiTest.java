/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EmpPersonDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PersonDetailsApi
 */
@Disabled
public class PersonDetailsApiTest {

    private static PersonDetailsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PersonDetailsApi(apiClient);
    }

    /**
     * Get all person details
     *
     * Get all person details.  If no pagination parameters specified, the default/max is applied.   Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Employee Person Details\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /person-details?dateTimeCreated&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /person-details?dateTimeCreated&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /person-details?dateTimeCreated&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /person-details?dateTimeCreated&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllDetailsTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        String lastName = null;
        String emailAddress = null;
        String addressState = null;
        String addressCountry = null;
        String cobraIsActive = null;
        String cobraStatus = null;
        String dateOfCobraEvent = null;
        String dateTimeCreated = null;
        String dateTimeChanged = null;
        String nationalId = null;
        String nationalIdCountry = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpPersonDetails> response = api.getAllDetails()
                .companyId(companyId)
                .employeeId(employeeId)
                .lastName(lastName)
                .emailAddress(emailAddress)
                .addressState(addressState)
                .addressCountry(addressCountry)
                .cobraIsActive(cobraIsActive)
                .cobraStatus(cobraStatus)
                .dateOfCobraEvent(dateOfCobraEvent)
                .dateTimeCreated(dateTimeCreated)
                .dateTimeChanged(dateTimeChanged)
                .nationalId(nationalId)
                .nationalIdCountry(nationalIdCountry)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all person details for a single company
     *
     * Get all person details for a single company.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Employee Person Details\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/person-details?dateTimeCreated&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/person-details?dateTimeCreated&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/person-details?dateTimeCreated&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/person-details?dateTimeCreated&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleCompanyDetailsTest() throws ApiException {
        String companyId = null;
        String companyId2 = null;
        String employeeId = null;
        String lastName = null;
        String emailAddress = null;
        String addressState = null;
        String addressCountry = null;
        String cobraIsActive = null;
        String cobraStatus = null;
        String dateOfCobraEvent = null;
        String dateTimeCreated = null;
        String dateTimeChanged = null;
        String nationalId = null;
        String nationalIdCountry = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpPersonDetails> response = api.getSingleCompanyDetails(companyId)
                .companyId2(companyId2)
                .employeeId(employeeId)
                .lastName(lastName)
                .emailAddress(emailAddress)
                .addressState(addressState)
                .addressCountry(addressCountry)
                .cobraIsActive(cobraIsActive)
                .cobraStatus(cobraStatus)
                .dateOfCobraEvent(dateOfCobraEvent)
                .dateTimeCreated(dateTimeCreated)
                .dateTimeChanged(dateTimeChanged)
                .nationalId(nationalId)
                .nationalIdCountry(nationalIdCountry)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a single person detail record
     *
     * Get a single person detail record.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Employee Person Details\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /person-details/{employeeId}?dateTimeCreated&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /person-details/{employeeId}?dateTimeCreated&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /person-details/{employeeId}?dateTimeCreated&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /person-details/{employeeId}?dateTimeCreated&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleDetailRecordTest() throws ApiException {
        String employeeId = null;
        EmpPersonDetails response = api.getSingleDetailRecord(employeeId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get a single person detail record for a single company
     *
     * Get a single person detail record for a single company.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Employee Person Details\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/person-details?dateTimeCreated&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSingleRecordTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        String companyId2 = null;
        String employeeId2 = null;
        String lastName = null;
        String emailAddress = null;
        String addressState = null;
        String addressCountry = null;
        String cobraIsActive = null;
        String cobraStatus = null;
        String dateOfCobraEvent = null;
        String dateTimeCreated = null;
        String dateTimeChanged = null;
        String nationalId = null;
        String nationalIdCountry = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpPersonDetails> response = api.getSingleRecord(companyId, employeeId)
                .companyId2(companyId2)
                .employeeId2(employeeId2)
                .lastName(lastName)
                .emailAddress(emailAddress)
                .addressState(addressState)
                .addressCountry(addressCountry)
                .cobraIsActive(cobraIsActive)
                .cobraStatus(cobraStatus)
                .dateOfCobraEvent(dateOfCobraEvent)
                .dateTimeCreated(dateTimeCreated)
                .dateTimeChanged(dateTimeChanged)
                .nationalId(nationalId)
                .nationalIdCountry(nationalIdCountry)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

}
