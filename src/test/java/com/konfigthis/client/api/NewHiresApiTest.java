/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.NewHiresCreateSingleNewHire201Response;
import com.konfigthis.client.model.NewHiresCreateSingleNewHireRequest;
import com.konfigthis.client.model.NewHiresCreateSingleNewHireRequestCompensation;
import com.konfigthis.client.model.NewHiresCreateSingleNewHireRequestContactInformation;
import com.konfigthis.client.model.NewHiresCreateSingleNewHireRequestJob;
import com.konfigthis.client.model.NewHiresCreateSingleNewHireRequestMentor;
import com.konfigthis.client.model.NewHiresCreateSingleNewHireRequestOrganizationLevelsInner;
import com.konfigthis.client.model.NewHiresCreateSingleNewHireResponse;
import com.konfigthis.client.model.NewHiresGetById200Response;
import com.konfigthis.client.model.NewHiresGetByIdResponse;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NewHiresApi
 */
@Disabled
public class NewHiresApiTest {

    private static NewHiresApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new NewHiresApi(apiClient);
    }

    /**
     * Creates a single New Hire
     *
     * Creates a single New Hire
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSingleNewHireTest() throws ApiException {
        String tenantIdentifier = null;
        NewHiresCreateSingleNewHireRequestContactInformation contactInformation = null;
        NewHiresCreateSingleNewHireRequestJob job = null;
        List<NewHiresCreateSingleNewHireRequestOrganizationLevelsInner> organizationLevels = null;
        NewHiresCreateSingleNewHireRequestCompensation compensation = null;
        String onboardingOwnerId = null;
        OffsetDateTime hireDate = null;
        OffsetDateTime orientationDate = null;
        OffsetDateTime startDate = null;
        String pastStartDateReason = null;
        NewHiresCreateSingleNewHireRequestMentor mentor = null;
        String personalMessage = null;
        NewHiresCreateSingleNewHireResponse response = api.createSingleNewHire(tenantIdentifier)
                .contactInformation(contactInformation)
                .job(job)
                .organizationLevels(organizationLevels)
                .compensation(compensation)
                .onboardingOwnerId(onboardingOwnerId)
                .hireDate(hireDate)
                .orientationDate(orientationDate)
                .startDate(startDate)
                .pastStartDateReason(pastStartDateReason)
                .mentor(mentor)
                .personalMessage(personalMessage)
                .execute();
        // TODO: test validations
    }

    /**
     * Gets a single New Hire by Id
     *
     * Gets a single New Hire by Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String tenantIdentifier = null;
        String id = null;
        NewHiresGetByIdResponse response = api.getById(tenantIdentifier, id)
                .execute();
        // TODO: test validations
    }

}
