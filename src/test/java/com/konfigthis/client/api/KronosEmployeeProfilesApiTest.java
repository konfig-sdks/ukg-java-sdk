/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EmployeeProfiles;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for KronosEmployeeProfilesApi
 */
@Disabled
public class KronosEmployeeProfilesApiTest {

    private static KronosEmployeeProfilesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new KronosEmployeeProfilesApi(apiClient);
    }

    /**
     * Get list of employees profile
     *
     * If no pagination parameters specified, the default/max is applied.      Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Personnel Integration\&quot; Api endpoints. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). &lt;br&gt;&lt;br&gt;/personnel/v1/integration/kronos/employee-profiles can take following optional parameter:&lt;br&gt;&lt;ul&gt;&lt;li&gt;Product: Required parameter &lt;/li&gt; &lt;li&gt;companyId: Can take in multiple IDs separated by comma. ex: {id1}, {id2}&lt;/li&gt;&lt;li&gt;employeeId: Can take in multiple IDs separated by comma. ex: {id1}, {id2}&lt;/li&gt;&lt;li&gt;includeHistoryIfChangeDetected&lt;/li&gt;&lt;li&gt;effectiveDate&lt;/li&gt;&lt;li&gt;changeWindow&lt;/li&gt;&lt;li&gt;per_Page&lt;/li&gt;&lt;li&gt;page&lt;/li&gt;&lt;br&gt;Correct syntax when using parameters are as follows:&lt;ul&gt;&lt;li&gt;Get kronos employee profiles with required product parameter&lt;ul&gt;   &lt;li&gt;Example: personnel/v1/integration/kronos/employee-profiles?product&#x3D;{productCode}&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Get kronos employee profiles by companyId and employeeId&lt;ul&gt;&lt;li&gt;Example: personnel/v1/integration/kronos/employee-profiles?product&#x3D;{productCode}&amp;companyId&#x3D;{COID1}&amp;employeeId&#x3D;{EEID1}, {EEID2}&amp;effectiveDate&#x3D;{date}&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Get employee profiles by includeHistoryIfChangeDetected&lt;ul&gt;&lt;li&gt;Example: personnel/v1/integration/kronos/employee-profiles?product&#x3D;{productCode}&amp;companyId&#x3D;{COID1}&amp;employeeId&#x3D;{EEID1}&amp;effectiveDate&#x3D;{date}&amp;includeHistoryIfChangeDetected&#x3D;true&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Get kronos employee profiles by perPage and page&lt;ul&gt;&lt;li&gt;Example: personnel/v1/integration/kronos/employee-profiles?product&#x3D;{productCode}&amp;page&#x3D;1&amp;per_Page&#x3D;{pageSize}&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getListTest() throws ApiException {
        String product = null;
        String companyId = null;
        String employeeId = null;
        OffsetDateTime effectiveDate = null;
        Integer changeWindow = null;
        Boolean includeHistoryIfChangeDetected = null;
        Integer page = null;
        Integer perPage = null;
        List<EmployeeProfiles> response = api.getList(product)
                .companyId(companyId)
                .employeeId(employeeId)
                .effectiveDate(effectiveDate)
                .changeWindow(changeWindow)
                .includeHistoryIfChangeDetected(includeHistoryIfChangeDetected)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

}
