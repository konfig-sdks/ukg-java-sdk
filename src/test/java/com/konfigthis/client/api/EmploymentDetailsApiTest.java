/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EmpEmploymentDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EmploymentDetailsApi
 */
@Disabled
public class EmploymentDetailsApiTest {

    private static EmploymentDetailsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new EmploymentDetailsApi(apiClient);
    }

    /**
     * Get Employment Details
     *
     * Get a single employment detail by company.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Personnel Integration\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/employment-details?dateTimeCreated&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByCompanyIdAndEmployeeIdTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        String companyId2 = null;
        String employeeId2 = null;
        String primaryJobCode = null;
        String jobTitle = null;
        String fullTimeOrPartTimeCode = null;
        String primaryWorkLocationCode = null;
        String primaryProjectCode = null;
        String deductionGroupCode = null;
        String earningGroupCode = null;
        String employeeTypeCode = null;
        String employeeStatusCode = null;
        String employeeNumber = null;
        String supervisorID = null;
        String originalHireDate = null;
        String lastHireDate = null;
        String dateOfTermination = null;
        String dateOfRetirement = null;
        String dateTimeCreated = null;
        String dateTimeChanged = null;
        String dateLastPayDatePaid = null;
        String payGroup = null;
        Boolean isHomeCompany = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpEmploymentDetails> response = api.getByCompanyIdAndEmployeeId(companyId, employeeId)
                .companyId2(companyId2)
                .employeeId2(employeeId2)
                .primaryJobCode(primaryJobCode)
                .jobTitle(jobTitle)
                .fullTimeOrPartTimeCode(fullTimeOrPartTimeCode)
                .primaryWorkLocationCode(primaryWorkLocationCode)
                .primaryProjectCode(primaryProjectCode)
                .deductionGroupCode(deductionGroupCode)
                .earningGroupCode(earningGroupCode)
                .employeeTypeCode(employeeTypeCode)
                .employeeStatusCode(employeeStatusCode)
                .employeeNumber(employeeNumber)
                .supervisorID(supervisorID)
                .originalHireDate(originalHireDate)
                .lastHireDate(lastHireDate)
                .dateOfTermination(dateOfTermination)
                .dateOfRetirement(dateOfRetirement)
                .dateTimeCreated(dateTimeCreated)
                .dateTimeChanged(dateTimeChanged)
                .dateLastPayDatePaid(dateLastPayDatePaid)
                .payGroup(payGroup)
                .isHomeCompany(isHomeCompany)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Employment Details
     *
     * Get all employment record details.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Personnel Integration\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /employment-details?dateTimeCreated&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /employment-details?dateTimeCreated&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /employment-details?dateTimeCreated&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /employment-details?dateTimeCreated&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDetailsTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        String primaryJobCode = null;
        String jobTitle = null;
        String fullTimeOrPartTimeCode = null;
        String primaryWorkLocationCode = null;
        String primaryProjectCode = null;
        String deductionGroupCode = null;
        String earningGroupCode = null;
        String employeeTypeCode = null;
        String employeeStatusCode = null;
        String employeeNumber = null;
        String supervisorID = null;
        String originalHireDate = null;
        String lastHireDate = null;
        String dateOfTermination = null;
        String dateOfRetirement = null;
        String dateTimeCreated = null;
        String dateTimeChanged = null;
        String dateLastPayDatePaid = null;
        String payGroup = null;
        Boolean isHomeCompany = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpEmploymentDetails> response = api.getDetails()
                .companyId(companyId)
                .employeeId(employeeId)
                .primaryJobCode(primaryJobCode)
                .jobTitle(jobTitle)
                .fullTimeOrPartTimeCode(fullTimeOrPartTimeCode)
                .primaryWorkLocationCode(primaryWorkLocationCode)
                .primaryProjectCode(primaryProjectCode)
                .deductionGroupCode(deductionGroupCode)
                .earningGroupCode(earningGroupCode)
                .employeeTypeCode(employeeTypeCode)
                .employeeStatusCode(employeeStatusCode)
                .employeeNumber(employeeNumber)
                .supervisorID(supervisorID)
                .originalHireDate(originalHireDate)
                .lastHireDate(lastHireDate)
                .dateOfTermination(dateOfTermination)
                .dateOfRetirement(dateOfRetirement)
                .dateTimeCreated(dateTimeCreated)
                .dateTimeChanged(dateTimeChanged)
                .dateLastPayDatePaid(dateLastPayDatePaid)
                .payGroup(payGroup)
                .isHomeCompany(isHomeCompany)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Employment Details
     *
     * Get all employment record details by company.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Personnel Integration\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/employment-details?dateTimeCreated&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/employment-details?dateTimeCreated&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/employment-details?dateTimeCreated&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/employment-details?dateTimeCreated&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listByCompanyTest() throws ApiException {
        String companyId = null;
        String companyId2 = null;
        String employeeId = null;
        String primaryJobCode = null;
        String jobTitle = null;
        String fullTimeOrPartTimeCode = null;
        String primaryWorkLocationCode = null;
        String primaryProjectCode = null;
        String deductionGroupCode = null;
        String earningGroupCode = null;
        String employeeTypeCode = null;
        String employeeStatusCode = null;
        String employeeNumber = null;
        String supervisorID = null;
        String originalHireDate = null;
        String lastHireDate = null;
        String dateOfTermination = null;
        String dateOfRetirement = null;
        String dateTimeCreated = null;
        String dateTimeChanged = null;
        String dateLastPayDatePaid = null;
        String payGroup = null;
        Boolean isHomeCompany = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpEmploymentDetails> response = api.listByCompany(companyId)
                .companyId2(companyId2)
                .employeeId(employeeId)
                .primaryJobCode(primaryJobCode)
                .jobTitle(jobTitle)
                .fullTimeOrPartTimeCode(fullTimeOrPartTimeCode)
                .primaryWorkLocationCode(primaryWorkLocationCode)
                .primaryProjectCode(primaryProjectCode)
                .deductionGroupCode(deductionGroupCode)
                .earningGroupCode(earningGroupCode)
                .employeeTypeCode(employeeTypeCode)
                .employeeStatusCode(employeeStatusCode)
                .employeeNumber(employeeNumber)
                .supervisorID(supervisorID)
                .originalHireDate(originalHireDate)
                .lastHireDate(lastHireDate)
                .dateOfTermination(dateOfTermination)
                .dateOfRetirement(dateOfRetirement)
                .dateTimeCreated(dateTimeCreated)
                .dateTimeChanged(dateTimeChanged)
                .dateLastPayDatePaid(dateLastPayDatePaid)
                .payGroup(payGroup)
                .isHomeCompany(isHomeCompany)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

}
