/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.EmpCompensationDetails;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CompensationDetailsApi
 */
@Disabled
public class CompensationDetailsApiTest {

    private static CompensationDetailsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new CompensationDetailsApi(apiClient);
    }

    /**
     * Get all compensation details by company
     *
     * Get all compensation details by company.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Employee Compensation Details\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/compensation-details?dateInJob&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/compensation-details?dateInJob&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/compensation-details?dateInJob&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/compensation-details?dateInJob&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllByCompanyTest() throws ApiException {
        String companyId = null;
        String companyId2 = null;
        String employeeId = null;
        String primaryJobCode = null;
        String jobGroupCode = null;
        String jobTitle = null;
        String payGroupCode = null;
        String fullTimeOrPartTimeCode = null;
        String salaryOrHourlyCode = null;
        String primaryShiftCode = null;
        String primaryShiftGroupCode = null;
        String dateInJob = null;
        String dateLastPaid = null;
        String datePaidThru = null;
        String isAutoAllocated = null;
        String isAutoPaid = null;
        String isSeasonalWorker = null;
        String isHighlyCompensated = null;
        String isMultipleJob = null;
        String performanceReviewRating = null;
        String performanceReviewType = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpCompensationDetails> response = api.getAllByCompany(companyId)
                .companyId2(companyId2)
                .employeeId(employeeId)
                .primaryJobCode(primaryJobCode)
                .jobGroupCode(jobGroupCode)
                .jobTitle(jobTitle)
                .payGroupCode(payGroupCode)
                .fullTimeOrPartTimeCode(fullTimeOrPartTimeCode)
                .salaryOrHourlyCode(salaryOrHourlyCode)
                .primaryShiftCode(primaryShiftCode)
                .primaryShiftGroupCode(primaryShiftGroupCode)
                .dateInJob(dateInJob)
                .dateLastPaid(dateLastPaid)
                .datePaidThru(datePaidThru)
                .isAutoAllocated(isAutoAllocated)
                .isAutoPaid(isAutoPaid)
                .isSeasonalWorker(isSeasonalWorker)
                .isHighlyCompensated(isHighlyCompensated)
                .isMultipleJob(isMultipleJob)
                .performanceReviewRating(performanceReviewRating)
                .performanceReviewType(performanceReviewType)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all compensation details
     *
     * Get all compensation details.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Employee Compensation Details\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /compensation-details?dateInJob&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /compensation-details?dateInJob&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /compensation-details?dateInJob&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /compensation-details?dateInJob&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllDetailsTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        String primaryJobCode = null;
        String jobGroupCode = null;
        String jobTitle = null;
        String payGroupCode = null;
        String fullTimeOrPartTimeCode = null;
        String salaryOrHourlyCode = null;
        String primaryShiftCode = null;
        String primaryShiftGroupCode = null;
        String dateInJob = null;
        String dateLastPaid = null;
        String datePaidThru = null;
        String isAutoAllocated = null;
        String isAutoPaid = null;
        String isSeasonalWorker = null;
        String isHighlyCompensated = null;
        String isMultipleJob = null;
        String performanceReviewRating = null;
        String performanceReviewType = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpCompensationDetails> response = api.getAllDetails()
                .companyId(companyId)
                .employeeId(employeeId)
                .primaryJobCode(primaryJobCode)
                .jobGroupCode(jobGroupCode)
                .jobTitle(jobTitle)
                .payGroupCode(payGroupCode)
                .fullTimeOrPartTimeCode(fullTimeOrPartTimeCode)
                .salaryOrHourlyCode(salaryOrHourlyCode)
                .primaryShiftCode(primaryShiftCode)
                .primaryShiftGroupCode(primaryShiftGroupCode)
                .dateInJob(dateInJob)
                .dateLastPaid(dateLastPaid)
                .datePaidThru(datePaidThru)
                .isAutoAllocated(isAutoAllocated)
                .isAutoPaid(isAutoPaid)
                .isSeasonalWorker(isSeasonalWorker)
                .isHighlyCompensated(isHighlyCompensated)
                .isMultipleJob(isMultipleJob)
                .performanceReviewRating(performanceReviewRating)
                .performanceReviewType(performanceReviewType)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all compensation details by company and employee
     *
     * Get all compensation details by company and employee.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Employee Compensation Details\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /companies/{companyId}/employees/{employeeId}/compensation-details?dateInJob&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByCompanyAndEmployeeTest() throws ApiException {
        String companyId = null;
        String employeeId = null;
        String companyId2 = null;
        String employeeId2 = null;
        String primaryJobCode = null;
        String jobGroupCode = null;
        String jobTitle = null;
        String payGroupCode = null;
        String fullTimeOrPartTimeCode = null;
        String salaryOrHourlyCode = null;
        String primaryShiftCode = null;
        String primaryShiftGroupCode = null;
        String dateInJob = null;
        String dateLastPaid = null;
        String datePaidThru = null;
        String isAutoAllocated = null;
        String isAutoPaid = null;
        String isSeasonalWorker = null;
        String isHighlyCompensated = null;
        String isMultipleJob = null;
        String performanceReviewRating = null;
        String performanceReviewType = null;
        Integer page = null;
        Integer perPage = null;
        List<EmpCompensationDetails> response = api.getByCompanyAndEmployee(companyId, employeeId)
                .companyId2(companyId2)
                .employeeId2(employeeId2)
                .primaryJobCode(primaryJobCode)
                .jobGroupCode(jobGroupCode)
                .jobTitle(jobTitle)
                .payGroupCode(payGroupCode)
                .fullTimeOrPartTimeCode(fullTimeOrPartTimeCode)
                .salaryOrHourlyCode(salaryOrHourlyCode)
                .primaryShiftCode(primaryShiftCode)
                .primaryShiftGroupCode(primaryShiftGroupCode)
                .dateInJob(dateInJob)
                .dateLastPaid(dateLastPaid)
                .datePaidThru(datePaidThru)
                .isAutoAllocated(isAutoAllocated)
                .isAutoPaid(isAutoPaid)
                .isSeasonalWorker(isSeasonalWorker)
                .isHighlyCompensated(isHighlyCompensated)
                .isMultipleJob(isMultipleJob)
                .performanceReviewRating(performanceReviewRating)
                .performanceReviewType(performanceReviewType)
                .page(page)
                .perPage(perPage)
                .execute();
        // TODO: test validations
    }

    /**
     * Get all compensation details by employee
     *
     * Get all compensation details by employee.  If no pagination parameters specified, the default/max is applied.  Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Employee Compensation Details\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). Correct syntax when using date-time parameters are as follows:  &lt;ul&gt;  &lt;li&gt;less than (&#x3D;&lt;)    &lt;ul&gt;    &lt;li&gt;Example: /compensation-details/{employeeId}?dateInJob&#x3D;&lt;01-01-1900&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;greater than (&#x3D;&gt;)    &lt;ul&gt;    &lt;li&gt;Example: /compensation-details/{employeeId}?dateInJob&#x3D;&gt;01-01-1900&lt;/li&gt;   &lt;/ul&gt;    &lt;/li&gt; &lt;li&gt;equal to (&#x3D;)    &lt;ul&gt;   &lt;li&gt;Example: /compensation-details/{employeeId}?dateInJob&#x3D;01-01-1900&lt;/li&gt;    &lt;/ul&gt;   &lt;/li&gt; &lt;li&gt;between (&#x3D;{minimum date,maximum date})    &lt;ul&gt;   &lt;li&gt;Example: /compensation-details/{employeeId}?dateInJob&#x3D;{01-01-1900,01-01-1901}&lt;/li&gt;    &lt;/ul&gt;    &lt;/li&gt; &lt;/ul&gt; 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByEmployeeTest() throws ApiException {
        String employeeId = null;
        EmpCompensationDetails response = api.getByEmployee(employeeId)
                .execute();
        // TODO: test validations
    }

}
