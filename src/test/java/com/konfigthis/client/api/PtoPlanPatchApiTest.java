/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.PtoPlans;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PtoPlanPatchApi
 */
@Disabled
public class PtoPlanPatchApiTest {

    private static PtoPlanPatchApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new PtoPlanPatchApi(apiClient);
    }

    /**
     * Patch one PTO Plan
     *
     * Allows the ability to update one PTO Plan for an employee. Work Flow or Approvers is not supported. Permissions - Ultipro service account must have \&quot;Edit\&quot; role for the \&quot;PTO Plan Integration\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void onePtoPlanTest() throws ApiException {
        String employeeId = null;
        String companyId = null;
        String ptoPlan = null;
        String companyId = null;
        String employeeId = null;
        String ptoPlan = null;
        Double earned = null;
        Double taken = null;
        Double pendingBalance = null;
        String earnedThroughDate = null;
        String reset = null;
        String pendingMoveDate = null;
        PtoPlans response = api.onePtoPlan(employeeId, companyId, ptoPlan, companyId, employeeId, ptoPlan)
                .earned(earned)
                .taken(taken)
                .pendingBalance(pendingBalance)
                .earnedThroughDate(earnedThroughDate)
                .reset(reset)
                .pendingMoveDate(pendingMoveDate)
                .execute();
        // TODO: test validations
    }

}
