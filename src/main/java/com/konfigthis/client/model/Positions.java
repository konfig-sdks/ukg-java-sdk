/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.PositionsUserDefinedField04;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Positions
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Positions {
  public static final String SERIALIZED_NAME_ALTERNATE_TITLE = "alternateTitle";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_TITLE)
  private String alternateTitle;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_DATE_TIME_CHANGED = "dateTimeChanged";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_CHANGED)
  private OffsetDateTime dateTimeChanged;

  public static final String SERIALIZED_NAME_DATE_TIME_CREATED = "dateTimeCreated";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_CREATED)
  private OffsetDateTime dateTimeCreated;

  public static final String SERIALIZED_NAME_EMPLOYEE_TYPE = "employeeType";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TYPE)
  private String employeeType;

  public static final String SERIALIZED_NAME_EFFECTIVE_START_DATE = "effectiveStartDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_START_DATE)
  private OffsetDateTime effectiveStartDate;

  public static final String SERIALIZED_NAME_EFFECTIVE_STOP_DATE = "effectiveStopDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_STOP_DATE)
  private OffsetDateTime effectiveStopDate;

  public static final String SERIALIZED_NAME_FUND_I_D = "fundID";
  @SerializedName(SERIALIZED_NAME_FUND_I_D)
  private String fundID;

  public static final String SERIALIZED_NAME_GL_SEGMENT = "glSegment";
  @SerializedName(SERIALIZED_NAME_GL_SEGMENT)
  private String glSegment;

  public static final String SERIALIZED_NAME_IS_APPROVED = "isApproved";
  @SerializedName(SERIALIZED_NAME_IS_APPROVED)
  private Boolean isApproved;

  public static final String SERIALIZED_NAME_IS_ELIGIBLE_FOR_BENEFITS = "isEligibleForBenefits";
  @SerializedName(SERIALIZED_NAME_IS_ELIGIBLE_FOR_BENEFITS)
  private Boolean isEligibleForBenefits;

  public static final String SERIALIZED_NAME_IS_PRORATED = "isProrated";
  @SerializedName(SERIALIZED_NAME_IS_PRORATED)
  private Boolean isProrated;

  public static final String SERIALIZED_NAME_JOBCODE = "jobcode";
  @SerializedName(SERIALIZED_NAME_JOBCODE)
  private String jobcode;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL_CODE1 = "organizationLevelCode1";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL_CODE1)
  private String organizationLevelCode1;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL_CODE2 = "organizationLevelCode2";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL_CODE2)
  private String organizationLevelCode2;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL_CODE3 = "organizationLevelCode3";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL_CODE3)
  private String organizationLevelCode3;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL_CODE4 = "organizationLevelCode4";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL_CODE4)
  private String organizationLevelCode4;

  public static final String SERIALIZED_NAME_OVERSTAFFING_ALLOWED = "overstaffingAllowed";
  @SerializedName(SERIALIZED_NAME_OVERSTAFFING_ALLOWED)
  private Boolean overstaffingAllowed;

  public static final String SERIALIZED_NAME_PAY_GROUP_CODE = "payGroupCode";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP_CODE)
  private String payGroupCode;

  public static final String SERIALIZED_NAME_POSITION_CODE = "positionCode";
  @SerializedName(SERIALIZED_NAME_POSITION_CODE)
  private String positionCode;

  public static final String SERIALIZED_NAME_PROJECT_CODE = "projectCode";
  @SerializedName(SERIALIZED_NAME_PROJECT_CODE)
  private String projectCode;

  public static final String SERIALIZED_NAME_SHIFT_GROUP_CODE = "shiftGroupCode";
  @SerializedName(SERIALIZED_NAME_SHIFT_GROUP_CODE)
  private String shiftGroupCode;

  public static final String SERIALIZED_NAME_STATUS_CODE = "statusCode";
  @SerializedName(SERIALIZED_NAME_STATUS_CODE)
  private String statusCode;

  public static final String SERIALIZED_NAME_STATUS_AS_OF_DATE = "statusAsOfDate";
  @SerializedName(SERIALIZED_NAME_STATUS_AS_OF_DATE)
  private OffsetDateTime statusAsOfDate;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD01 = "userDefinedField01";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD01)
  private String userDefinedField01;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD02 = "userDefinedField02";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD02)
  private OffsetDateTime userDefinedField02;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD03 = "userDefinedField03";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD03)
  private Double userDefinedField03;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD04 = "userDefinedField04";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD04)
  private PositionsUserDefinedField04 userDefinedField04;

  public static final String SERIALIZED_NAME_INTEGRATION_RECORD_ID = "integrationRecordId";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_RECORD_ID)
  private String integrationRecordId;

  public Positions() {
  }

  public Positions alternateTitle(String alternateTitle) {
    
    
    
    
    this.alternateTitle = alternateTitle;
    return this;
  }

   /**
   * Get alternateTitle
   * @return alternateTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAlternateTitle() {
    return alternateTitle;
  }


  public void setAlternateTitle(String alternateTitle) {
    
    
    
    this.alternateTitle = alternateTitle;
  }


  public Positions companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public Positions dateTimeChanged(OffsetDateTime dateTimeChanged) {
    
    
    
    
    this.dateTimeChanged = dateTimeChanged;
    return this;
  }

   /**
   * Get dateTimeChanged
   * @return dateTimeChanged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeChanged() {
    return dateTimeChanged;
  }


  public void setDateTimeChanged(OffsetDateTime dateTimeChanged) {
    
    
    
    this.dateTimeChanged = dateTimeChanged;
  }


  public Positions dateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    
    this.dateTimeCreated = dateTimeCreated;
    return this;
  }

   /**
   * Get dateTimeCreated
   * @return dateTimeCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeCreated() {
    return dateTimeCreated;
  }


  public void setDateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    this.dateTimeCreated = dateTimeCreated;
  }


  public Positions employeeType(String employeeType) {
    
    
    
    
    this.employeeType = employeeType;
    return this;
  }

   /**
   * Get employeeType
   * @return employeeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeType() {
    return employeeType;
  }


  public void setEmployeeType(String employeeType) {
    
    
    
    this.employeeType = employeeType;
  }


  public Positions effectiveStartDate(OffsetDateTime effectiveStartDate) {
    
    
    
    
    this.effectiveStartDate = effectiveStartDate;
    return this;
  }

   /**
   * Get effectiveStartDate
   * @return effectiveStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEffectiveStartDate() {
    return effectiveStartDate;
  }


  public void setEffectiveStartDate(OffsetDateTime effectiveStartDate) {
    
    
    
    this.effectiveStartDate = effectiveStartDate;
  }


  public Positions effectiveStopDate(OffsetDateTime effectiveStopDate) {
    
    
    
    
    this.effectiveStopDate = effectiveStopDate;
    return this;
  }

   /**
   * Get effectiveStopDate
   * @return effectiveStopDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEffectiveStopDate() {
    return effectiveStopDate;
  }


  public void setEffectiveStopDate(OffsetDateTime effectiveStopDate) {
    
    
    
    this.effectiveStopDate = effectiveStopDate;
  }


  public Positions fundID(String fundID) {
    
    
    
    
    this.fundID = fundID;
    return this;
  }

   /**
   * Get fundID
   * @return fundID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFundID() {
    return fundID;
  }


  public void setFundID(String fundID) {
    
    
    
    this.fundID = fundID;
  }


  public Positions glSegment(String glSegment) {
    
    
    
    
    this.glSegment = glSegment;
    return this;
  }

   /**
   * Get glSegment
   * @return glSegment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlSegment() {
    return glSegment;
  }


  public void setGlSegment(String glSegment) {
    
    
    
    this.glSegment = glSegment;
  }


  public Positions isApproved(Boolean isApproved) {
    
    
    
    
    this.isApproved = isApproved;
    return this;
  }

   /**
   * Get isApproved
   * @return isApproved
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsApproved() {
    return isApproved;
  }


  public void setIsApproved(Boolean isApproved) {
    
    
    
    this.isApproved = isApproved;
  }


  public Positions isEligibleForBenefits(Boolean isEligibleForBenefits) {
    
    
    
    
    this.isEligibleForBenefits = isEligibleForBenefits;
    return this;
  }

   /**
   * Get isEligibleForBenefits
   * @return isEligibleForBenefits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsEligibleForBenefits() {
    return isEligibleForBenefits;
  }


  public void setIsEligibleForBenefits(Boolean isEligibleForBenefits) {
    
    
    
    this.isEligibleForBenefits = isEligibleForBenefits;
  }


  public Positions isProrated(Boolean isProrated) {
    
    
    
    
    this.isProrated = isProrated;
    return this;
  }

   /**
   * Get isProrated
   * @return isProrated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsProrated() {
    return isProrated;
  }


  public void setIsProrated(Boolean isProrated) {
    
    
    
    this.isProrated = isProrated;
  }


  public Positions jobcode(String jobcode) {
    
    
    
    
    this.jobcode = jobcode;
    return this;
  }

   /**
   * Get jobcode
   * @return jobcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobcode() {
    return jobcode;
  }


  public void setJobcode(String jobcode) {
    
    
    
    this.jobcode = jobcode;
  }


  public Positions locationCode(String locationCode) {
    
    
    
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Get locationCode
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    
    
    
    this.locationCode = locationCode;
  }


  public Positions notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public Positions organizationLevelCode1(String organizationLevelCode1) {
    
    
    
    
    this.organizationLevelCode1 = organizationLevelCode1;
    return this;
  }

   /**
   * Get organizationLevelCode1
   * @return organizationLevelCode1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevelCode1() {
    return organizationLevelCode1;
  }


  public void setOrganizationLevelCode1(String organizationLevelCode1) {
    
    
    
    this.organizationLevelCode1 = organizationLevelCode1;
  }


  public Positions organizationLevelCode2(String organizationLevelCode2) {
    
    
    
    
    this.organizationLevelCode2 = organizationLevelCode2;
    return this;
  }

   /**
   * Get organizationLevelCode2
   * @return organizationLevelCode2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevelCode2() {
    return organizationLevelCode2;
  }


  public void setOrganizationLevelCode2(String organizationLevelCode2) {
    
    
    
    this.organizationLevelCode2 = organizationLevelCode2;
  }


  public Positions organizationLevelCode3(String organizationLevelCode3) {
    
    
    
    
    this.organizationLevelCode3 = organizationLevelCode3;
    return this;
  }

   /**
   * Get organizationLevelCode3
   * @return organizationLevelCode3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevelCode3() {
    return organizationLevelCode3;
  }


  public void setOrganizationLevelCode3(String organizationLevelCode3) {
    
    
    
    this.organizationLevelCode3 = organizationLevelCode3;
  }


  public Positions organizationLevelCode4(String organizationLevelCode4) {
    
    
    
    
    this.organizationLevelCode4 = organizationLevelCode4;
    return this;
  }

   /**
   * Get organizationLevelCode4
   * @return organizationLevelCode4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevelCode4() {
    return organizationLevelCode4;
  }


  public void setOrganizationLevelCode4(String organizationLevelCode4) {
    
    
    
    this.organizationLevelCode4 = organizationLevelCode4;
  }


  public Positions overstaffingAllowed(Boolean overstaffingAllowed) {
    
    
    
    
    this.overstaffingAllowed = overstaffingAllowed;
    return this;
  }

   /**
   * Get overstaffingAllowed
   * @return overstaffingAllowed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getOverstaffingAllowed() {
    return overstaffingAllowed;
  }


  public void setOverstaffingAllowed(Boolean overstaffingAllowed) {
    
    
    
    this.overstaffingAllowed = overstaffingAllowed;
  }


  public Positions payGroupCode(String payGroupCode) {
    
    
    
    
    this.payGroupCode = payGroupCode;
    return this;
  }

   /**
   * Get payGroupCode
   * @return payGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroupCode() {
    return payGroupCode;
  }


  public void setPayGroupCode(String payGroupCode) {
    
    
    
    this.payGroupCode = payGroupCode;
  }


  public Positions positionCode(String positionCode) {
    
    
    
    
    this.positionCode = positionCode;
    return this;
  }

   /**
   * Get positionCode
   * @return positionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPositionCode() {
    return positionCode;
  }


  public void setPositionCode(String positionCode) {
    
    
    
    this.positionCode = positionCode;
  }


  public Positions projectCode(String projectCode) {
    
    
    
    
    this.projectCode = projectCode;
    return this;
  }

   /**
   * Get projectCode
   * @return projectCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjectCode() {
    return projectCode;
  }


  public void setProjectCode(String projectCode) {
    
    
    
    this.projectCode = projectCode;
  }


  public Positions shiftGroupCode(String shiftGroupCode) {
    
    
    
    
    this.shiftGroupCode = shiftGroupCode;
    return this;
  }

   /**
   * Get shiftGroupCode
   * @return shiftGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShiftGroupCode() {
    return shiftGroupCode;
  }


  public void setShiftGroupCode(String shiftGroupCode) {
    
    
    
    this.shiftGroupCode = shiftGroupCode;
  }


  public Positions statusCode(String statusCode) {
    
    
    
    
    this.statusCode = statusCode;
    return this;
  }

   /**
   * Get statusCode
   * @return statusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStatusCode() {
    return statusCode;
  }


  public void setStatusCode(String statusCode) {
    
    
    
    this.statusCode = statusCode;
  }


  public Positions statusAsOfDate(OffsetDateTime statusAsOfDate) {
    
    
    
    
    this.statusAsOfDate = statusAsOfDate;
    return this;
  }

   /**
   * Get statusAsOfDate
   * @return statusAsOfDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStatusAsOfDate() {
    return statusAsOfDate;
  }


  public void setStatusAsOfDate(OffsetDateTime statusAsOfDate) {
    
    
    
    this.statusAsOfDate = statusAsOfDate;
  }


  public Positions userDefinedField01(String userDefinedField01) {
    
    
    
    
    this.userDefinedField01 = userDefinedField01;
    return this;
  }

   /**
   * Get userDefinedField01
   * @return userDefinedField01
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDefinedField01() {
    return userDefinedField01;
  }


  public void setUserDefinedField01(String userDefinedField01) {
    
    
    
    this.userDefinedField01 = userDefinedField01;
  }


  public Positions userDefinedField02(OffsetDateTime userDefinedField02) {
    
    
    
    
    this.userDefinedField02 = userDefinedField02;
    return this;
  }

   /**
   * Get userDefinedField02
   * @return userDefinedField02
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUserDefinedField02() {
    return userDefinedField02;
  }


  public void setUserDefinedField02(OffsetDateTime userDefinedField02) {
    
    
    
    this.userDefinedField02 = userDefinedField02;
  }


  public Positions userDefinedField03(Double userDefinedField03) {
    
    
    
    
    this.userDefinedField03 = userDefinedField03;
    return this;
  }

  public Positions userDefinedField03(Integer userDefinedField03) {
    
    
    
    
    this.userDefinedField03 = userDefinedField03.doubleValue();
    return this;
  }

   /**
   * Get userDefinedField03
   * @return userDefinedField03
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getUserDefinedField03() {
    return userDefinedField03;
  }


  public void setUserDefinedField03(Double userDefinedField03) {
    
    
    
    this.userDefinedField03 = userDefinedField03;
  }


  public Positions userDefinedField04(PositionsUserDefinedField04 userDefinedField04) {
    
    
    
    
    this.userDefinedField04 = userDefinedField04;
    return this;
  }

   /**
   * Get userDefinedField04
   * @return userDefinedField04
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PositionsUserDefinedField04 getUserDefinedField04() {
    return userDefinedField04;
  }


  public void setUserDefinedField04(PositionsUserDefinedField04 userDefinedField04) {
    
    
    
    this.userDefinedField04 = userDefinedField04;
  }


  public Positions integrationRecordId(String integrationRecordId) {
    
    
    
    
    this.integrationRecordId = integrationRecordId;
    return this;
  }

   /**
   * Get integrationRecordId
   * @return integrationRecordId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIntegrationRecordId() {
    return integrationRecordId;
  }


  public void setIntegrationRecordId(String integrationRecordId) {
    
    
    
    this.integrationRecordId = integrationRecordId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Positions instance itself
   */
  public Positions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Positions positions = (Positions) o;
    return Objects.equals(this.alternateTitle, positions.alternateTitle) &&
        Objects.equals(this.companyId, positions.companyId) &&
        Objects.equals(this.dateTimeChanged, positions.dateTimeChanged) &&
        Objects.equals(this.dateTimeCreated, positions.dateTimeCreated) &&
        Objects.equals(this.employeeType, positions.employeeType) &&
        Objects.equals(this.effectiveStartDate, positions.effectiveStartDate) &&
        Objects.equals(this.effectiveStopDate, positions.effectiveStopDate) &&
        Objects.equals(this.fundID, positions.fundID) &&
        Objects.equals(this.glSegment, positions.glSegment) &&
        Objects.equals(this.isApproved, positions.isApproved) &&
        Objects.equals(this.isEligibleForBenefits, positions.isEligibleForBenefits) &&
        Objects.equals(this.isProrated, positions.isProrated) &&
        Objects.equals(this.jobcode, positions.jobcode) &&
        Objects.equals(this.locationCode, positions.locationCode) &&
        Objects.equals(this.notes, positions.notes) &&
        Objects.equals(this.organizationLevelCode1, positions.organizationLevelCode1) &&
        Objects.equals(this.organizationLevelCode2, positions.organizationLevelCode2) &&
        Objects.equals(this.organizationLevelCode3, positions.organizationLevelCode3) &&
        Objects.equals(this.organizationLevelCode4, positions.organizationLevelCode4) &&
        Objects.equals(this.overstaffingAllowed, positions.overstaffingAllowed) &&
        Objects.equals(this.payGroupCode, positions.payGroupCode) &&
        Objects.equals(this.positionCode, positions.positionCode) &&
        Objects.equals(this.projectCode, positions.projectCode) &&
        Objects.equals(this.shiftGroupCode, positions.shiftGroupCode) &&
        Objects.equals(this.statusCode, positions.statusCode) &&
        Objects.equals(this.statusAsOfDate, positions.statusAsOfDate) &&
        Objects.equals(this.userDefinedField01, positions.userDefinedField01) &&
        Objects.equals(this.userDefinedField02, positions.userDefinedField02) &&
        Objects.equals(this.userDefinedField03, positions.userDefinedField03) &&
        Objects.equals(this.userDefinedField04, positions.userDefinedField04) &&
        Objects.equals(this.integrationRecordId, positions.integrationRecordId)&&
        Objects.equals(this.additionalProperties, positions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alternateTitle, companyId, dateTimeChanged, dateTimeCreated, employeeType, effectiveStartDate, effectiveStopDate, fundID, glSegment, isApproved, isEligibleForBenefits, isProrated, jobcode, locationCode, notes, organizationLevelCode1, organizationLevelCode2, organizationLevelCode3, organizationLevelCode4, overstaffingAllowed, payGroupCode, positionCode, projectCode, shiftGroupCode, statusCode, statusAsOfDate, userDefinedField01, userDefinedField02, userDefinedField03, userDefinedField04, integrationRecordId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Positions {\n");
    sb.append("    alternateTitle: ").append(toIndentedString(alternateTitle)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    dateTimeChanged: ").append(toIndentedString(dateTimeChanged)).append("\n");
    sb.append("    dateTimeCreated: ").append(toIndentedString(dateTimeCreated)).append("\n");
    sb.append("    employeeType: ").append(toIndentedString(employeeType)).append("\n");
    sb.append("    effectiveStartDate: ").append(toIndentedString(effectiveStartDate)).append("\n");
    sb.append("    effectiveStopDate: ").append(toIndentedString(effectiveStopDate)).append("\n");
    sb.append("    fundID: ").append(toIndentedString(fundID)).append("\n");
    sb.append("    glSegment: ").append(toIndentedString(glSegment)).append("\n");
    sb.append("    isApproved: ").append(toIndentedString(isApproved)).append("\n");
    sb.append("    isEligibleForBenefits: ").append(toIndentedString(isEligibleForBenefits)).append("\n");
    sb.append("    isProrated: ").append(toIndentedString(isProrated)).append("\n");
    sb.append("    jobcode: ").append(toIndentedString(jobcode)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    organizationLevelCode1: ").append(toIndentedString(organizationLevelCode1)).append("\n");
    sb.append("    organizationLevelCode2: ").append(toIndentedString(organizationLevelCode2)).append("\n");
    sb.append("    organizationLevelCode3: ").append(toIndentedString(organizationLevelCode3)).append("\n");
    sb.append("    organizationLevelCode4: ").append(toIndentedString(organizationLevelCode4)).append("\n");
    sb.append("    overstaffingAllowed: ").append(toIndentedString(overstaffingAllowed)).append("\n");
    sb.append("    payGroupCode: ").append(toIndentedString(payGroupCode)).append("\n");
    sb.append("    positionCode: ").append(toIndentedString(positionCode)).append("\n");
    sb.append("    projectCode: ").append(toIndentedString(projectCode)).append("\n");
    sb.append("    shiftGroupCode: ").append(toIndentedString(shiftGroupCode)).append("\n");
    sb.append("    statusCode: ").append(toIndentedString(statusCode)).append("\n");
    sb.append("    statusAsOfDate: ").append(toIndentedString(statusAsOfDate)).append("\n");
    sb.append("    userDefinedField01: ").append(toIndentedString(userDefinedField01)).append("\n");
    sb.append("    userDefinedField02: ").append(toIndentedString(userDefinedField02)).append("\n");
    sb.append("    userDefinedField03: ").append(toIndentedString(userDefinedField03)).append("\n");
    sb.append("    userDefinedField04: ").append(toIndentedString(userDefinedField04)).append("\n");
    sb.append("    integrationRecordId: ").append(toIndentedString(integrationRecordId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alternateTitle");
    openapiFields.add("companyId");
    openapiFields.add("dateTimeChanged");
    openapiFields.add("dateTimeCreated");
    openapiFields.add("employeeType");
    openapiFields.add("effectiveStartDate");
    openapiFields.add("effectiveStopDate");
    openapiFields.add("fundID");
    openapiFields.add("glSegment");
    openapiFields.add("isApproved");
    openapiFields.add("isEligibleForBenefits");
    openapiFields.add("isProrated");
    openapiFields.add("jobcode");
    openapiFields.add("locationCode");
    openapiFields.add("notes");
    openapiFields.add("organizationLevelCode1");
    openapiFields.add("organizationLevelCode2");
    openapiFields.add("organizationLevelCode3");
    openapiFields.add("organizationLevelCode4");
    openapiFields.add("overstaffingAllowed");
    openapiFields.add("payGroupCode");
    openapiFields.add("positionCode");
    openapiFields.add("projectCode");
    openapiFields.add("shiftGroupCode");
    openapiFields.add("statusCode");
    openapiFields.add("statusAsOfDate");
    openapiFields.add("userDefinedField01");
    openapiFields.add("userDefinedField02");
    openapiFields.add("userDefinedField03");
    openapiFields.add("userDefinedField04");
    openapiFields.add("integrationRecordId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Positions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Positions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Positions is not found in the empty JSON string", Positions.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("alternateTitle") != null && !jsonObj.get("alternateTitle").isJsonNull()) && !jsonObj.get("alternateTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternateTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternateTitle").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("employeeType") != null && !jsonObj.get("employeeType").isJsonNull()) && !jsonObj.get("employeeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeType").toString()));
      }
      if ((jsonObj.get("fundID") != null && !jsonObj.get("fundID").isJsonNull()) && !jsonObj.get("fundID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fundID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fundID").toString()));
      }
      if ((jsonObj.get("glSegment") != null && !jsonObj.get("glSegment").isJsonNull()) && !jsonObj.get("glSegment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `glSegment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("glSegment").toString()));
      }
      if ((jsonObj.get("jobcode") != null && !jsonObj.get("jobcode").isJsonNull()) && !jsonObj.get("jobcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobcode").toString()));
      }
      if ((jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonNull()) && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("organizationLevelCode1") != null && !jsonObj.get("organizationLevelCode1").isJsonNull()) && !jsonObj.get("organizationLevelCode1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevelCode1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevelCode1").toString()));
      }
      if ((jsonObj.get("organizationLevelCode2") != null && !jsonObj.get("organizationLevelCode2").isJsonNull()) && !jsonObj.get("organizationLevelCode2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevelCode2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevelCode2").toString()));
      }
      if ((jsonObj.get("organizationLevelCode3") != null && !jsonObj.get("organizationLevelCode3").isJsonNull()) && !jsonObj.get("organizationLevelCode3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevelCode3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevelCode3").toString()));
      }
      if ((jsonObj.get("organizationLevelCode4") != null && !jsonObj.get("organizationLevelCode4").isJsonNull()) && !jsonObj.get("organizationLevelCode4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevelCode4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevelCode4").toString()));
      }
      if ((jsonObj.get("payGroupCode") != null && !jsonObj.get("payGroupCode").isJsonNull()) && !jsonObj.get("payGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroupCode").toString()));
      }
      if ((jsonObj.get("positionCode") != null && !jsonObj.get("positionCode").isJsonNull()) && !jsonObj.get("positionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionCode").toString()));
      }
      if ((jsonObj.get("projectCode") != null && !jsonObj.get("projectCode").isJsonNull()) && !jsonObj.get("projectCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectCode").toString()));
      }
      if ((jsonObj.get("shiftGroupCode") != null && !jsonObj.get("shiftGroupCode").isJsonNull()) && !jsonObj.get("shiftGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shiftGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shiftGroupCode").toString()));
      }
      if ((jsonObj.get("statusCode") != null && !jsonObj.get("statusCode").isJsonNull()) && !jsonObj.get("statusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `statusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("statusCode").toString()));
      }
      if ((jsonObj.get("userDefinedField01") != null && !jsonObj.get("userDefinedField01").isJsonNull()) && !jsonObj.get("userDefinedField01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDefinedField01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDefinedField01").toString()));
      }
      // validate the optional field `userDefinedField04`
      if (jsonObj.get("userDefinedField04") != null && !jsonObj.get("userDefinedField04").isJsonNull()) {
        PositionsUserDefinedField04.validateJsonObject(jsonObj.getAsJsonObject("userDefinedField04"));
      }
      if ((jsonObj.get("integrationRecordId") != null && !jsonObj.get("integrationRecordId").isJsonNull()) && !jsonObj.get("integrationRecordId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integrationRecordId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integrationRecordId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Positions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Positions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Positions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Positions.class));

       return (TypeAdapter<T>) new TypeAdapter<Positions>() {
           @Override
           public void write(JsonWriter out, Positions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Positions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Positions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Positions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Positions
  * @throws IOException if the JSON string is invalid with respect to Positions
  */
  public static Positions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Positions.class);
  }

 /**
  * Convert an instance of Positions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

