/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PayRegister
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PayRegister {
  public static final String SERIALIZED_NAME_ANNUAL_SALARY = "annualSalary";
  @SerializedName(SERIALIZED_NAME_ANNUAL_SALARY)
  private Double annualSalary;

  public static final String SERIALIZED_NAME_AUTO_ALLOCATE = "autoAllocate";
  @SerializedName(SERIALIZED_NAME_AUTO_ALLOCATE)
  private Boolean autoAllocate;

  public static final String SERIALIZED_NAME_BONUS_TOTAL_HOURS = "bonusTotalHours";
  @SerializedName(SERIALIZED_NAME_BONUS_TOTAL_HOURS)
  private Double bonusTotalHours;

  public static final String SERIALIZED_NAME_BONUS_TOTAL_O_T_HOURS = "bonusTotalOTHours";
  @SerializedName(SERIALIZED_NAME_BONUS_TOTAL_O_T_HOURS)
  private Double bonusTotalOTHours;

  public static final String SERIALIZED_NAME_CHECK_ADD_MODE = "checkAddMode";
  @SerializedName(SERIALIZED_NAME_CHECK_ADD_MODE)
  private String checkAddMode;

  public static final String SERIALIZED_NAME_CHECK_AMOUNT = "checkAmount";
  @SerializedName(SERIALIZED_NAME_CHECK_AMOUNT)
  private Double checkAmount;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_PAY_PERIOD_FREQUENCY = "payPeriodFrequency";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD_FREQUENCY)
  private String payPeriodFrequency;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_DIRECT_DEPOSIT_AMOUNT = "directDepositAmount";
  @SerializedName(SERIALIZED_NAME_DIRECT_DEPOSIT_AMOUNT)
  private Double directDepositAmount;

  public static final String SERIALIZED_NAME_DOCUMENT_NUMBER = "documentNumber";
  @SerializedName(SERIALIZED_NAME_DOCUMENT_NUMBER)
  private String documentNumber;

  public static final String SERIALIZED_NAME_EARNING_TAX_REPORTING_TYPE = "earningTaxReportingType";
  @SerializedName(SERIALIZED_NAME_EARNING_TAX_REPORTING_TYPE)
  private String earningTaxReportingType;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EMPLOYEE_STATUS = "employeeStatus";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_STATUS)
  private String employeeStatus;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_CHECK_ID = "checkId";
  @SerializedName(SERIALIZED_NAME_CHECK_ID)
  private String checkId;

  public static final String SERIALIZED_NAME_HOURLY_PAY_RATE = "hourlyPayRate";
  @SerializedName(SERIALIZED_NAME_HOURLY_PAY_RATE)
  private Double hourlyPayRate;

  public static final String SERIALIZED_NAME_IS_REGULAR_PAY_FOR_CUMULATIVE = "isRegularPayForCumulative";
  @SerializedName(SERIALIZED_NAME_IS_REGULAR_PAY_FOR_CUMULATIVE)
  private String isRegularPayForCumulative;

  public static final String SERIALIZED_NAME_IS_VOIDED = "isVoided";
  @SerializedName(SERIALIZED_NAME_IS_VOIDED)
  private Boolean isVoided;

  public static final String SERIALIZED_NAME_IS_VOIDING_RECORD = "isVoidingRecord";
  @SerializedName(SERIALIZED_NAME_IS_VOIDING_RECORD)
  private Boolean isVoidingRecord;

  public static final String SERIALIZED_NAME_JOB_CODE = "jobCode";
  @SerializedName(SERIALIZED_NAME_JOB_CODE)
  private String jobCode;

  public static final String SERIALIZED_NAME_LAST_REGULAR_PAY_DATE = "lastRegularPayDate";
  @SerializedName(SERIALIZED_NAME_LAST_REGULAR_PAY_DATE)
  private OffsetDateTime lastRegularPayDate;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_NAME_FIRST = "nameFirst";
  @SerializedName(SERIALIZED_NAME_NAME_FIRST)
  private String nameFirst;

  public static final String SERIALIZED_NAME_NAME_LAST = "nameLast";
  @SerializedName(SERIALIZED_NAME_NAME_LAST)
  private String nameLast;

  public static final String SERIALIZED_NAME_NAME_MIDDLE = "nameMiddle";
  @SerializedName(SERIALIZED_NAME_NAME_MIDDLE)
  private String nameMiddle;

  public static final String SERIALIZED_NAME_NAME_SUFFIX = "nameSuffix";
  @SerializedName(SERIALIZED_NAME_NAME_SUFFIX)
  private String nameSuffix;

  public static final String SERIALIZED_NAME_NET_AMOUNT = "netAmount";
  @SerializedName(SERIALIZED_NAME_NET_AMOUNT)
  private Double netAmount;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL1 = "organizationLevel1";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL1)
  private String organizationLevel1;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL2 = "organizationLevel2";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL2)
  private String organizationLevel2;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL3 = "organizationLevel3";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL3)
  private String organizationLevel3;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL4 = "organizationLevel4";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL4)
  private String organizationLevel4;

  public static final String SERIALIZED_NAME_ORIGINAL_PAY_PERIOD_FREQUENCY = "originalPayPeriodFrequency";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_PAY_PERIOD_FREQUENCY)
  private String originalPayPeriodFrequency;

  public static final String SERIALIZED_NAME_PAY_DATE = "payDate";
  @SerializedName(SERIALIZED_NAME_PAY_DATE)
  private OffsetDateTime payDate;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private String payGroup;

  public static final String SERIALIZED_NAME_PERIOD_CONTROL = "periodControl";
  @SerializedName(SERIALIZED_NAME_PERIOD_CONTROL)
  private String periodControl;

  public static final String SERIALIZED_NAME_PERIOD_END_DATE = "periodEndDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_END_DATE)
  private OffsetDateTime periodEndDate;

  public static final String SERIALIZED_NAME_PERIOD_START_DATE = "periodStartDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_START_DATE)
  private OffsetDateTime periodStartDate;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_RECONCILED = "reconciled";
  @SerializedName(SERIALIZED_NAME_RECONCILED)
  private String reconciled;

  public static final String SERIALIZED_NAME_RECONCILE_DATE = "reconcileDate";
  @SerializedName(SERIALIZED_NAME_RECONCILE_DATE)
  private OffsetDateTime reconcileDate;

  public static final String SERIALIZED_NAME_SEQUENCE_NUMBER = "sequenceNumber";
  @SerializedName(SERIALIZED_NAME_SEQUENCE_NUMBER)
  private Integer sequenceNumber;

  public static final String SERIALIZED_NAME_SHIFT = "shift";
  @SerializedName(SERIALIZED_NAME_SHIFT)
  private String shift;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_STATE_SUI = "stateSui";
  @SerializedName(SERIALIZED_NAME_STATE_SUI)
  private String stateSui;

  public static final String SERIALIZED_NAME_SUI_GROSS = "suiGross";
  @SerializedName(SERIALIZED_NAME_SUI_GROSS)
  private Double suiGross;

  public static final String SERIALIZED_NAME_TAX_CALCULATION_GROUP_I_D = "taxCalculationGroupID";
  @SerializedName(SERIALIZED_NAME_TAX_CALCULATION_GROUP_I_D)
  private String taxCalculationGroupID;

  public static final String SERIALIZED_NAME_TAX_CALCULATION_SEQUENCE = "taxCalculationSequence";
  @SerializedName(SERIALIZED_NAME_TAX_CALCULATION_SEQUENCE)
  private String taxCalculationSequence;

  public static final String SERIALIZED_NAME_TOTAL_DEDUCTION_AMOUNT = "totalDeductionAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_DEDUCTION_AMOUNT)
  private Double totalDeductionAmount;

  public static final String SERIALIZED_NAME_TOTAL_EARNINGS_AMOUNT = "totalEarningsAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_EARNINGS_AMOUNT)
  private Double totalEarningsAmount;

  public static final String SERIALIZED_NAME_TOTAL_HOURS = "totalHours";
  @SerializedName(SERIALIZED_NAME_TOTAL_HOURS)
  private Double totalHours;

  public static final String SERIALIZED_NAME_TOTAL_HOURS_WORKED = "totalHoursWorked";
  @SerializedName(SERIALIZED_NAME_TOTAL_HOURS_WORKED)
  private Double totalHoursWorked;

  public static final String SERIALIZED_NAME_TOTAL_SHIFT_AMOUNT = "totalShiftAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_SHIFT_AMOUNT)
  private Double totalShiftAmount;

  public static final String SERIALIZED_NAME_TOTAL_TAX_AMOUNT = "totalTaxAmount";
  @SerializedName(SERIALIZED_NAME_TOTAL_TAX_AMOUNT)
  private Double totalTaxAmount;

  public static final String SERIALIZED_NAME_VOID_DATE = "voidDate";
  @SerializedName(SERIALIZED_NAME_VOID_DATE)
  private OffsetDateTime voidDate;

  public PayRegister() {
  }

  public PayRegister annualSalary(Double annualSalary) {
    
    
    
    
    this.annualSalary = annualSalary;
    return this;
  }

  public PayRegister annualSalary(Integer annualSalary) {
    
    
    
    
    this.annualSalary = annualSalary.doubleValue();
    return this;
  }

   /**
   * Get annualSalary
   * @return annualSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAnnualSalary() {
    return annualSalary;
  }


  public void setAnnualSalary(Double annualSalary) {
    
    
    
    this.annualSalary = annualSalary;
  }


  public PayRegister autoAllocate(Boolean autoAllocate) {
    
    
    
    
    this.autoAllocate = autoAllocate;
    return this;
  }

   /**
   * Get autoAllocate
   * @return autoAllocate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAutoAllocate() {
    return autoAllocate;
  }


  public void setAutoAllocate(Boolean autoAllocate) {
    
    
    
    this.autoAllocate = autoAllocate;
  }


  public PayRegister bonusTotalHours(Double bonusTotalHours) {
    
    
    
    
    this.bonusTotalHours = bonusTotalHours;
    return this;
  }

  public PayRegister bonusTotalHours(Integer bonusTotalHours) {
    
    
    
    
    this.bonusTotalHours = bonusTotalHours.doubleValue();
    return this;
  }

   /**
   * Get bonusTotalHours
   * @return bonusTotalHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBonusTotalHours() {
    return bonusTotalHours;
  }


  public void setBonusTotalHours(Double bonusTotalHours) {
    
    
    
    this.bonusTotalHours = bonusTotalHours;
  }


  public PayRegister bonusTotalOTHours(Double bonusTotalOTHours) {
    
    
    
    
    this.bonusTotalOTHours = bonusTotalOTHours;
    return this;
  }

  public PayRegister bonusTotalOTHours(Integer bonusTotalOTHours) {
    
    
    
    
    this.bonusTotalOTHours = bonusTotalOTHours.doubleValue();
    return this;
  }

   /**
   * Get bonusTotalOTHours
   * @return bonusTotalOTHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBonusTotalOTHours() {
    return bonusTotalOTHours;
  }


  public void setBonusTotalOTHours(Double bonusTotalOTHours) {
    
    
    
    this.bonusTotalOTHours = bonusTotalOTHours;
  }


  public PayRegister checkAddMode(String checkAddMode) {
    
    
    
    
    this.checkAddMode = checkAddMode;
    return this;
  }

   /**
   * Get checkAddMode
   * @return checkAddMode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCheckAddMode() {
    return checkAddMode;
  }


  public void setCheckAddMode(String checkAddMode) {
    
    
    
    this.checkAddMode = checkAddMode;
  }


  public PayRegister checkAmount(Double checkAmount) {
    
    
    
    
    this.checkAmount = checkAmount;
    return this;
  }

  public PayRegister checkAmount(Integer checkAmount) {
    
    
    
    
    this.checkAmount = checkAmount.doubleValue();
    return this;
  }

   /**
   * Get checkAmount
   * @return checkAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCheckAmount() {
    return checkAmount;
  }


  public void setCheckAmount(Double checkAmount) {
    
    
    
    this.checkAmount = checkAmount;
  }


  public PayRegister companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public PayRegister payPeriodFrequency(String payPeriodFrequency) {
    
    
    
    
    this.payPeriodFrequency = payPeriodFrequency;
    return this;
  }

   /**
   * Get payPeriodFrequency
   * @return payPeriodFrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayPeriodFrequency() {
    return payPeriodFrequency;
  }


  public void setPayPeriodFrequency(String payPeriodFrequency) {
    
    
    
    this.payPeriodFrequency = payPeriodFrequency;
  }


  public PayRegister currencyCode(String currencyCode) {
    
    
    
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    
    
    
    this.currencyCode = currencyCode;
  }


  public PayRegister directDepositAmount(Double directDepositAmount) {
    
    
    
    
    this.directDepositAmount = directDepositAmount;
    return this;
  }

  public PayRegister directDepositAmount(Integer directDepositAmount) {
    
    
    
    
    this.directDepositAmount = directDepositAmount.doubleValue();
    return this;
  }

   /**
   * Get directDepositAmount
   * @return directDepositAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDirectDepositAmount() {
    return directDepositAmount;
  }


  public void setDirectDepositAmount(Double directDepositAmount) {
    
    
    
    this.directDepositAmount = directDepositAmount;
  }


  public PayRegister documentNumber(String documentNumber) {
    
    
    
    
    this.documentNumber = documentNumber;
    return this;
  }

   /**
   * Get documentNumber
   * @return documentNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocumentNumber() {
    return documentNumber;
  }


  public void setDocumentNumber(String documentNumber) {
    
    
    
    this.documentNumber = documentNumber;
  }


  public PayRegister earningTaxReportingType(String earningTaxReportingType) {
    
    
    
    
    this.earningTaxReportingType = earningTaxReportingType;
    return this;
  }

   /**
   * Get earningTaxReportingType
   * @return earningTaxReportingType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEarningTaxReportingType() {
    return earningTaxReportingType;
  }


  public void setEarningTaxReportingType(String earningTaxReportingType) {
    
    
    
    this.earningTaxReportingType = earningTaxReportingType;
  }


  public PayRegister employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public PayRegister employeeStatus(String employeeStatus) {
    
    
    
    
    this.employeeStatus = employeeStatus;
    return this;
  }

   /**
   * Get employeeStatus
   * @return employeeStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeStatus() {
    return employeeStatus;
  }


  public void setEmployeeStatus(String employeeStatus) {
    
    
    
    this.employeeStatus = employeeStatus;
  }


  public PayRegister employeeNumber(String employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public PayRegister checkId(String checkId) {
    
    
    
    
    this.checkId = checkId;
    return this;
  }

   /**
   * Get checkId
   * @return checkId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCheckId() {
    return checkId;
  }


  public void setCheckId(String checkId) {
    
    
    
    this.checkId = checkId;
  }


  public PayRegister hourlyPayRate(Double hourlyPayRate) {
    
    
    
    
    this.hourlyPayRate = hourlyPayRate;
    return this;
  }

  public PayRegister hourlyPayRate(Integer hourlyPayRate) {
    
    
    
    
    this.hourlyPayRate = hourlyPayRate.doubleValue();
    return this;
  }

   /**
   * Get hourlyPayRate
   * @return hourlyPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHourlyPayRate() {
    return hourlyPayRate;
  }


  public void setHourlyPayRate(Double hourlyPayRate) {
    
    
    
    this.hourlyPayRate = hourlyPayRate;
  }


  public PayRegister isRegularPayForCumulative(String isRegularPayForCumulative) {
    
    
    
    
    this.isRegularPayForCumulative = isRegularPayForCumulative;
    return this;
  }

   /**
   * Get isRegularPayForCumulative
   * @return isRegularPayForCumulative
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsRegularPayForCumulative() {
    return isRegularPayForCumulative;
  }


  public void setIsRegularPayForCumulative(String isRegularPayForCumulative) {
    
    
    
    this.isRegularPayForCumulative = isRegularPayForCumulative;
  }


  public PayRegister isVoided(Boolean isVoided) {
    
    
    
    
    this.isVoided = isVoided;
    return this;
  }

   /**
   * Get isVoided
   * @return isVoided
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsVoided() {
    return isVoided;
  }


  public void setIsVoided(Boolean isVoided) {
    
    
    
    this.isVoided = isVoided;
  }


  public PayRegister isVoidingRecord(Boolean isVoidingRecord) {
    
    
    
    
    this.isVoidingRecord = isVoidingRecord;
    return this;
  }

   /**
   * Get isVoidingRecord
   * @return isVoidingRecord
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsVoidingRecord() {
    return isVoidingRecord;
  }


  public void setIsVoidingRecord(Boolean isVoidingRecord) {
    
    
    
    this.isVoidingRecord = isVoidingRecord;
  }


  public PayRegister jobCode(String jobCode) {
    
    
    
    
    this.jobCode = jobCode;
    return this;
  }

   /**
   * Get jobCode
   * @return jobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobCode() {
    return jobCode;
  }


  public void setJobCode(String jobCode) {
    
    
    
    this.jobCode = jobCode;
  }


  public PayRegister lastRegularPayDate(OffsetDateTime lastRegularPayDate) {
    
    
    
    
    this.lastRegularPayDate = lastRegularPayDate;
    return this;
  }

   /**
   * Get lastRegularPayDate
   * @return lastRegularPayDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastRegularPayDate() {
    return lastRegularPayDate;
  }


  public void setLastRegularPayDate(OffsetDateTime lastRegularPayDate) {
    
    
    
    this.lastRegularPayDate = lastRegularPayDate;
  }


  public PayRegister locationCode(String locationCode) {
    
    
    
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Get locationCode
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    
    
    
    this.locationCode = locationCode;
  }


  public PayRegister nameFirst(String nameFirst) {
    
    
    
    
    this.nameFirst = nameFirst;
    return this;
  }

   /**
   * Get nameFirst
   * @return nameFirst
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameFirst() {
    return nameFirst;
  }


  public void setNameFirst(String nameFirst) {
    
    
    
    this.nameFirst = nameFirst;
  }


  public PayRegister nameLast(String nameLast) {
    
    
    
    
    this.nameLast = nameLast;
    return this;
  }

   /**
   * Get nameLast
   * @return nameLast
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameLast() {
    return nameLast;
  }


  public void setNameLast(String nameLast) {
    
    
    
    this.nameLast = nameLast;
  }


  public PayRegister nameMiddle(String nameMiddle) {
    
    
    
    
    this.nameMiddle = nameMiddle;
    return this;
  }

   /**
   * Get nameMiddle
   * @return nameMiddle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameMiddle() {
    return nameMiddle;
  }


  public void setNameMiddle(String nameMiddle) {
    
    
    
    this.nameMiddle = nameMiddle;
  }


  public PayRegister nameSuffix(String nameSuffix) {
    
    
    
    
    this.nameSuffix = nameSuffix;
    return this;
  }

   /**
   * Get nameSuffix
   * @return nameSuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameSuffix() {
    return nameSuffix;
  }


  public void setNameSuffix(String nameSuffix) {
    
    
    
    this.nameSuffix = nameSuffix;
  }


  public PayRegister netAmount(Double netAmount) {
    
    
    
    
    this.netAmount = netAmount;
    return this;
  }

  public PayRegister netAmount(Integer netAmount) {
    
    
    
    
    this.netAmount = netAmount.doubleValue();
    return this;
  }

   /**
   * Get netAmount
   * @return netAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getNetAmount() {
    return netAmount;
  }


  public void setNetAmount(Double netAmount) {
    
    
    
    this.netAmount = netAmount;
  }


  public PayRegister organizationLevel1(String organizationLevel1) {
    
    
    
    
    this.organizationLevel1 = organizationLevel1;
    return this;
  }

   /**
   * Get organizationLevel1
   * @return organizationLevel1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevel1() {
    return organizationLevel1;
  }


  public void setOrganizationLevel1(String organizationLevel1) {
    
    
    
    this.organizationLevel1 = organizationLevel1;
  }


  public PayRegister organizationLevel2(String organizationLevel2) {
    
    
    
    
    this.organizationLevel2 = organizationLevel2;
    return this;
  }

   /**
   * Get organizationLevel2
   * @return organizationLevel2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevel2() {
    return organizationLevel2;
  }


  public void setOrganizationLevel2(String organizationLevel2) {
    
    
    
    this.organizationLevel2 = organizationLevel2;
  }


  public PayRegister organizationLevel3(String organizationLevel3) {
    
    
    
    
    this.organizationLevel3 = organizationLevel3;
    return this;
  }

   /**
   * Get organizationLevel3
   * @return organizationLevel3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevel3() {
    return organizationLevel3;
  }


  public void setOrganizationLevel3(String organizationLevel3) {
    
    
    
    this.organizationLevel3 = organizationLevel3;
  }


  public PayRegister organizationLevel4(String organizationLevel4) {
    
    
    
    
    this.organizationLevel4 = organizationLevel4;
    return this;
  }

   /**
   * Get organizationLevel4
   * @return organizationLevel4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevel4() {
    return organizationLevel4;
  }


  public void setOrganizationLevel4(String organizationLevel4) {
    
    
    
    this.organizationLevel4 = organizationLevel4;
  }


  public PayRegister originalPayPeriodFrequency(String originalPayPeriodFrequency) {
    
    
    
    
    this.originalPayPeriodFrequency = originalPayPeriodFrequency;
    return this;
  }

   /**
   * Get originalPayPeriodFrequency
   * @return originalPayPeriodFrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOriginalPayPeriodFrequency() {
    return originalPayPeriodFrequency;
  }


  public void setOriginalPayPeriodFrequency(String originalPayPeriodFrequency) {
    
    
    
    this.originalPayPeriodFrequency = originalPayPeriodFrequency;
  }


  public PayRegister payDate(OffsetDateTime payDate) {
    
    
    
    
    this.payDate = payDate;
    return this;
  }

   /**
   * Get payDate
   * @return payDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPayDate() {
    return payDate;
  }


  public void setPayDate(OffsetDateTime payDate) {
    
    
    
    this.payDate = payDate;
  }


  public PayRegister payGroup(String payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(String payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public PayRegister periodControl(String periodControl) {
    
    
    
    
    this.periodControl = periodControl;
    return this;
  }

   /**
   * Get periodControl
   * @return periodControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodControl() {
    return periodControl;
  }


  public void setPeriodControl(String periodControl) {
    
    
    
    this.periodControl = periodControl;
  }


  public PayRegister periodEndDate(OffsetDateTime periodEndDate) {
    
    
    
    
    this.periodEndDate = periodEndDate;
    return this;
  }

   /**
   * Get periodEndDate
   * @return periodEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPeriodEndDate() {
    return periodEndDate;
  }


  public void setPeriodEndDate(OffsetDateTime periodEndDate) {
    
    
    
    this.periodEndDate = periodEndDate;
  }


  public PayRegister periodStartDate(OffsetDateTime periodStartDate) {
    
    
    
    
    this.periodStartDate = periodStartDate;
    return this;
  }

   /**
   * Get periodStartDate
   * @return periodStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPeriodStartDate() {
    return periodStartDate;
  }


  public void setPeriodStartDate(OffsetDateTime periodStartDate) {
    
    
    
    this.periodStartDate = periodStartDate;
  }


  public PayRegister project(String project) {
    
    
    
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProject() {
    return project;
  }


  public void setProject(String project) {
    
    
    
    this.project = project;
  }


  public PayRegister reconciled(String reconciled) {
    
    
    
    
    this.reconciled = reconciled;
    return this;
  }

   /**
   * Get reconciled
   * @return reconciled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReconciled() {
    return reconciled;
  }


  public void setReconciled(String reconciled) {
    
    
    
    this.reconciled = reconciled;
  }


  public PayRegister reconcileDate(OffsetDateTime reconcileDate) {
    
    
    
    
    this.reconcileDate = reconcileDate;
    return this;
  }

   /**
   * Get reconcileDate
   * @return reconcileDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getReconcileDate() {
    return reconcileDate;
  }


  public void setReconcileDate(OffsetDateTime reconcileDate) {
    
    
    
    this.reconcileDate = reconcileDate;
  }


  public PayRegister sequenceNumber(Integer sequenceNumber) {
    
    
    
    
    this.sequenceNumber = sequenceNumber;
    return this;
  }

   /**
   * Get sequenceNumber
   * @return sequenceNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSequenceNumber() {
    return sequenceNumber;
  }


  public void setSequenceNumber(Integer sequenceNumber) {
    
    
    
    this.sequenceNumber = sequenceNumber;
  }


  public PayRegister shift(String shift) {
    
    
    
    
    this.shift = shift;
    return this;
  }

   /**
   * Get shift
   * @return shift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShift() {
    return shift;
  }


  public void setShift(String shift) {
    
    
    
    this.shift = shift;
  }


  public PayRegister ssn(String ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSsn() {
    return ssn;
  }


  public void setSsn(String ssn) {
    
    
    
    this.ssn = ssn;
  }


  public PayRegister stateSui(String stateSui) {
    
    
    
    
    this.stateSui = stateSui;
    return this;
  }

   /**
   * Get stateSui
   * @return stateSui
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStateSui() {
    return stateSui;
  }


  public void setStateSui(String stateSui) {
    
    
    
    this.stateSui = stateSui;
  }


  public PayRegister suiGross(Double suiGross) {
    
    
    
    
    this.suiGross = suiGross;
    return this;
  }

  public PayRegister suiGross(Integer suiGross) {
    
    
    
    
    this.suiGross = suiGross.doubleValue();
    return this;
  }

   /**
   * Get suiGross
   * @return suiGross
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getSuiGross() {
    return suiGross;
  }


  public void setSuiGross(Double suiGross) {
    
    
    
    this.suiGross = suiGross;
  }


  public PayRegister taxCalculationGroupID(String taxCalculationGroupID) {
    
    
    
    
    this.taxCalculationGroupID = taxCalculationGroupID;
    return this;
  }

   /**
   * Get taxCalculationGroupID
   * @return taxCalculationGroupID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalculationGroupID() {
    return taxCalculationGroupID;
  }


  public void setTaxCalculationGroupID(String taxCalculationGroupID) {
    
    
    
    this.taxCalculationGroupID = taxCalculationGroupID;
  }


  public PayRegister taxCalculationSequence(String taxCalculationSequence) {
    
    
    
    
    this.taxCalculationSequence = taxCalculationSequence;
    return this;
  }

   /**
   * Get taxCalculationSequence
   * @return taxCalculationSequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalculationSequence() {
    return taxCalculationSequence;
  }


  public void setTaxCalculationSequence(String taxCalculationSequence) {
    
    
    
    this.taxCalculationSequence = taxCalculationSequence;
  }


  public PayRegister totalDeductionAmount(Double totalDeductionAmount) {
    
    
    
    
    this.totalDeductionAmount = totalDeductionAmount;
    return this;
  }

  public PayRegister totalDeductionAmount(Integer totalDeductionAmount) {
    
    
    
    
    this.totalDeductionAmount = totalDeductionAmount.doubleValue();
    return this;
  }

   /**
   * Get totalDeductionAmount
   * @return totalDeductionAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalDeductionAmount() {
    return totalDeductionAmount;
  }


  public void setTotalDeductionAmount(Double totalDeductionAmount) {
    
    
    
    this.totalDeductionAmount = totalDeductionAmount;
  }


  public PayRegister totalEarningsAmount(Double totalEarningsAmount) {
    
    
    
    
    this.totalEarningsAmount = totalEarningsAmount;
    return this;
  }

  public PayRegister totalEarningsAmount(Integer totalEarningsAmount) {
    
    
    
    
    this.totalEarningsAmount = totalEarningsAmount.doubleValue();
    return this;
  }

   /**
   * Get totalEarningsAmount
   * @return totalEarningsAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalEarningsAmount() {
    return totalEarningsAmount;
  }


  public void setTotalEarningsAmount(Double totalEarningsAmount) {
    
    
    
    this.totalEarningsAmount = totalEarningsAmount;
  }


  public PayRegister totalHours(Double totalHours) {
    
    
    
    
    this.totalHours = totalHours;
    return this;
  }

  public PayRegister totalHours(Integer totalHours) {
    
    
    
    
    this.totalHours = totalHours.doubleValue();
    return this;
  }

   /**
   * Get totalHours
   * @return totalHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalHours() {
    return totalHours;
  }


  public void setTotalHours(Double totalHours) {
    
    
    
    this.totalHours = totalHours;
  }


  public PayRegister totalHoursWorked(Double totalHoursWorked) {
    
    
    
    
    this.totalHoursWorked = totalHoursWorked;
    return this;
  }

  public PayRegister totalHoursWorked(Integer totalHoursWorked) {
    
    
    
    
    this.totalHoursWorked = totalHoursWorked.doubleValue();
    return this;
  }

   /**
   * Get totalHoursWorked
   * @return totalHoursWorked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalHoursWorked() {
    return totalHoursWorked;
  }


  public void setTotalHoursWorked(Double totalHoursWorked) {
    
    
    
    this.totalHoursWorked = totalHoursWorked;
  }


  public PayRegister totalShiftAmount(Double totalShiftAmount) {
    
    
    
    
    this.totalShiftAmount = totalShiftAmount;
    return this;
  }

  public PayRegister totalShiftAmount(Integer totalShiftAmount) {
    
    
    
    
    this.totalShiftAmount = totalShiftAmount.doubleValue();
    return this;
  }

   /**
   * Get totalShiftAmount
   * @return totalShiftAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalShiftAmount() {
    return totalShiftAmount;
  }


  public void setTotalShiftAmount(Double totalShiftAmount) {
    
    
    
    this.totalShiftAmount = totalShiftAmount;
  }


  public PayRegister totalTaxAmount(Double totalTaxAmount) {
    
    
    
    
    this.totalTaxAmount = totalTaxAmount;
    return this;
  }

  public PayRegister totalTaxAmount(Integer totalTaxAmount) {
    
    
    
    
    this.totalTaxAmount = totalTaxAmount.doubleValue();
    return this;
  }

   /**
   * Get totalTaxAmount
   * @return totalTaxAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTotalTaxAmount() {
    return totalTaxAmount;
  }


  public void setTotalTaxAmount(Double totalTaxAmount) {
    
    
    
    this.totalTaxAmount = totalTaxAmount;
  }


  public PayRegister voidDate(OffsetDateTime voidDate) {
    
    
    
    
    this.voidDate = voidDate;
    return this;
  }

   /**
   * Get voidDate
   * @return voidDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getVoidDate() {
    return voidDate;
  }


  public void setVoidDate(OffsetDateTime voidDate) {
    
    
    
    this.voidDate = voidDate;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PayRegister instance itself
   */
  public PayRegister putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayRegister payRegister = (PayRegister) o;
    return Objects.equals(this.annualSalary, payRegister.annualSalary) &&
        Objects.equals(this.autoAllocate, payRegister.autoAllocate) &&
        Objects.equals(this.bonusTotalHours, payRegister.bonusTotalHours) &&
        Objects.equals(this.bonusTotalOTHours, payRegister.bonusTotalOTHours) &&
        Objects.equals(this.checkAddMode, payRegister.checkAddMode) &&
        Objects.equals(this.checkAmount, payRegister.checkAmount) &&
        Objects.equals(this.companyId, payRegister.companyId) &&
        Objects.equals(this.payPeriodFrequency, payRegister.payPeriodFrequency) &&
        Objects.equals(this.currencyCode, payRegister.currencyCode) &&
        Objects.equals(this.directDepositAmount, payRegister.directDepositAmount) &&
        Objects.equals(this.documentNumber, payRegister.documentNumber) &&
        Objects.equals(this.earningTaxReportingType, payRegister.earningTaxReportingType) &&
        Objects.equals(this.employeeId, payRegister.employeeId) &&
        Objects.equals(this.employeeStatus, payRegister.employeeStatus) &&
        Objects.equals(this.employeeNumber, payRegister.employeeNumber) &&
        Objects.equals(this.checkId, payRegister.checkId) &&
        Objects.equals(this.hourlyPayRate, payRegister.hourlyPayRate) &&
        Objects.equals(this.isRegularPayForCumulative, payRegister.isRegularPayForCumulative) &&
        Objects.equals(this.isVoided, payRegister.isVoided) &&
        Objects.equals(this.isVoidingRecord, payRegister.isVoidingRecord) &&
        Objects.equals(this.jobCode, payRegister.jobCode) &&
        Objects.equals(this.lastRegularPayDate, payRegister.lastRegularPayDate) &&
        Objects.equals(this.locationCode, payRegister.locationCode) &&
        Objects.equals(this.nameFirst, payRegister.nameFirst) &&
        Objects.equals(this.nameLast, payRegister.nameLast) &&
        Objects.equals(this.nameMiddle, payRegister.nameMiddle) &&
        Objects.equals(this.nameSuffix, payRegister.nameSuffix) &&
        Objects.equals(this.netAmount, payRegister.netAmount) &&
        Objects.equals(this.organizationLevel1, payRegister.organizationLevel1) &&
        Objects.equals(this.organizationLevel2, payRegister.organizationLevel2) &&
        Objects.equals(this.organizationLevel3, payRegister.organizationLevel3) &&
        Objects.equals(this.organizationLevel4, payRegister.organizationLevel4) &&
        Objects.equals(this.originalPayPeriodFrequency, payRegister.originalPayPeriodFrequency) &&
        Objects.equals(this.payDate, payRegister.payDate) &&
        Objects.equals(this.payGroup, payRegister.payGroup) &&
        Objects.equals(this.periodControl, payRegister.periodControl) &&
        Objects.equals(this.periodEndDate, payRegister.periodEndDate) &&
        Objects.equals(this.periodStartDate, payRegister.periodStartDate) &&
        Objects.equals(this.project, payRegister.project) &&
        Objects.equals(this.reconciled, payRegister.reconciled) &&
        Objects.equals(this.reconcileDate, payRegister.reconcileDate) &&
        Objects.equals(this.sequenceNumber, payRegister.sequenceNumber) &&
        Objects.equals(this.shift, payRegister.shift) &&
        Objects.equals(this.ssn, payRegister.ssn) &&
        Objects.equals(this.stateSui, payRegister.stateSui) &&
        Objects.equals(this.suiGross, payRegister.suiGross) &&
        Objects.equals(this.taxCalculationGroupID, payRegister.taxCalculationGroupID) &&
        Objects.equals(this.taxCalculationSequence, payRegister.taxCalculationSequence) &&
        Objects.equals(this.totalDeductionAmount, payRegister.totalDeductionAmount) &&
        Objects.equals(this.totalEarningsAmount, payRegister.totalEarningsAmount) &&
        Objects.equals(this.totalHours, payRegister.totalHours) &&
        Objects.equals(this.totalHoursWorked, payRegister.totalHoursWorked) &&
        Objects.equals(this.totalShiftAmount, payRegister.totalShiftAmount) &&
        Objects.equals(this.totalTaxAmount, payRegister.totalTaxAmount) &&
        Objects.equals(this.voidDate, payRegister.voidDate)&&
        Objects.equals(this.additionalProperties, payRegister.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annualSalary, autoAllocate, bonusTotalHours, bonusTotalOTHours, checkAddMode, checkAmount, companyId, payPeriodFrequency, currencyCode, directDepositAmount, documentNumber, earningTaxReportingType, employeeId, employeeStatus, employeeNumber, checkId, hourlyPayRate, isRegularPayForCumulative, isVoided, isVoidingRecord, jobCode, lastRegularPayDate, locationCode, nameFirst, nameLast, nameMiddle, nameSuffix, netAmount, organizationLevel1, organizationLevel2, organizationLevel3, organizationLevel4, originalPayPeriodFrequency, payDate, payGroup, periodControl, periodEndDate, periodStartDate, project, reconciled, reconcileDate, sequenceNumber, shift, ssn, stateSui, suiGross, taxCalculationGroupID, taxCalculationSequence, totalDeductionAmount, totalEarningsAmount, totalHours, totalHoursWorked, totalShiftAmount, totalTaxAmount, voidDate, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayRegister {\n");
    sb.append("    annualSalary: ").append(toIndentedString(annualSalary)).append("\n");
    sb.append("    autoAllocate: ").append(toIndentedString(autoAllocate)).append("\n");
    sb.append("    bonusTotalHours: ").append(toIndentedString(bonusTotalHours)).append("\n");
    sb.append("    bonusTotalOTHours: ").append(toIndentedString(bonusTotalOTHours)).append("\n");
    sb.append("    checkAddMode: ").append(toIndentedString(checkAddMode)).append("\n");
    sb.append("    checkAmount: ").append(toIndentedString(checkAmount)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    payPeriodFrequency: ").append(toIndentedString(payPeriodFrequency)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    directDepositAmount: ").append(toIndentedString(directDepositAmount)).append("\n");
    sb.append("    documentNumber: ").append(toIndentedString(documentNumber)).append("\n");
    sb.append("    earningTaxReportingType: ").append(toIndentedString(earningTaxReportingType)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    employeeStatus: ").append(toIndentedString(employeeStatus)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    checkId: ").append(toIndentedString(checkId)).append("\n");
    sb.append("    hourlyPayRate: ").append(toIndentedString(hourlyPayRate)).append("\n");
    sb.append("    isRegularPayForCumulative: ").append(toIndentedString(isRegularPayForCumulative)).append("\n");
    sb.append("    isVoided: ").append(toIndentedString(isVoided)).append("\n");
    sb.append("    isVoidingRecord: ").append(toIndentedString(isVoidingRecord)).append("\n");
    sb.append("    jobCode: ").append(toIndentedString(jobCode)).append("\n");
    sb.append("    lastRegularPayDate: ").append(toIndentedString(lastRegularPayDate)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    nameFirst: ").append(toIndentedString(nameFirst)).append("\n");
    sb.append("    nameLast: ").append(toIndentedString(nameLast)).append("\n");
    sb.append("    nameMiddle: ").append(toIndentedString(nameMiddle)).append("\n");
    sb.append("    nameSuffix: ").append(toIndentedString(nameSuffix)).append("\n");
    sb.append("    netAmount: ").append(toIndentedString(netAmount)).append("\n");
    sb.append("    organizationLevel1: ").append(toIndentedString(organizationLevel1)).append("\n");
    sb.append("    organizationLevel2: ").append(toIndentedString(organizationLevel2)).append("\n");
    sb.append("    organizationLevel3: ").append(toIndentedString(organizationLevel3)).append("\n");
    sb.append("    organizationLevel4: ").append(toIndentedString(organizationLevel4)).append("\n");
    sb.append("    originalPayPeriodFrequency: ").append(toIndentedString(originalPayPeriodFrequency)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    periodControl: ").append(toIndentedString(periodControl)).append("\n");
    sb.append("    periodEndDate: ").append(toIndentedString(periodEndDate)).append("\n");
    sb.append("    periodStartDate: ").append(toIndentedString(periodStartDate)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    reconciled: ").append(toIndentedString(reconciled)).append("\n");
    sb.append("    reconcileDate: ").append(toIndentedString(reconcileDate)).append("\n");
    sb.append("    sequenceNumber: ").append(toIndentedString(sequenceNumber)).append("\n");
    sb.append("    shift: ").append(toIndentedString(shift)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    stateSui: ").append(toIndentedString(stateSui)).append("\n");
    sb.append("    suiGross: ").append(toIndentedString(suiGross)).append("\n");
    sb.append("    taxCalculationGroupID: ").append(toIndentedString(taxCalculationGroupID)).append("\n");
    sb.append("    taxCalculationSequence: ").append(toIndentedString(taxCalculationSequence)).append("\n");
    sb.append("    totalDeductionAmount: ").append(toIndentedString(totalDeductionAmount)).append("\n");
    sb.append("    totalEarningsAmount: ").append(toIndentedString(totalEarningsAmount)).append("\n");
    sb.append("    totalHours: ").append(toIndentedString(totalHours)).append("\n");
    sb.append("    totalHoursWorked: ").append(toIndentedString(totalHoursWorked)).append("\n");
    sb.append("    totalShiftAmount: ").append(toIndentedString(totalShiftAmount)).append("\n");
    sb.append("    totalTaxAmount: ").append(toIndentedString(totalTaxAmount)).append("\n");
    sb.append("    voidDate: ").append(toIndentedString(voidDate)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annualSalary");
    openapiFields.add("autoAllocate");
    openapiFields.add("bonusTotalHours");
    openapiFields.add("bonusTotalOTHours");
    openapiFields.add("checkAddMode");
    openapiFields.add("checkAmount");
    openapiFields.add("companyId");
    openapiFields.add("payPeriodFrequency");
    openapiFields.add("currencyCode");
    openapiFields.add("directDepositAmount");
    openapiFields.add("documentNumber");
    openapiFields.add("earningTaxReportingType");
    openapiFields.add("employeeId");
    openapiFields.add("employeeStatus");
    openapiFields.add("employeeNumber");
    openapiFields.add("checkId");
    openapiFields.add("hourlyPayRate");
    openapiFields.add("isRegularPayForCumulative");
    openapiFields.add("isVoided");
    openapiFields.add("isVoidingRecord");
    openapiFields.add("jobCode");
    openapiFields.add("lastRegularPayDate");
    openapiFields.add("locationCode");
    openapiFields.add("nameFirst");
    openapiFields.add("nameLast");
    openapiFields.add("nameMiddle");
    openapiFields.add("nameSuffix");
    openapiFields.add("netAmount");
    openapiFields.add("organizationLevel1");
    openapiFields.add("organizationLevel2");
    openapiFields.add("organizationLevel3");
    openapiFields.add("organizationLevel4");
    openapiFields.add("originalPayPeriodFrequency");
    openapiFields.add("payDate");
    openapiFields.add("payGroup");
    openapiFields.add("periodControl");
    openapiFields.add("periodEndDate");
    openapiFields.add("periodStartDate");
    openapiFields.add("project");
    openapiFields.add("reconciled");
    openapiFields.add("reconcileDate");
    openapiFields.add("sequenceNumber");
    openapiFields.add("shift");
    openapiFields.add("ssn");
    openapiFields.add("stateSui");
    openapiFields.add("suiGross");
    openapiFields.add("taxCalculationGroupID");
    openapiFields.add("taxCalculationSequence");
    openapiFields.add("totalDeductionAmount");
    openapiFields.add("totalEarningsAmount");
    openapiFields.add("totalHours");
    openapiFields.add("totalHoursWorked");
    openapiFields.add("totalShiftAmount");
    openapiFields.add("totalTaxAmount");
    openapiFields.add("voidDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PayRegister
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PayRegister.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PayRegister is not found in the empty JSON string", PayRegister.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("checkAddMode") != null && !jsonObj.get("checkAddMode").isJsonNull()) && !jsonObj.get("checkAddMode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkAddMode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkAddMode").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("payPeriodFrequency") != null && !jsonObj.get("payPeriodFrequency").isJsonNull()) && !jsonObj.get("payPeriodFrequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payPeriodFrequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payPeriodFrequency").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("documentNumber") != null && !jsonObj.get("documentNumber").isJsonNull()) && !jsonObj.get("documentNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `documentNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("documentNumber").toString()));
      }
      if ((jsonObj.get("earningTaxReportingType") != null && !jsonObj.get("earningTaxReportingType").isJsonNull()) && !jsonObj.get("earningTaxReportingType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `earningTaxReportingType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("earningTaxReportingType").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("employeeStatus") != null && !jsonObj.get("employeeStatus").isJsonNull()) && !jsonObj.get("employeeStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeStatus").toString()));
      }
      if ((jsonObj.get("employeeNumber") != null && !jsonObj.get("employeeNumber").isJsonNull()) && !jsonObj.get("employeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeNumber").toString()));
      }
      if ((jsonObj.get("checkId") != null && !jsonObj.get("checkId").isJsonNull()) && !jsonObj.get("checkId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkId").toString()));
      }
      if ((jsonObj.get("isRegularPayForCumulative") != null && !jsonObj.get("isRegularPayForCumulative").isJsonNull()) && !jsonObj.get("isRegularPayForCumulative").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isRegularPayForCumulative` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isRegularPayForCumulative").toString()));
      }
      if ((jsonObj.get("jobCode") != null && !jsonObj.get("jobCode").isJsonNull()) && !jsonObj.get("jobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobCode").toString()));
      }
      if ((jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonNull()) && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      if ((jsonObj.get("nameFirst") != null && !jsonObj.get("nameFirst").isJsonNull()) && !jsonObj.get("nameFirst").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nameFirst` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nameFirst").toString()));
      }
      if ((jsonObj.get("nameLast") != null && !jsonObj.get("nameLast").isJsonNull()) && !jsonObj.get("nameLast").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nameLast` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nameLast").toString()));
      }
      if ((jsonObj.get("nameMiddle") != null && !jsonObj.get("nameMiddle").isJsonNull()) && !jsonObj.get("nameMiddle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nameMiddle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nameMiddle").toString()));
      }
      if ((jsonObj.get("nameSuffix") != null && !jsonObj.get("nameSuffix").isJsonNull()) && !jsonObj.get("nameSuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nameSuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nameSuffix").toString()));
      }
      if ((jsonObj.get("organizationLevel1") != null && !jsonObj.get("organizationLevel1").isJsonNull()) && !jsonObj.get("organizationLevel1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevel1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevel1").toString()));
      }
      if ((jsonObj.get("organizationLevel2") != null && !jsonObj.get("organizationLevel2").isJsonNull()) && !jsonObj.get("organizationLevel2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevel2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevel2").toString()));
      }
      if ((jsonObj.get("organizationLevel3") != null && !jsonObj.get("organizationLevel3").isJsonNull()) && !jsonObj.get("organizationLevel3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevel3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevel3").toString()));
      }
      if ((jsonObj.get("organizationLevel4") != null && !jsonObj.get("organizationLevel4").isJsonNull()) && !jsonObj.get("organizationLevel4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevel4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevel4").toString()));
      }
      if ((jsonObj.get("originalPayPeriodFrequency") != null && !jsonObj.get("originalPayPeriodFrequency").isJsonNull()) && !jsonObj.get("originalPayPeriodFrequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalPayPeriodFrequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalPayPeriodFrequency").toString()));
      }
      if ((jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) && !jsonObj.get("payGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroup").toString()));
      }
      if ((jsonObj.get("periodControl") != null && !jsonObj.get("periodControl").isJsonNull()) && !jsonObj.get("periodControl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodControl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodControl").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
      if ((jsonObj.get("reconciled") != null && !jsonObj.get("reconciled").isJsonNull()) && !jsonObj.get("reconciled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reconciled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reconciled").toString()));
      }
      if ((jsonObj.get("shift") != null && !jsonObj.get("shift").isJsonNull()) && !jsonObj.get("shift").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shift` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shift").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("stateSui") != null && !jsonObj.get("stateSui").isJsonNull()) && !jsonObj.get("stateSui").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateSui` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateSui").toString()));
      }
      if ((jsonObj.get("taxCalculationGroupID") != null && !jsonObj.get("taxCalculationGroupID").isJsonNull()) && !jsonObj.get("taxCalculationGroupID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalculationGroupID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalculationGroupID").toString()));
      }
      if ((jsonObj.get("taxCalculationSequence") != null && !jsonObj.get("taxCalculationSequence").isJsonNull()) && !jsonObj.get("taxCalculationSequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalculationSequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalculationSequence").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PayRegister.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PayRegister' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PayRegister> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PayRegister.class));

       return (TypeAdapter<T>) new TypeAdapter<PayRegister>() {
           @Override
           public void write(JsonWriter out, PayRegister value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PayRegister read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PayRegister instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PayRegister given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PayRegister
  * @throws IOException if the JSON string is invalid with respect to PayRegister
  */
  public static PayRegister fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PayRegister.class);
  }

 /**
  * Convert an instance of PayRegister to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

