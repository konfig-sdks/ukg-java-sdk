/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * OpenEnrollmentDependentDeductions
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class OpenEnrollmentDependentDeductions {
  public static final String SERIALIZED_NAME_BENEFIT_AMOUNT = "benefitAmount";
  @SerializedName(SERIALIZED_NAME_BENEFIT_AMOUNT)
  private Double benefitAmount;

  public static final String SERIALIZED_NAME_CHANGE_REASON = "changeReason";
  @SerializedName(SERIALIZED_NAME_CHANGE_REASON)
  private String changeReason;

  public static final String SERIALIZED_NAME_RELATIONSHIP = "relationship";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP)
  private String relationship;

  public static final String SERIALIZED_NAME_BENEFIT_START_DATE = "benefitStartDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_START_DATE)
  private OffsetDateTime benefitStartDate;

  public static final String SERIALIZED_NAME_BENEFIT_STATUS = "benefitStatus";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STATUS)
  private String benefitStatus;

  public static final String SERIALIZED_NAME_BENEFIT_STATUS_DATE = "benefitStatusDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STATUS_DATE)
  private OffsetDateTime benefitStatusDate;

  public static final String SERIALIZED_NAME_BENEFIT_STOP_DATE = "benefitStopDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STOP_DATE)
  private OffsetDateTime benefitStopDate;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_CHANGE_DATETIME = "changeDatetime";
  @SerializedName(SERIALIZED_NAME_CHANGE_DATETIME)
  private OffsetDateTime changeDatetime;

  public static final String SERIALIZED_NAME_CONTACT_ID = "contactId";
  @SerializedName(SERIALIZED_NAME_CONTACT_ID)
  private String contactId;

  public static final String SERIALIZED_NAME_CREATE_DATETIME = "createDatetime";
  @SerializedName(SERIALIZED_NAME_CREATE_DATETIME)
  private OffsetDateTime createDatetime;

  public static final String SERIALIZED_NAME_CERTIFICATE_NO = "certificateNo";
  @SerializedName(SERIALIZED_NAME_CERTIFICATE_NO)
  private String certificateNo;

  public static final String SERIALIZED_NAME_CURRENT_CO_ID = "currentCoId";
  @SerializedName(SERIALIZED_NAME_CURRENT_CO_ID)
  private String currentCoId;

  public static final String SERIALIZED_NAME_DECLINED_BY_CARRIER = "declinedByCarrier";
  @SerializedName(SERIALIZED_NAME_DECLINED_BY_CARRIER)
  private String declinedByCarrier;

  public static final String SERIALIZED_NAME_DECLINED_BY_CARRIER_DATE = "declinedByCarrierDate";
  @SerializedName(SERIALIZED_NAME_DECLINED_BY_CARRIER_DATE)
  private OffsetDateTime declinedByCarrierDate;

  public static final String SERIALIZED_NAME_DECLINED_BY_CARRIER_REASON = "declinedByCarrierReason";
  @SerializedName(SERIALIZED_NAME_DECLINED_BY_CARRIER_REASON)
  private String declinedByCarrierReason;

  public static final String SERIALIZED_NAME_DEDUCTION_CODE = "deductionCode";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_CODE)
  private String deductionCode;

  public static final String SERIALIZED_NAME_DEDUCTION_TYPE = "deductionType";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_TYPE)
  private String deductionType;

  public static final String SERIALIZED_NAME_DEP_B_PLAN_T_V_I_D = "depBPlanTVID";
  @SerializedName(SERIALIZED_NAME_DEP_B_PLAN_T_V_I_D)
  private Double depBPlanTVID;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EVIDENCEOF_INSURABILITY_DATE = "evidenceofInsurabilityDate";
  @SerializedName(SERIALIZED_NAME_EVIDENCEOF_INSURABILITY_DATE)
  private OffsetDateTime evidenceofInsurabilityDate;

  public static final String SERIALIZED_NAME_NEED_EVIDENCE_OF_INSURABILITY = "needEvidenceOfInsurability";
  @SerializedName(SERIALIZED_NAME_NEED_EVIDENCE_OF_INSURABILITY)
  private Boolean needEvidenceOfInsurability;

  public static final String SERIALIZED_NAME_EMPLOYER_AMOUNT = "employerAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_AMOUNT)
  private Double employerAmount;

  public static final String SERIALIZED_NAME_DEDUCTION_NOTES = "deductionNotes";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_NOTES)
  private String deductionNotes;

  public static final String SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN = "primaryCarePhysician";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN)
  private String primaryCarePhysician;

  public static final String SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN_ID = "primaryCarePhysicianId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN_ID)
  private String primaryCarePhysicianId;

  public static final String SERIALIZED_NAME_SYSTEM_ID = "systemId";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ID)
  private String systemId;

  public static final String SERIALIZED_NAME_IS_BENEFIT_WAIVED = "isBenefitWaived";
  @SerializedName(SERIALIZED_NAME_IS_BENEFIT_WAIVED)
  private Boolean isBenefitWaived;

  public static final String SERIALIZED_NAME_OE_DROP = "oeDrop";
  @SerializedName(SERIALIZED_NAME_OE_DROP)
  private Boolean oeDrop;

  public OpenEnrollmentDependentDeductions() {
  }

  public OpenEnrollmentDependentDeductions benefitAmount(Double benefitAmount) {
    
    
    
    
    this.benefitAmount = benefitAmount;
    return this;
  }

  public OpenEnrollmentDependentDeductions benefitAmount(Integer benefitAmount) {
    
    
    
    
    this.benefitAmount = benefitAmount.doubleValue();
    return this;
  }

   /**
   * Get benefitAmount
   * @return benefitAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBenefitAmount() {
    return benefitAmount;
  }


  public void setBenefitAmount(Double benefitAmount) {
    
    
    
    this.benefitAmount = benefitAmount;
  }


  public OpenEnrollmentDependentDeductions changeReason(String changeReason) {
    
    
    
    
    this.changeReason = changeReason;
    return this;
  }

   /**
   * Get changeReason
   * @return changeReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChangeReason() {
    return changeReason;
  }


  public void setChangeReason(String changeReason) {
    
    
    
    this.changeReason = changeReason;
  }


  public OpenEnrollmentDependentDeductions relationship(String relationship) {
    
    
    
    
    this.relationship = relationship;
    return this;
  }

   /**
   * Get relationship
   * @return relationship
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRelationship() {
    return relationship;
  }


  public void setRelationship(String relationship) {
    
    
    
    this.relationship = relationship;
  }


  public OpenEnrollmentDependentDeductions benefitStartDate(OffsetDateTime benefitStartDate) {
    
    
    
    
    this.benefitStartDate = benefitStartDate;
    return this;
  }

   /**
   * Get benefitStartDate
   * @return benefitStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStartDate() {
    return benefitStartDate;
  }


  public void setBenefitStartDate(OffsetDateTime benefitStartDate) {
    
    
    
    this.benefitStartDate = benefitStartDate;
  }


  public OpenEnrollmentDependentDeductions benefitStatus(String benefitStatus) {
    
    
    
    
    this.benefitStatus = benefitStatus;
    return this;
  }

   /**
   * Get benefitStatus
   * @return benefitStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitStatus() {
    return benefitStatus;
  }


  public void setBenefitStatus(String benefitStatus) {
    
    
    
    this.benefitStatus = benefitStatus;
  }


  public OpenEnrollmentDependentDeductions benefitStatusDate(OffsetDateTime benefitStatusDate) {
    
    
    
    
    this.benefitStatusDate = benefitStatusDate;
    return this;
  }

   /**
   * Get benefitStatusDate
   * @return benefitStatusDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStatusDate() {
    return benefitStatusDate;
  }


  public void setBenefitStatusDate(OffsetDateTime benefitStatusDate) {
    
    
    
    this.benefitStatusDate = benefitStatusDate;
  }


  public OpenEnrollmentDependentDeductions benefitStopDate(OffsetDateTime benefitStopDate) {
    
    
    
    
    this.benefitStopDate = benefitStopDate;
    return this;
  }

   /**
   * Get benefitStopDate
   * @return benefitStopDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStopDate() {
    return benefitStopDate;
  }


  public void setBenefitStopDate(OffsetDateTime benefitStopDate) {
    
    
    
    this.benefitStopDate = benefitStopDate;
  }


  public OpenEnrollmentDependentDeductions companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public OpenEnrollmentDependentDeductions changeDatetime(OffsetDateTime changeDatetime) {
    
    
    
    
    this.changeDatetime = changeDatetime;
    return this;
  }

   /**
   * Get changeDatetime
   * @return changeDatetime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getChangeDatetime() {
    return changeDatetime;
  }


  public void setChangeDatetime(OffsetDateTime changeDatetime) {
    
    
    
    this.changeDatetime = changeDatetime;
  }


  public OpenEnrollmentDependentDeductions contactId(String contactId) {
    
    
    
    
    this.contactId = contactId;
    return this;
  }

   /**
   * Get contactId
   * @return contactId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContactId() {
    return contactId;
  }


  public void setContactId(String contactId) {
    
    
    
    this.contactId = contactId;
  }


  public OpenEnrollmentDependentDeductions createDatetime(OffsetDateTime createDatetime) {
    
    
    
    
    this.createDatetime = createDatetime;
    return this;
  }

   /**
   * Get createDatetime
   * @return createDatetime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreateDatetime() {
    return createDatetime;
  }


  public void setCreateDatetime(OffsetDateTime createDatetime) {
    
    
    
    this.createDatetime = createDatetime;
  }


  public OpenEnrollmentDependentDeductions certificateNo(String certificateNo) {
    
    
    
    
    this.certificateNo = certificateNo;
    return this;
  }

   /**
   * Get certificateNo
   * @return certificateNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCertificateNo() {
    return certificateNo;
  }


  public void setCertificateNo(String certificateNo) {
    
    
    
    this.certificateNo = certificateNo;
  }


  public OpenEnrollmentDependentDeductions currentCoId(String currentCoId) {
    
    
    
    
    this.currentCoId = currentCoId;
    return this;
  }

   /**
   * Get currentCoId
   * @return currentCoId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrentCoId() {
    return currentCoId;
  }


  public void setCurrentCoId(String currentCoId) {
    
    
    
    this.currentCoId = currentCoId;
  }


  public OpenEnrollmentDependentDeductions declinedByCarrier(String declinedByCarrier) {
    
    
    
    
    this.declinedByCarrier = declinedByCarrier;
    return this;
  }

   /**
   * Get declinedByCarrier
   * @return declinedByCarrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeclinedByCarrier() {
    return declinedByCarrier;
  }


  public void setDeclinedByCarrier(String declinedByCarrier) {
    
    
    
    this.declinedByCarrier = declinedByCarrier;
  }


  public OpenEnrollmentDependentDeductions declinedByCarrierDate(OffsetDateTime declinedByCarrierDate) {
    
    
    
    
    this.declinedByCarrierDate = declinedByCarrierDate;
    return this;
  }

   /**
   * Get declinedByCarrierDate
   * @return declinedByCarrierDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeclinedByCarrierDate() {
    return declinedByCarrierDate;
  }


  public void setDeclinedByCarrierDate(OffsetDateTime declinedByCarrierDate) {
    
    
    
    this.declinedByCarrierDate = declinedByCarrierDate;
  }


  public OpenEnrollmentDependentDeductions declinedByCarrierReason(String declinedByCarrierReason) {
    
    
    
    
    this.declinedByCarrierReason = declinedByCarrierReason;
    return this;
  }

   /**
   * Get declinedByCarrierReason
   * @return declinedByCarrierReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeclinedByCarrierReason() {
    return declinedByCarrierReason;
  }


  public void setDeclinedByCarrierReason(String declinedByCarrierReason) {
    
    
    
    this.declinedByCarrierReason = declinedByCarrierReason;
  }


  public OpenEnrollmentDependentDeductions deductionCode(String deductionCode) {
    
    
    
    
    this.deductionCode = deductionCode;
    return this;
  }

   /**
   * Get deductionCode
   * @return deductionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionCode() {
    return deductionCode;
  }


  public void setDeductionCode(String deductionCode) {
    
    
    
    this.deductionCode = deductionCode;
  }


  public OpenEnrollmentDependentDeductions deductionType(String deductionType) {
    
    
    
    
    this.deductionType = deductionType;
    return this;
  }

   /**
   * Get deductionType
   * @return deductionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionType() {
    return deductionType;
  }


  public void setDeductionType(String deductionType) {
    
    
    
    this.deductionType = deductionType;
  }


  public OpenEnrollmentDependentDeductions depBPlanTVID(Double depBPlanTVID) {
    
    
    
    
    this.depBPlanTVID = depBPlanTVID;
    return this;
  }

  public OpenEnrollmentDependentDeductions depBPlanTVID(Integer depBPlanTVID) {
    
    
    
    
    this.depBPlanTVID = depBPlanTVID.doubleValue();
    return this;
  }

   /**
   * Get depBPlanTVID
   * @return depBPlanTVID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDepBPlanTVID() {
    return depBPlanTVID;
  }


  public void setDepBPlanTVID(Double depBPlanTVID) {
    
    
    
    this.depBPlanTVID = depBPlanTVID;
  }


  public OpenEnrollmentDependentDeductions employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public OpenEnrollmentDependentDeductions evidenceofInsurabilityDate(OffsetDateTime evidenceofInsurabilityDate) {
    
    
    
    
    this.evidenceofInsurabilityDate = evidenceofInsurabilityDate;
    return this;
  }

   /**
   * Get evidenceofInsurabilityDate
   * @return evidenceofInsurabilityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEvidenceofInsurabilityDate() {
    return evidenceofInsurabilityDate;
  }


  public void setEvidenceofInsurabilityDate(OffsetDateTime evidenceofInsurabilityDate) {
    
    
    
    this.evidenceofInsurabilityDate = evidenceofInsurabilityDate;
  }


  public OpenEnrollmentDependentDeductions needEvidenceOfInsurability(Boolean needEvidenceOfInsurability) {
    
    
    
    
    this.needEvidenceOfInsurability = needEvidenceOfInsurability;
    return this;
  }

   /**
   * Get needEvidenceOfInsurability
   * @return needEvidenceOfInsurability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNeedEvidenceOfInsurability() {
    return needEvidenceOfInsurability;
  }


  public void setNeedEvidenceOfInsurability(Boolean needEvidenceOfInsurability) {
    
    
    
    this.needEvidenceOfInsurability = needEvidenceOfInsurability;
  }


  public OpenEnrollmentDependentDeductions employerAmount(Double employerAmount) {
    
    
    
    
    this.employerAmount = employerAmount;
    return this;
  }

  public OpenEnrollmentDependentDeductions employerAmount(Integer employerAmount) {
    
    
    
    
    this.employerAmount = employerAmount.doubleValue();
    return this;
  }

   /**
   * Get employerAmount
   * @return employerAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerAmount() {
    return employerAmount;
  }


  public void setEmployerAmount(Double employerAmount) {
    
    
    
    this.employerAmount = employerAmount;
  }


  public OpenEnrollmentDependentDeductions deductionNotes(String deductionNotes) {
    
    
    
    
    this.deductionNotes = deductionNotes;
    return this;
  }

   /**
   * Get deductionNotes
   * @return deductionNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionNotes() {
    return deductionNotes;
  }


  public void setDeductionNotes(String deductionNotes) {
    
    
    
    this.deductionNotes = deductionNotes;
  }


  public OpenEnrollmentDependentDeductions primaryCarePhysician(String primaryCarePhysician) {
    
    
    
    
    this.primaryCarePhysician = primaryCarePhysician;
    return this;
  }

   /**
   * Get primaryCarePhysician
   * @return primaryCarePhysician
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryCarePhysician() {
    return primaryCarePhysician;
  }


  public void setPrimaryCarePhysician(String primaryCarePhysician) {
    
    
    
    this.primaryCarePhysician = primaryCarePhysician;
  }


  public OpenEnrollmentDependentDeductions primaryCarePhysicianId(String primaryCarePhysicianId) {
    
    
    
    
    this.primaryCarePhysicianId = primaryCarePhysicianId;
    return this;
  }

   /**
   * Get primaryCarePhysicianId
   * @return primaryCarePhysicianId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryCarePhysicianId() {
    return primaryCarePhysicianId;
  }


  public void setPrimaryCarePhysicianId(String primaryCarePhysicianId) {
    
    
    
    this.primaryCarePhysicianId = primaryCarePhysicianId;
  }


  public OpenEnrollmentDependentDeductions systemId(String systemId) {
    
    
    
    
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSystemId() {
    return systemId;
  }


  public void setSystemId(String systemId) {
    
    
    
    this.systemId = systemId;
  }


  public OpenEnrollmentDependentDeductions isBenefitWaived(Boolean isBenefitWaived) {
    
    
    
    
    this.isBenefitWaived = isBenefitWaived;
    return this;
  }

   /**
   * Get isBenefitWaived
   * @return isBenefitWaived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsBenefitWaived() {
    return isBenefitWaived;
  }


  public void setIsBenefitWaived(Boolean isBenefitWaived) {
    
    
    
    this.isBenefitWaived = isBenefitWaived;
  }


  public OpenEnrollmentDependentDeductions oeDrop(Boolean oeDrop) {
    
    
    
    
    this.oeDrop = oeDrop;
    return this;
  }

   /**
   * Get oeDrop
   * @return oeDrop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getOeDrop() {
    return oeDrop;
  }


  public void setOeDrop(Boolean oeDrop) {
    
    
    
    this.oeDrop = oeDrop;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the OpenEnrollmentDependentDeductions instance itself
   */
  public OpenEnrollmentDependentDeductions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenEnrollmentDependentDeductions openEnrollmentDependentDeductions = (OpenEnrollmentDependentDeductions) o;
    return Objects.equals(this.benefitAmount, openEnrollmentDependentDeductions.benefitAmount) &&
        Objects.equals(this.changeReason, openEnrollmentDependentDeductions.changeReason) &&
        Objects.equals(this.relationship, openEnrollmentDependentDeductions.relationship) &&
        Objects.equals(this.benefitStartDate, openEnrollmentDependentDeductions.benefitStartDate) &&
        Objects.equals(this.benefitStatus, openEnrollmentDependentDeductions.benefitStatus) &&
        Objects.equals(this.benefitStatusDate, openEnrollmentDependentDeductions.benefitStatusDate) &&
        Objects.equals(this.benefitStopDate, openEnrollmentDependentDeductions.benefitStopDate) &&
        Objects.equals(this.companyId, openEnrollmentDependentDeductions.companyId) &&
        Objects.equals(this.changeDatetime, openEnrollmentDependentDeductions.changeDatetime) &&
        Objects.equals(this.contactId, openEnrollmentDependentDeductions.contactId) &&
        Objects.equals(this.createDatetime, openEnrollmentDependentDeductions.createDatetime) &&
        Objects.equals(this.certificateNo, openEnrollmentDependentDeductions.certificateNo) &&
        Objects.equals(this.currentCoId, openEnrollmentDependentDeductions.currentCoId) &&
        Objects.equals(this.declinedByCarrier, openEnrollmentDependentDeductions.declinedByCarrier) &&
        Objects.equals(this.declinedByCarrierDate, openEnrollmentDependentDeductions.declinedByCarrierDate) &&
        Objects.equals(this.declinedByCarrierReason, openEnrollmentDependentDeductions.declinedByCarrierReason) &&
        Objects.equals(this.deductionCode, openEnrollmentDependentDeductions.deductionCode) &&
        Objects.equals(this.deductionType, openEnrollmentDependentDeductions.deductionType) &&
        Objects.equals(this.depBPlanTVID, openEnrollmentDependentDeductions.depBPlanTVID) &&
        Objects.equals(this.employeeId, openEnrollmentDependentDeductions.employeeId) &&
        Objects.equals(this.evidenceofInsurabilityDate, openEnrollmentDependentDeductions.evidenceofInsurabilityDate) &&
        Objects.equals(this.needEvidenceOfInsurability, openEnrollmentDependentDeductions.needEvidenceOfInsurability) &&
        Objects.equals(this.employerAmount, openEnrollmentDependentDeductions.employerAmount) &&
        Objects.equals(this.deductionNotes, openEnrollmentDependentDeductions.deductionNotes) &&
        Objects.equals(this.primaryCarePhysician, openEnrollmentDependentDeductions.primaryCarePhysician) &&
        Objects.equals(this.primaryCarePhysicianId, openEnrollmentDependentDeductions.primaryCarePhysicianId) &&
        Objects.equals(this.systemId, openEnrollmentDependentDeductions.systemId) &&
        Objects.equals(this.isBenefitWaived, openEnrollmentDependentDeductions.isBenefitWaived) &&
        Objects.equals(this.oeDrop, openEnrollmentDependentDeductions.oeDrop)&&
        Objects.equals(this.additionalProperties, openEnrollmentDependentDeductions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(benefitAmount, changeReason, relationship, benefitStartDate, benefitStatus, benefitStatusDate, benefitStopDate, companyId, changeDatetime, contactId, createDatetime, certificateNo, currentCoId, declinedByCarrier, declinedByCarrierDate, declinedByCarrierReason, deductionCode, deductionType, depBPlanTVID, employeeId, evidenceofInsurabilityDate, needEvidenceOfInsurability, employerAmount, deductionNotes, primaryCarePhysician, primaryCarePhysicianId, systemId, isBenefitWaived, oeDrop, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenEnrollmentDependentDeductions {\n");
    sb.append("    benefitAmount: ").append(toIndentedString(benefitAmount)).append("\n");
    sb.append("    changeReason: ").append(toIndentedString(changeReason)).append("\n");
    sb.append("    relationship: ").append(toIndentedString(relationship)).append("\n");
    sb.append("    benefitStartDate: ").append(toIndentedString(benefitStartDate)).append("\n");
    sb.append("    benefitStatus: ").append(toIndentedString(benefitStatus)).append("\n");
    sb.append("    benefitStatusDate: ").append(toIndentedString(benefitStatusDate)).append("\n");
    sb.append("    benefitStopDate: ").append(toIndentedString(benefitStopDate)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    changeDatetime: ").append(toIndentedString(changeDatetime)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    createDatetime: ").append(toIndentedString(createDatetime)).append("\n");
    sb.append("    certificateNo: ").append(toIndentedString(certificateNo)).append("\n");
    sb.append("    currentCoId: ").append(toIndentedString(currentCoId)).append("\n");
    sb.append("    declinedByCarrier: ").append(toIndentedString(declinedByCarrier)).append("\n");
    sb.append("    declinedByCarrierDate: ").append(toIndentedString(declinedByCarrierDate)).append("\n");
    sb.append("    declinedByCarrierReason: ").append(toIndentedString(declinedByCarrierReason)).append("\n");
    sb.append("    deductionCode: ").append(toIndentedString(deductionCode)).append("\n");
    sb.append("    deductionType: ").append(toIndentedString(deductionType)).append("\n");
    sb.append("    depBPlanTVID: ").append(toIndentedString(depBPlanTVID)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    evidenceofInsurabilityDate: ").append(toIndentedString(evidenceofInsurabilityDate)).append("\n");
    sb.append("    needEvidenceOfInsurability: ").append(toIndentedString(needEvidenceOfInsurability)).append("\n");
    sb.append("    employerAmount: ").append(toIndentedString(employerAmount)).append("\n");
    sb.append("    deductionNotes: ").append(toIndentedString(deductionNotes)).append("\n");
    sb.append("    primaryCarePhysician: ").append(toIndentedString(primaryCarePhysician)).append("\n");
    sb.append("    primaryCarePhysicianId: ").append(toIndentedString(primaryCarePhysicianId)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    isBenefitWaived: ").append(toIndentedString(isBenefitWaived)).append("\n");
    sb.append("    oeDrop: ").append(toIndentedString(oeDrop)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("benefitAmount");
    openapiFields.add("changeReason");
    openapiFields.add("relationship");
    openapiFields.add("benefitStartDate");
    openapiFields.add("benefitStatus");
    openapiFields.add("benefitStatusDate");
    openapiFields.add("benefitStopDate");
    openapiFields.add("companyId");
    openapiFields.add("changeDatetime");
    openapiFields.add("contactId");
    openapiFields.add("createDatetime");
    openapiFields.add("certificateNo");
    openapiFields.add("currentCoId");
    openapiFields.add("declinedByCarrier");
    openapiFields.add("declinedByCarrierDate");
    openapiFields.add("declinedByCarrierReason");
    openapiFields.add("deductionCode");
    openapiFields.add("deductionType");
    openapiFields.add("depBPlanTVID");
    openapiFields.add("employeeId");
    openapiFields.add("evidenceofInsurabilityDate");
    openapiFields.add("needEvidenceOfInsurability");
    openapiFields.add("employerAmount");
    openapiFields.add("deductionNotes");
    openapiFields.add("primaryCarePhysician");
    openapiFields.add("primaryCarePhysicianId");
    openapiFields.add("systemId");
    openapiFields.add("isBenefitWaived");
    openapiFields.add("oeDrop");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OpenEnrollmentDependentDeductions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OpenEnrollmentDependentDeductions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OpenEnrollmentDependentDeductions is not found in the empty JSON string", OpenEnrollmentDependentDeductions.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("changeReason") != null && !jsonObj.get("changeReason").isJsonNull()) && !jsonObj.get("changeReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `changeReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("changeReason").toString()));
      }
      if ((jsonObj.get("relationship") != null && !jsonObj.get("relationship").isJsonNull()) && !jsonObj.get("relationship").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relationship` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relationship").toString()));
      }
      if ((jsonObj.get("benefitStatus") != null && !jsonObj.get("benefitStatus").isJsonNull()) && !jsonObj.get("benefitStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitStatus").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("contactId") != null && !jsonObj.get("contactId").isJsonNull()) && !jsonObj.get("contactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactId").toString()));
      }
      if ((jsonObj.get("certificateNo") != null && !jsonObj.get("certificateNo").isJsonNull()) && !jsonObj.get("certificateNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `certificateNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("certificateNo").toString()));
      }
      if ((jsonObj.get("currentCoId") != null && !jsonObj.get("currentCoId").isJsonNull()) && !jsonObj.get("currentCoId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currentCoId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currentCoId").toString()));
      }
      if ((jsonObj.get("declinedByCarrier") != null && !jsonObj.get("declinedByCarrier").isJsonNull()) && !jsonObj.get("declinedByCarrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `declinedByCarrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("declinedByCarrier").toString()));
      }
      if ((jsonObj.get("declinedByCarrierReason") != null && !jsonObj.get("declinedByCarrierReason").isJsonNull()) && !jsonObj.get("declinedByCarrierReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `declinedByCarrierReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("declinedByCarrierReason").toString()));
      }
      if ((jsonObj.get("deductionCode") != null && !jsonObj.get("deductionCode").isJsonNull()) && !jsonObj.get("deductionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionCode").toString()));
      }
      if ((jsonObj.get("deductionType") != null && !jsonObj.get("deductionType").isJsonNull()) && !jsonObj.get("deductionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionType").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("deductionNotes") != null && !jsonObj.get("deductionNotes").isJsonNull()) && !jsonObj.get("deductionNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionNotes").toString()));
      }
      if ((jsonObj.get("primaryCarePhysician") != null && !jsonObj.get("primaryCarePhysician").isJsonNull()) && !jsonObj.get("primaryCarePhysician").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryCarePhysician` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryCarePhysician").toString()));
      }
      if ((jsonObj.get("primaryCarePhysicianId") != null && !jsonObj.get("primaryCarePhysicianId").isJsonNull()) && !jsonObj.get("primaryCarePhysicianId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryCarePhysicianId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryCarePhysicianId").toString()));
      }
      if ((jsonObj.get("systemId") != null && !jsonObj.get("systemId").isJsonNull()) && !jsonObj.get("systemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `systemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("systemId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OpenEnrollmentDependentDeductions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OpenEnrollmentDependentDeductions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OpenEnrollmentDependentDeductions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OpenEnrollmentDependentDeductions.class));

       return (TypeAdapter<T>) new TypeAdapter<OpenEnrollmentDependentDeductions>() {
           @Override
           public void write(JsonWriter out, OpenEnrollmentDependentDeductions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public OpenEnrollmentDependentDeductions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             OpenEnrollmentDependentDeductions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OpenEnrollmentDependentDeductions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OpenEnrollmentDependentDeductions
  * @throws IOException if the JSON string is invalid with respect to OpenEnrollmentDependentDeductions
  */
  public static OpenEnrollmentDependentDeductions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OpenEnrollmentDependentDeductions.class);
  }

 /**
  * Convert an instance of OpenEnrollmentDependentDeductions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

