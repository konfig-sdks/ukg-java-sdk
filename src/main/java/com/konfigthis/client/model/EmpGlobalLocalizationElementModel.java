/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmpGlobalLocalizationElementModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmpGlobalLocalizationElementModel {
  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_FIELD_ID = "fieldId";
  @SerializedName(SERIALIZED_NAME_FIELD_ID)
  private String fieldId;

  public static final String SERIALIZED_NAME_FIELD_NAME = "fieldName";
  @SerializedName(SERIALIZED_NAME_FIELD_NAME)
  private String fieldName;

  public static final String SERIALIZED_NAME_BOOLEAN_VALUE = "booleanValue";
  @SerializedName(SERIALIZED_NAME_BOOLEAN_VALUE)
  private Boolean booleanValue;

  public static final String SERIALIZED_NAME_NUMERIC_VALUE = "numericValue";
  @SerializedName(SERIALIZED_NAME_NUMERIC_VALUE)
  private String numericValue;

  public static final String SERIALIZED_NAME_DATE_TIME_VALUE = "dateTimeValue";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_VALUE)
  private String dateTimeValue;

  public static final String SERIALIZED_NAME_STRING_VALUE = "stringValue";
  @SerializedName(SERIALIZED_NAME_STRING_VALUE)
  private String stringValue;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_EFFECTIVE = "effective";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE)
  private String effective;

  public EmpGlobalLocalizationElementModel() {
  }

  public EmpGlobalLocalizationElementModel employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EmpGlobalLocalizationElementModel fieldId(String fieldId) {
    
    
    
    
    this.fieldId = fieldId;
    return this;
  }

   /**
   * Get fieldId
   * @return fieldId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFieldId() {
    return fieldId;
  }


  public void setFieldId(String fieldId) {
    
    
    
    this.fieldId = fieldId;
  }


  public EmpGlobalLocalizationElementModel fieldName(String fieldName) {
    
    
    
    
    this.fieldName = fieldName;
    return this;
  }

   /**
   * Get fieldName
   * @return fieldName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFieldName() {
    return fieldName;
  }


  public void setFieldName(String fieldName) {
    
    
    
    this.fieldName = fieldName;
  }


  public EmpGlobalLocalizationElementModel booleanValue(Boolean booleanValue) {
    
    
    
    
    this.booleanValue = booleanValue;
    return this;
  }

   /**
   * Get booleanValue
   * @return booleanValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBooleanValue() {
    return booleanValue;
  }


  public void setBooleanValue(Boolean booleanValue) {
    
    
    
    this.booleanValue = booleanValue;
  }


  public EmpGlobalLocalizationElementModel numericValue(String numericValue) {
    
    
    
    
    this.numericValue = numericValue;
    return this;
  }

   /**
   * Get numericValue
   * @return numericValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNumericValue() {
    return numericValue;
  }


  public void setNumericValue(String numericValue) {
    
    
    
    this.numericValue = numericValue;
  }


  public EmpGlobalLocalizationElementModel dateTimeValue(String dateTimeValue) {
    
    
    
    
    this.dateTimeValue = dateTimeValue;
    return this;
  }

   /**
   * Get dateTimeValue
   * @return dateTimeValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDateTimeValue() {
    return dateTimeValue;
  }


  public void setDateTimeValue(String dateTimeValue) {
    
    
    
    this.dateTimeValue = dateTimeValue;
  }


  public EmpGlobalLocalizationElementModel stringValue(String stringValue) {
    
    
    
    
    this.stringValue = stringValue;
    return this;
  }

   /**
   * Get stringValue
   * @return stringValue
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStringValue() {
    return stringValue;
  }


  public void setStringValue(String stringValue) {
    
    
    
    this.stringValue = stringValue;
  }


  public EmpGlobalLocalizationElementModel companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmpGlobalLocalizationElementModel created(String created) {
    
    
    
    
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCreated() {
    return created;
  }


  public void setCreated(String created) {
    
    
    
    this.created = created;
  }


  public EmpGlobalLocalizationElementModel effective(String effective) {
    
    
    
    
    this.effective = effective;
    return this;
  }

   /**
   * Get effective
   * @return effective
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEffective() {
    return effective;
  }


  public void setEffective(String effective) {
    
    
    
    this.effective = effective;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmpGlobalLocalizationElementModel instance itself
   */
  public EmpGlobalLocalizationElementModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmpGlobalLocalizationElementModel empGlobalLocalizationElementModel = (EmpGlobalLocalizationElementModel) o;
    return Objects.equals(this.employeeId, empGlobalLocalizationElementModel.employeeId) &&
        Objects.equals(this.fieldId, empGlobalLocalizationElementModel.fieldId) &&
        Objects.equals(this.fieldName, empGlobalLocalizationElementModel.fieldName) &&
        Objects.equals(this.booleanValue, empGlobalLocalizationElementModel.booleanValue) &&
        Objects.equals(this.numericValue, empGlobalLocalizationElementModel.numericValue) &&
        Objects.equals(this.dateTimeValue, empGlobalLocalizationElementModel.dateTimeValue) &&
        Objects.equals(this.stringValue, empGlobalLocalizationElementModel.stringValue) &&
        Objects.equals(this.companyId, empGlobalLocalizationElementModel.companyId) &&
        Objects.equals(this.created, empGlobalLocalizationElementModel.created) &&
        Objects.equals(this.effective, empGlobalLocalizationElementModel.effective)&&
        Objects.equals(this.additionalProperties, empGlobalLocalizationElementModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeId, fieldId, fieldName, booleanValue, numericValue, dateTimeValue, stringValue, companyId, created, effective, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmpGlobalLocalizationElementModel {\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    fieldId: ").append(toIndentedString(fieldId)).append("\n");
    sb.append("    fieldName: ").append(toIndentedString(fieldName)).append("\n");
    sb.append("    booleanValue: ").append(toIndentedString(booleanValue)).append("\n");
    sb.append("    numericValue: ").append(toIndentedString(numericValue)).append("\n");
    sb.append("    dateTimeValue: ").append(toIndentedString(dateTimeValue)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    effective: ").append(toIndentedString(effective)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("employeeId");
    openapiFields.add("fieldId");
    openapiFields.add("fieldName");
    openapiFields.add("booleanValue");
    openapiFields.add("numericValue");
    openapiFields.add("dateTimeValue");
    openapiFields.add("stringValue");
    openapiFields.add("companyId");
    openapiFields.add("created");
    openapiFields.add("effective");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmpGlobalLocalizationElementModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmpGlobalLocalizationElementModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmpGlobalLocalizationElementModel is not found in the empty JSON string", EmpGlobalLocalizationElementModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("fieldId") != null && !jsonObj.get("fieldId").isJsonNull()) && !jsonObj.get("fieldId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fieldId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fieldId").toString()));
      }
      if ((jsonObj.get("fieldName") != null && !jsonObj.get("fieldName").isJsonNull()) && !jsonObj.get("fieldName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fieldName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fieldName").toString()));
      }
      if ((jsonObj.get("numericValue") != null && !jsonObj.get("numericValue").isJsonNull()) && !jsonObj.get("numericValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `numericValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("numericValue").toString()));
      }
      if ((jsonObj.get("dateTimeValue") != null && !jsonObj.get("dateTimeValue").isJsonNull()) && !jsonObj.get("dateTimeValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateTimeValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateTimeValue").toString()));
      }
      if ((jsonObj.get("stringValue") != null && !jsonObj.get("stringValue").isJsonNull()) && !jsonObj.get("stringValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stringValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stringValue").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) && !jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
      if ((jsonObj.get("effective") != null && !jsonObj.get("effective").isJsonNull()) && !jsonObj.get("effective").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `effective` to be a primitive type in the JSON string but got `%s`", jsonObj.get("effective").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmpGlobalLocalizationElementModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmpGlobalLocalizationElementModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmpGlobalLocalizationElementModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmpGlobalLocalizationElementModel.class));

       return (TypeAdapter<T>) new TypeAdapter<EmpGlobalLocalizationElementModel>() {
           @Override
           public void write(JsonWriter out, EmpGlobalLocalizationElementModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmpGlobalLocalizationElementModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmpGlobalLocalizationElementModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmpGlobalLocalizationElementModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmpGlobalLocalizationElementModel
  * @throws IOException if the JSON string is invalid with respect to EmpGlobalLocalizationElementModel
  */
  public static EmpGlobalLocalizationElementModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmpGlobalLocalizationElementModel.class);
  }

 /**
  * Convert an instance of EmpGlobalLocalizationElementModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

