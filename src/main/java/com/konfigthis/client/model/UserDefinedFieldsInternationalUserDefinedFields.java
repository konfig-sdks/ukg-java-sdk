/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01;
import com.konfigthis.client.model.UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03;
import com.konfigthis.client.model.UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UserDefinedFieldsInternationalUserDefinedFields
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UserDefinedFieldsInternationalUserDefinedFields {
  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD01 = "internationalUDField01";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD01)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField01;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD02 = "internationalUDField02";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD02)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField02;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD03 = "internationalUDField03";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD03)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField03;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD04 = "internationalUDField04";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD04)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField04;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD05 = "internationalUDField05";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD05)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField05;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD06 = "internationalUDField06";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD06)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField06;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD07 = "internationalUDField07";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD07)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField07;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD08 = "internationalUDField08";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD08)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField08;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD09 = "internationalUDField09";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD09)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField09;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD10 = "internationalUDField10";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD10)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField10;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD11 = "internationalUDField11";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD11)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField11;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD12 = "internationalUDField12";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD12)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField12;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD13 = "internationalUDField13";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD13)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField13;

  public static final String SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD14 = "internationalUDField14";
  @SerializedName(SERIALIZED_NAME_INTERNATIONAL_U_D_FIELD14)
  private UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField14;

  public UserDefinedFieldsInternationalUserDefinedFields() {
  }

  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField01(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField01) {
    
    
    
    
    this.internationalUDField01 = internationalUDField01;
    return this;
  }

   /**
   * Get internationalUDField01
   * @return internationalUDField01
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 getInternationalUDField01() {
    return internationalUDField01;
  }


  public void setInternationalUDField01(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField01) {
    
    
    
    this.internationalUDField01 = internationalUDField01;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField02(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField02) {
    
    
    
    
    this.internationalUDField02 = internationalUDField02;
    return this;
  }

   /**
   * Get internationalUDField02
   * @return internationalUDField02
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 getInternationalUDField02() {
    return internationalUDField02;
  }


  public void setInternationalUDField02(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField02) {
    
    
    
    this.internationalUDField02 = internationalUDField02;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField03(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField03) {
    
    
    
    
    this.internationalUDField03 = internationalUDField03;
    return this;
  }

   /**
   * Get internationalUDField03
   * @return internationalUDField03
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 getInternationalUDField03() {
    return internationalUDField03;
  }


  public void setInternationalUDField03(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField03) {
    
    
    
    this.internationalUDField03 = internationalUDField03;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField04(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField04) {
    
    
    
    
    this.internationalUDField04 = internationalUDField04;
    return this;
  }

   /**
   * Get internationalUDField04
   * @return internationalUDField04
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 getInternationalUDField04() {
    return internationalUDField04;
  }


  public void setInternationalUDField04(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField04) {
    
    
    
    this.internationalUDField04 = internationalUDField04;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField05(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField05) {
    
    
    
    
    this.internationalUDField05 = internationalUDField05;
    return this;
  }

   /**
   * Get internationalUDField05
   * @return internationalUDField05
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 getInternationalUDField05() {
    return internationalUDField05;
  }


  public void setInternationalUDField05(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField05) {
    
    
    
    this.internationalUDField05 = internationalUDField05;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField06(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField06) {
    
    
    
    
    this.internationalUDField06 = internationalUDField06;
    return this;
  }

   /**
   * Get internationalUDField06
   * @return internationalUDField06
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 getInternationalUDField06() {
    return internationalUDField06;
  }


  public void setInternationalUDField06(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField06) {
    
    
    
    this.internationalUDField06 = internationalUDField06;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField07(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField07) {
    
    
    
    
    this.internationalUDField07 = internationalUDField07;
    return this;
  }

   /**
   * Get internationalUDField07
   * @return internationalUDField07
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 getInternationalUDField07() {
    return internationalUDField07;
  }


  public void setInternationalUDField07(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField07) {
    
    
    
    this.internationalUDField07 = internationalUDField07;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField08(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField08) {
    
    
    
    
    this.internationalUDField08 = internationalUDField08;
    return this;
  }

   /**
   * Get internationalUDField08
   * @return internationalUDField08
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 getInternationalUDField08() {
    return internationalUDField08;
  }


  public void setInternationalUDField08(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField08) {
    
    
    
    this.internationalUDField08 = internationalUDField08;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField09(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField09) {
    
    
    
    
    this.internationalUDField09 = internationalUDField09;
    return this;
  }

   /**
   * Get internationalUDField09
   * @return internationalUDField09
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 getInternationalUDField09() {
    return internationalUDField09;
  }


  public void setInternationalUDField09(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField09) {
    
    
    
    this.internationalUDField09 = internationalUDField09;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField10(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField10) {
    
    
    
    
    this.internationalUDField10 = internationalUDField10;
    return this;
  }

   /**
   * Get internationalUDField10
   * @return internationalUDField10
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 getInternationalUDField10() {
    return internationalUDField10;
  }


  public void setInternationalUDField10(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField10) {
    
    
    
    this.internationalUDField10 = internationalUDField10;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField11(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField11) {
    
    
    
    
    this.internationalUDField11 = internationalUDField11;
    return this;
  }

   /**
   * Get internationalUDField11
   * @return internationalUDField11
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 getInternationalUDField11() {
    return internationalUDField11;
  }


  public void setInternationalUDField11(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03 internationalUDField11) {
    
    
    
    this.internationalUDField11 = internationalUDField11;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField12(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField12) {
    
    
    
    
    this.internationalUDField12 = internationalUDField12;
    return this;
  }

   /**
   * Get internationalUDField12
   * @return internationalUDField12
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 getInternationalUDField12() {
    return internationalUDField12;
  }


  public void setInternationalUDField12(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField12) {
    
    
    
    this.internationalUDField12 = internationalUDField12;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField13(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField13) {
    
    
    
    
    this.internationalUDField13 = internationalUDField13;
    return this;
  }

   /**
   * Get internationalUDField13
   * @return internationalUDField13
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 getInternationalUDField13() {
    return internationalUDField13;
  }


  public void setInternationalUDField13(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05 internationalUDField13) {
    
    
    
    this.internationalUDField13 = internationalUDField13;
  }


  public UserDefinedFieldsInternationalUserDefinedFields internationalUDField14(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField14) {
    
    
    
    
    this.internationalUDField14 = internationalUDField14;
    return this;
  }

   /**
   * Get internationalUDField14
   * @return internationalUDField14
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 getInternationalUDField14() {
    return internationalUDField14;
  }


  public void setInternationalUDField14(UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01 internationalUDField14) {
    
    
    
    this.internationalUDField14 = internationalUDField14;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UserDefinedFieldsInternationalUserDefinedFields instance itself
   */
  public UserDefinedFieldsInternationalUserDefinedFields putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserDefinedFieldsInternationalUserDefinedFields userDefinedFieldsInternationalUserDefinedFields = (UserDefinedFieldsInternationalUserDefinedFields) o;
    return Objects.equals(this.internationalUDField01, userDefinedFieldsInternationalUserDefinedFields.internationalUDField01) &&
        Objects.equals(this.internationalUDField02, userDefinedFieldsInternationalUserDefinedFields.internationalUDField02) &&
        Objects.equals(this.internationalUDField03, userDefinedFieldsInternationalUserDefinedFields.internationalUDField03) &&
        Objects.equals(this.internationalUDField04, userDefinedFieldsInternationalUserDefinedFields.internationalUDField04) &&
        Objects.equals(this.internationalUDField05, userDefinedFieldsInternationalUserDefinedFields.internationalUDField05) &&
        Objects.equals(this.internationalUDField06, userDefinedFieldsInternationalUserDefinedFields.internationalUDField06) &&
        Objects.equals(this.internationalUDField07, userDefinedFieldsInternationalUserDefinedFields.internationalUDField07) &&
        Objects.equals(this.internationalUDField08, userDefinedFieldsInternationalUserDefinedFields.internationalUDField08) &&
        Objects.equals(this.internationalUDField09, userDefinedFieldsInternationalUserDefinedFields.internationalUDField09) &&
        Objects.equals(this.internationalUDField10, userDefinedFieldsInternationalUserDefinedFields.internationalUDField10) &&
        Objects.equals(this.internationalUDField11, userDefinedFieldsInternationalUserDefinedFields.internationalUDField11) &&
        Objects.equals(this.internationalUDField12, userDefinedFieldsInternationalUserDefinedFields.internationalUDField12) &&
        Objects.equals(this.internationalUDField13, userDefinedFieldsInternationalUserDefinedFields.internationalUDField13) &&
        Objects.equals(this.internationalUDField14, userDefinedFieldsInternationalUserDefinedFields.internationalUDField14)&&
        Objects.equals(this.additionalProperties, userDefinedFieldsInternationalUserDefinedFields.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(internationalUDField01, internationalUDField02, internationalUDField03, internationalUDField04, internationalUDField05, internationalUDField06, internationalUDField07, internationalUDField08, internationalUDField09, internationalUDField10, internationalUDField11, internationalUDField12, internationalUDField13, internationalUDField14, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserDefinedFieldsInternationalUserDefinedFields {\n");
    sb.append("    internationalUDField01: ").append(toIndentedString(internationalUDField01)).append("\n");
    sb.append("    internationalUDField02: ").append(toIndentedString(internationalUDField02)).append("\n");
    sb.append("    internationalUDField03: ").append(toIndentedString(internationalUDField03)).append("\n");
    sb.append("    internationalUDField04: ").append(toIndentedString(internationalUDField04)).append("\n");
    sb.append("    internationalUDField05: ").append(toIndentedString(internationalUDField05)).append("\n");
    sb.append("    internationalUDField06: ").append(toIndentedString(internationalUDField06)).append("\n");
    sb.append("    internationalUDField07: ").append(toIndentedString(internationalUDField07)).append("\n");
    sb.append("    internationalUDField08: ").append(toIndentedString(internationalUDField08)).append("\n");
    sb.append("    internationalUDField09: ").append(toIndentedString(internationalUDField09)).append("\n");
    sb.append("    internationalUDField10: ").append(toIndentedString(internationalUDField10)).append("\n");
    sb.append("    internationalUDField11: ").append(toIndentedString(internationalUDField11)).append("\n");
    sb.append("    internationalUDField12: ").append(toIndentedString(internationalUDField12)).append("\n");
    sb.append("    internationalUDField13: ").append(toIndentedString(internationalUDField13)).append("\n");
    sb.append("    internationalUDField14: ").append(toIndentedString(internationalUDField14)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("internationalUDField01");
    openapiFields.add("internationalUDField02");
    openapiFields.add("internationalUDField03");
    openapiFields.add("internationalUDField04");
    openapiFields.add("internationalUDField05");
    openapiFields.add("internationalUDField06");
    openapiFields.add("internationalUDField07");
    openapiFields.add("internationalUDField08");
    openapiFields.add("internationalUDField09");
    openapiFields.add("internationalUDField10");
    openapiFields.add("internationalUDField11");
    openapiFields.add("internationalUDField12");
    openapiFields.add("internationalUDField13");
    openapiFields.add("internationalUDField14");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserDefinedFieldsInternationalUserDefinedFields
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserDefinedFieldsInternationalUserDefinedFields.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserDefinedFieldsInternationalUserDefinedFields is not found in the empty JSON string", UserDefinedFieldsInternationalUserDefinedFields.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `internationalUDField01`
      if (jsonObj.get("internationalUDField01") != null && !jsonObj.get("internationalUDField01").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField01"));
      }
      // validate the optional field `internationalUDField02`
      if (jsonObj.get("internationalUDField02") != null && !jsonObj.get("internationalUDField02").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField02"));
      }
      // validate the optional field `internationalUDField03`
      if (jsonObj.get("internationalUDField03") != null && !jsonObj.get("internationalUDField03").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField03"));
      }
      // validate the optional field `internationalUDField04`
      if (jsonObj.get("internationalUDField04") != null && !jsonObj.get("internationalUDField04").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField04"));
      }
      // validate the optional field `internationalUDField05`
      if (jsonObj.get("internationalUDField05") != null && !jsonObj.get("internationalUDField05").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField05"));
      }
      // validate the optional field `internationalUDField06`
      if (jsonObj.get("internationalUDField06") != null && !jsonObj.get("internationalUDField06").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField06"));
      }
      // validate the optional field `internationalUDField07`
      if (jsonObj.get("internationalUDField07") != null && !jsonObj.get("internationalUDField07").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField07"));
      }
      // validate the optional field `internationalUDField08`
      if (jsonObj.get("internationalUDField08") != null && !jsonObj.get("internationalUDField08").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField08"));
      }
      // validate the optional field `internationalUDField09`
      if (jsonObj.get("internationalUDField09") != null && !jsonObj.get("internationalUDField09").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField09"));
      }
      // validate the optional field `internationalUDField10`
      if (jsonObj.get("internationalUDField10") != null && !jsonObj.get("internationalUDField10").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField10"));
      }
      // validate the optional field `internationalUDField11`
      if (jsonObj.get("internationalUDField11") != null && !jsonObj.get("internationalUDField11").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField03.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField11"));
      }
      // validate the optional field `internationalUDField12`
      if (jsonObj.get("internationalUDField12") != null && !jsonObj.get("internationalUDField12").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField12"));
      }
      // validate the optional field `internationalUDField13`
      if (jsonObj.get("internationalUDField13") != null && !jsonObj.get("internationalUDField13").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField05.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField13"));
      }
      // validate the optional field `internationalUDField14`
      if (jsonObj.get("internationalUDField14") != null && !jsonObj.get("internationalUDField14").isJsonNull()) {
        UserDefinedFieldsPersonnelUserDefinedFieldsPersonnelUDField01.validateJsonObject(jsonObj.getAsJsonObject("internationalUDField14"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserDefinedFieldsInternationalUserDefinedFields.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserDefinedFieldsInternationalUserDefinedFields' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserDefinedFieldsInternationalUserDefinedFields> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserDefinedFieldsInternationalUserDefinedFields.class));

       return (TypeAdapter<T>) new TypeAdapter<UserDefinedFieldsInternationalUserDefinedFields>() {
           @Override
           public void write(JsonWriter out, UserDefinedFieldsInternationalUserDefinedFields value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UserDefinedFieldsInternationalUserDefinedFields read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UserDefinedFieldsInternationalUserDefinedFields instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserDefinedFieldsInternationalUserDefinedFields given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserDefinedFieldsInternationalUserDefinedFields
  * @throws IOException if the JSON string is invalid with respect to UserDefinedFieldsInternationalUserDefinedFields
  */
  public static UserDefinedFieldsInternationalUserDefinedFields fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserDefinedFieldsInternationalUserDefinedFields.class);
  }

 /**
  * Convert an instance of UserDefinedFieldsInternationalUserDefinedFields to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

