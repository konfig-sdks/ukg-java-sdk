/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.CalcGroupDto;
import com.konfigthis.client.model.PayGroupDto;
import com.konfigthis.client.model.WorkDetailDto;
import com.konfigthis.client.model.WorkSummaryClocksDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * WorkSummaryDto
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WorkSummaryDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_EMP_ID = "empId";
  @SerializedName(SERIALIZED_NAME_EMP_ID)
  private Long empId;

  public static final String SERIALIZED_NAME_WORK_DATE = "workDate";
  @SerializedName(SERIALIZED_NAME_WORK_DATE)
  private OffsetDateTime workDate;

  public static final String SERIALIZED_NAME_WRK_MINS = "wrkMins";
  @SerializedName(SERIALIZED_NAME_WRK_MINS)
  private Long wrkMins;

  public static final String SERIALIZED_NAME_AUTHORIZED = "authorized";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED)
  private Boolean authorized = false;

  public static final String SERIALIZED_NAME_OVERTIME = "overtime";
  @SerializedName(SERIALIZED_NAME_OVERTIME)
  private Boolean overtime = false;

  public static final String SERIALIZED_NAME_ABSENT = "absent";
  @SerializedName(SERIALIZED_NAME_ABSENT)
  private Boolean absent = false;

  public static final String SERIALIZED_NAME_ABSENT_TIME_CODE = "absentTimeCode";
  @SerializedName(SERIALIZED_NAME_ABSENT_TIME_CODE)
  private String absentTimeCode;

  public static final String SERIALIZED_NAME_AUTHORIZED_MESSAGE = "authorizedMessage";
  @SerializedName(SERIALIZED_NAME_AUTHORIZED_MESSAGE)
  private String authorizedMessage;

  public static final String SERIALIZED_NAME_COMMENTS = "comments";
  @SerializedName(SERIALIZED_NAME_COMMENTS)
  private String comments;

  public static final String SERIALIZED_NAME_CLOCKS = "clocks";
  @SerializedName(SERIALIZED_NAME_CLOCKS)
  private WorkSummaryClocksDto clocks;

  public static final String SERIALIZED_NAME_WORK_DETAILS = "workDetails";
  @SerializedName(SERIALIZED_NAME_WORK_DETAILS)
  private List<WorkDetailDto> workDetails = null;

  public static final String SERIALIZED_NAME_EXCEPTIONS = "exceptions";
  @SerializedName(SERIALIZED_NAME_EXCEPTIONS)
  private List<String> exceptions = null;

  public static final String SERIALIZED_NAME_WRKS_MESSAGES = "wrksMessages";
  @SerializedName(SERIALIZED_NAME_WRKS_MESSAGES)
  private String wrksMessages;

  public static final String SERIALIZED_NAME_READ_ONLY = "readOnly";
  @SerializedName(SERIALIZED_NAME_READ_ONLY)
  private Boolean readOnly = false;

  public static final String SERIALIZED_NAME_READ_ONLY_REASON = "readOnlyReason";
  @SerializedName(SERIALIZED_NAME_READ_ONLY_REASON)
  private String readOnlyReason;

  public static final String SERIALIZED_NAME_DAILY = "daily";
  @SerializedName(SERIALIZED_NAME_DAILY)
  private Boolean daily = false;

  public static final String SERIALIZED_NAME_FLAG1 = "flag1";
  @SerializedName(SERIALIZED_NAME_FLAG1)
  private String flag1;

  public static final String SERIALIZED_NAME_FLAG2 = "flag2";
  @SerializedName(SERIALIZED_NAME_FLAG2)
  private String flag2;

  public static final String SERIALIZED_NAME_FLAG3 = "flag3";
  @SerializedName(SERIALIZED_NAME_FLAG3)
  private String flag3;

  public static final String SERIALIZED_NAME_FLAG4 = "flag4";
  @SerializedName(SERIALIZED_NAME_FLAG4)
  private String flag4;

  public static final String SERIALIZED_NAME_FLAG5 = "flag5";
  @SerializedName(SERIALIZED_NAME_FLAG5)
  private String flag5;

  public static final String SERIALIZED_NAME_UDF1 = "udf1";
  @SerializedName(SERIALIZED_NAME_UDF1)
  private String udf1;

  public static final String SERIALIZED_NAME_UDF2 = "udf2";
  @SerializedName(SERIALIZED_NAME_UDF2)
  private String udf2;

  public static final String SERIALIZED_NAME_UDF3 = "udf3";
  @SerializedName(SERIALIZED_NAME_UDF3)
  private String udf3;

  public static final String SERIALIZED_NAME_UDF4 = "udf4";
  @SerializedName(SERIALIZED_NAME_UDF4)
  private String udf4;

  public static final String SERIALIZED_NAME_UDF5 = "udf5";
  @SerializedName(SERIALIZED_NAME_UDF5)
  private String udf5;

  public static final String SERIALIZED_NAME_UDF6 = "udf6";
  @SerializedName(SERIALIZED_NAME_UDF6)
  private String udf6;

  public static final String SERIALIZED_NAME_UDF7 = "udf7";
  @SerializedName(SERIALIZED_NAME_UDF7)
  private String udf7;

  public static final String SERIALIZED_NAME_UDF8 = "udf8";
  @SerializedName(SERIALIZED_NAME_UDF8)
  private String udf8;

  public static final String SERIALIZED_NAME_UDF9 = "udf9";
  @SerializedName(SERIALIZED_NAME_UDF9)
  private String udf9;

  public static final String SERIALIZED_NAME_UDF10 = "udf10";
  @SerializedName(SERIALIZED_NAME_UDF10)
  private String udf10;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private PayGroupDto payGroup;

  public static final String SERIALIZED_NAME_CALC_GROUP = "calcGroup";
  @SerializedName(SERIALIZED_NAME_CALC_GROUP)
  private CalcGroupDto calcGroup;

  public WorkSummaryDto() {
  }

  public WorkSummaryDto id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public WorkSummaryDto empId(Long empId) {
    
    
    
    
    this.empId = empId;
    return this;
  }

   /**
   * Get empId
   * @return empId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getEmpId() {
    return empId;
  }


  public void setEmpId(Long empId) {
    
    
    
    this.empId = empId;
  }


  public WorkSummaryDto workDate(OffsetDateTime workDate) {
    
    
    
    
    this.workDate = workDate;
    return this;
  }

   /**
   * Get workDate
   * @return workDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getWorkDate() {
    return workDate;
  }


  public void setWorkDate(OffsetDateTime workDate) {
    
    
    
    this.workDate = workDate;
  }


  public WorkSummaryDto wrkMins(Long wrkMins) {
    
    
    
    
    this.wrkMins = wrkMins;
    return this;
  }

   /**
   * Get wrkMins
   * @return wrkMins
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getWrkMins() {
    return wrkMins;
  }


  public void setWrkMins(Long wrkMins) {
    
    
    
    this.wrkMins = wrkMins;
  }


  public WorkSummaryDto authorized(Boolean authorized) {
    
    
    
    
    this.authorized = authorized;
    return this;
  }

   /**
   * Get authorized
   * @return authorized
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getAuthorized() {
    return authorized;
  }


  public void setAuthorized(Boolean authorized) {
    
    
    
    this.authorized = authorized;
  }


  public WorkSummaryDto overtime(Boolean overtime) {
    
    
    
    
    this.overtime = overtime;
    return this;
  }

   /**
   * true if work summary contain details with an overtime hour type
   * @return overtime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "true if work summary contain details with an overtime hour type")

  public Boolean getOvertime() {
    return overtime;
  }


  public void setOvertime(Boolean overtime) {
    
    
    
    this.overtime = overtime;
  }


  public WorkSummaryDto absent(Boolean absent) {
    
    
    
    
    this.absent = absent;
    return this;
  }

   /**
   * true if LTA override exists on day
   * @return absent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "true if LTA override exists on day")

  public Boolean getAbsent() {
    return absent;
  }


  public void setAbsent(Boolean absent) {
    
    
    
    this.absent = absent;
  }


  public WorkSummaryDto absentTimeCode(String absentTimeCode) {
    
    
    
    
    this.absentTimeCode = absentTimeCode;
    return this;
  }

   /**
   * time code used in LTA override if present
   * @return absentTimeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "time code used in LTA override if present")

  public String getAbsentTimeCode() {
    return absentTimeCode;
  }


  public void setAbsentTimeCode(String absentTimeCode) {
    
    
    
    this.absentTimeCode = absentTimeCode;
  }


  public WorkSummaryDto authorizedMessage(String authorizedMessage) {
    
    
    
    
    this.authorizedMessage = authorizedMessage;
    return this;
  }

   /**
   * Get authorizedMessage
   * @return authorizedMessage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAuthorizedMessage() {
    return authorizedMessage;
  }


  public void setAuthorizedMessage(String authorizedMessage) {
    
    
    
    this.authorizedMessage = authorizedMessage;
  }


  public WorkSummaryDto comments(String comments) {
    
    
    
    
    this.comments = comments;
    return this;
  }

   /**
   * Get comments
   * @return comments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getComments() {
    return comments;
  }


  public void setComments(String comments) {
    
    
    
    this.comments = comments;
  }


  public WorkSummaryDto clocks(WorkSummaryClocksDto clocks) {
    
    
    
    
    this.clocks = clocks;
    return this;
  }

   /**
   * Get clocks
   * @return clocks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public WorkSummaryClocksDto getClocks() {
    return clocks;
  }


  public void setClocks(WorkSummaryClocksDto clocks) {
    
    
    
    this.clocks = clocks;
  }


  public WorkSummaryDto workDetails(List<WorkDetailDto> workDetails) {
    
    
    
    
    this.workDetails = workDetails;
    return this;
  }

  public WorkSummaryDto addWorkDetailsItem(WorkDetailDto workDetailsItem) {
    if (this.workDetails == null) {
      this.workDetails = new ArrayList<>();
    }
    this.workDetails.add(workDetailsItem);
    return this;
  }

   /**
   * Get workDetails
   * @return workDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<WorkDetailDto> getWorkDetails() {
    return workDetails;
  }


  public void setWorkDetails(List<WorkDetailDto> workDetails) {
    
    
    
    this.workDetails = workDetails;
  }


  public WorkSummaryDto exceptions(List<String> exceptions) {
    
    
    
    
    this.exceptions = exceptions;
    return this;
  }

  public WorkSummaryDto addExceptionsItem(String exceptionsItem) {
    if (this.exceptions == null) {
      this.exceptions = new ArrayList<>();
    }
    this.exceptions.add(exceptionsItem);
    return this;
  }

   /**
   * Get exceptions
   * @return exceptions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<String> getExceptions() {
    return exceptions;
  }


  public void setExceptions(List<String> exceptions) {
    
    
    
    this.exceptions = exceptions;
  }


  public WorkSummaryDto wrksMessages(String wrksMessages) {
    
    
    
    
    this.wrksMessages = wrksMessages;
    return this;
  }

   /**
   * Get wrksMessages
   * @return wrksMessages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWrksMessages() {
    return wrksMessages;
  }


  public void setWrksMessages(String wrksMessages) {
    
    
    
    this.wrksMessages = wrksMessages;
  }


  public WorkSummaryDto readOnly(Boolean readOnly) {
    
    
    
    
    this.readOnly = readOnly;
    return this;
  }

   /**
   * true if timesheet has been locked
   * @return readOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "true if timesheet has been locked")

  public Boolean getReadOnly() {
    return readOnly;
  }


  public void setReadOnly(Boolean readOnly) {
    
    
    
    this.readOnly = readOnly;
  }


  public WorkSummaryDto readOnlyReason(String readOnlyReason) {
    
    
    
    
    this.readOnlyReason = readOnlyReason;
    return this;
  }

   /**
   * Get readOnlyReason
   * @return readOnlyReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReadOnlyReason() {
    return readOnlyReason;
  }


  public void setReadOnlyReason(String readOnlyReason) {
    
    
    
    this.readOnlyReason = readOnlyReason;
  }


  public WorkSummaryDto daily(Boolean daily) {
    
    
    
    
    this.daily = daily;
    return this;
  }

   /**
   * Get daily
   * @return daily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "false", value = "")

  public Boolean getDaily() {
    return daily;
  }


  public void setDaily(Boolean daily) {
    
    
    
    this.daily = daily;
  }


  public WorkSummaryDto flag1(String flag1) {
    
    
    
    
    this.flag1 = flag1;
    return this;
  }

   /**
   * Get flag1
   * @return flag1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag1() {
    return flag1;
  }


  public void setFlag1(String flag1) {
    
    
    
    this.flag1 = flag1;
  }


  public WorkSummaryDto flag2(String flag2) {
    
    
    
    
    this.flag2 = flag2;
    return this;
  }

   /**
   * Get flag2
   * @return flag2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag2() {
    return flag2;
  }


  public void setFlag2(String flag2) {
    
    
    
    this.flag2 = flag2;
  }


  public WorkSummaryDto flag3(String flag3) {
    
    
    
    
    this.flag3 = flag3;
    return this;
  }

   /**
   * Get flag3
   * @return flag3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag3() {
    return flag3;
  }


  public void setFlag3(String flag3) {
    
    
    
    this.flag3 = flag3;
  }


  public WorkSummaryDto flag4(String flag4) {
    
    
    
    
    this.flag4 = flag4;
    return this;
  }

   /**
   * Get flag4
   * @return flag4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag4() {
    return flag4;
  }


  public void setFlag4(String flag4) {
    
    
    
    this.flag4 = flag4;
  }


  public WorkSummaryDto flag5(String flag5) {
    
    
    
    
    this.flag5 = flag5;
    return this;
  }

   /**
   * Get flag5
   * @return flag5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag5() {
    return flag5;
  }


  public void setFlag5(String flag5) {
    
    
    
    this.flag5 = flag5;
  }


  public WorkSummaryDto udf1(String udf1) {
    
    
    
    
    this.udf1 = udf1;
    return this;
  }

   /**
   * Get udf1
   * @return udf1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf1() {
    return udf1;
  }


  public void setUdf1(String udf1) {
    
    
    
    this.udf1 = udf1;
  }


  public WorkSummaryDto udf2(String udf2) {
    
    
    
    
    this.udf2 = udf2;
    return this;
  }

   /**
   * Get udf2
   * @return udf2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf2() {
    return udf2;
  }


  public void setUdf2(String udf2) {
    
    
    
    this.udf2 = udf2;
  }


  public WorkSummaryDto udf3(String udf3) {
    
    
    
    
    this.udf3 = udf3;
    return this;
  }

   /**
   * Get udf3
   * @return udf3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf3() {
    return udf3;
  }


  public void setUdf3(String udf3) {
    
    
    
    this.udf3 = udf3;
  }


  public WorkSummaryDto udf4(String udf4) {
    
    
    
    
    this.udf4 = udf4;
    return this;
  }

   /**
   * Get udf4
   * @return udf4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf4() {
    return udf4;
  }


  public void setUdf4(String udf4) {
    
    
    
    this.udf4 = udf4;
  }


  public WorkSummaryDto udf5(String udf5) {
    
    
    
    
    this.udf5 = udf5;
    return this;
  }

   /**
   * Get udf5
   * @return udf5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf5() {
    return udf5;
  }


  public void setUdf5(String udf5) {
    
    
    
    this.udf5 = udf5;
  }


  public WorkSummaryDto udf6(String udf6) {
    
    
    
    
    this.udf6 = udf6;
    return this;
  }

   /**
   * Get udf6
   * @return udf6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf6() {
    return udf6;
  }


  public void setUdf6(String udf6) {
    
    
    
    this.udf6 = udf6;
  }


  public WorkSummaryDto udf7(String udf7) {
    
    
    
    
    this.udf7 = udf7;
    return this;
  }

   /**
   * Get udf7
   * @return udf7
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf7() {
    return udf7;
  }


  public void setUdf7(String udf7) {
    
    
    
    this.udf7 = udf7;
  }


  public WorkSummaryDto udf8(String udf8) {
    
    
    
    
    this.udf8 = udf8;
    return this;
  }

   /**
   * Get udf8
   * @return udf8
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf8() {
    return udf8;
  }


  public void setUdf8(String udf8) {
    
    
    
    this.udf8 = udf8;
  }


  public WorkSummaryDto udf9(String udf9) {
    
    
    
    
    this.udf9 = udf9;
    return this;
  }

   /**
   * Get udf9
   * @return udf9
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf9() {
    return udf9;
  }


  public void setUdf9(String udf9) {
    
    
    
    this.udf9 = udf9;
  }


  public WorkSummaryDto udf10(String udf10) {
    
    
    
    
    this.udf10 = udf10;
    return this;
  }

   /**
   * Get udf10
   * @return udf10
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf10() {
    return udf10;
  }


  public void setUdf10(String udf10) {
    
    
    
    this.udf10 = udf10;
  }


  public WorkSummaryDto payGroup(PayGroupDto payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public PayGroupDto getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(PayGroupDto payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public WorkSummaryDto calcGroup(CalcGroupDto calcGroup) {
    
    
    
    
    this.calcGroup = calcGroup;
    return this;
  }

   /**
   * Get calcGroup
   * @return calcGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public CalcGroupDto getCalcGroup() {
    return calcGroup;
  }


  public void setCalcGroup(CalcGroupDto calcGroup) {
    
    
    
    this.calcGroup = calcGroup;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WorkSummaryDto instance itself
   */
  public WorkSummaryDto putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkSummaryDto workSummaryDto = (WorkSummaryDto) o;
    return Objects.equals(this.id, workSummaryDto.id) &&
        Objects.equals(this.empId, workSummaryDto.empId) &&
        Objects.equals(this.workDate, workSummaryDto.workDate) &&
        Objects.equals(this.wrkMins, workSummaryDto.wrkMins) &&
        Objects.equals(this.authorized, workSummaryDto.authorized) &&
        Objects.equals(this.overtime, workSummaryDto.overtime) &&
        Objects.equals(this.absent, workSummaryDto.absent) &&
        Objects.equals(this.absentTimeCode, workSummaryDto.absentTimeCode) &&
        Objects.equals(this.authorizedMessage, workSummaryDto.authorizedMessage) &&
        Objects.equals(this.comments, workSummaryDto.comments) &&
        Objects.equals(this.clocks, workSummaryDto.clocks) &&
        Objects.equals(this.workDetails, workSummaryDto.workDetails) &&
        Objects.equals(this.exceptions, workSummaryDto.exceptions) &&
        Objects.equals(this.wrksMessages, workSummaryDto.wrksMessages) &&
        Objects.equals(this.readOnly, workSummaryDto.readOnly) &&
        Objects.equals(this.readOnlyReason, workSummaryDto.readOnlyReason) &&
        Objects.equals(this.daily, workSummaryDto.daily) &&
        Objects.equals(this.flag1, workSummaryDto.flag1) &&
        Objects.equals(this.flag2, workSummaryDto.flag2) &&
        Objects.equals(this.flag3, workSummaryDto.flag3) &&
        Objects.equals(this.flag4, workSummaryDto.flag4) &&
        Objects.equals(this.flag5, workSummaryDto.flag5) &&
        Objects.equals(this.udf1, workSummaryDto.udf1) &&
        Objects.equals(this.udf2, workSummaryDto.udf2) &&
        Objects.equals(this.udf3, workSummaryDto.udf3) &&
        Objects.equals(this.udf4, workSummaryDto.udf4) &&
        Objects.equals(this.udf5, workSummaryDto.udf5) &&
        Objects.equals(this.udf6, workSummaryDto.udf6) &&
        Objects.equals(this.udf7, workSummaryDto.udf7) &&
        Objects.equals(this.udf8, workSummaryDto.udf8) &&
        Objects.equals(this.udf9, workSummaryDto.udf9) &&
        Objects.equals(this.udf10, workSummaryDto.udf10) &&
        Objects.equals(this.payGroup, workSummaryDto.payGroup) &&
        Objects.equals(this.calcGroup, workSummaryDto.calcGroup)&&
        Objects.equals(this.additionalProperties, workSummaryDto.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, empId, workDate, wrkMins, authorized, overtime, absent, absentTimeCode, authorizedMessage, comments, clocks, workDetails, exceptions, wrksMessages, readOnly, readOnlyReason, daily, flag1, flag2, flag3, flag4, flag5, udf1, udf2, udf3, udf4, udf5, udf6, udf7, udf8, udf9, udf10, payGroup, calcGroup, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkSummaryDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    empId: ").append(toIndentedString(empId)).append("\n");
    sb.append("    workDate: ").append(toIndentedString(workDate)).append("\n");
    sb.append("    wrkMins: ").append(toIndentedString(wrkMins)).append("\n");
    sb.append("    authorized: ").append(toIndentedString(authorized)).append("\n");
    sb.append("    overtime: ").append(toIndentedString(overtime)).append("\n");
    sb.append("    absent: ").append(toIndentedString(absent)).append("\n");
    sb.append("    absentTimeCode: ").append(toIndentedString(absentTimeCode)).append("\n");
    sb.append("    authorizedMessage: ").append(toIndentedString(authorizedMessage)).append("\n");
    sb.append("    comments: ").append(toIndentedString(comments)).append("\n");
    sb.append("    clocks: ").append(toIndentedString(clocks)).append("\n");
    sb.append("    workDetails: ").append(toIndentedString(workDetails)).append("\n");
    sb.append("    exceptions: ").append(toIndentedString(exceptions)).append("\n");
    sb.append("    wrksMessages: ").append(toIndentedString(wrksMessages)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    readOnlyReason: ").append(toIndentedString(readOnlyReason)).append("\n");
    sb.append("    daily: ").append(toIndentedString(daily)).append("\n");
    sb.append("    flag1: ").append(toIndentedString(flag1)).append("\n");
    sb.append("    flag2: ").append(toIndentedString(flag2)).append("\n");
    sb.append("    flag3: ").append(toIndentedString(flag3)).append("\n");
    sb.append("    flag4: ").append(toIndentedString(flag4)).append("\n");
    sb.append("    flag5: ").append(toIndentedString(flag5)).append("\n");
    sb.append("    udf1: ").append(toIndentedString(udf1)).append("\n");
    sb.append("    udf2: ").append(toIndentedString(udf2)).append("\n");
    sb.append("    udf3: ").append(toIndentedString(udf3)).append("\n");
    sb.append("    udf4: ").append(toIndentedString(udf4)).append("\n");
    sb.append("    udf5: ").append(toIndentedString(udf5)).append("\n");
    sb.append("    udf6: ").append(toIndentedString(udf6)).append("\n");
    sb.append("    udf7: ").append(toIndentedString(udf7)).append("\n");
    sb.append("    udf8: ").append(toIndentedString(udf8)).append("\n");
    sb.append("    udf9: ").append(toIndentedString(udf9)).append("\n");
    sb.append("    udf10: ").append(toIndentedString(udf10)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    calcGroup: ").append(toIndentedString(calcGroup)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("empId");
    openapiFields.add("workDate");
    openapiFields.add("wrkMins");
    openapiFields.add("authorized");
    openapiFields.add("overtime");
    openapiFields.add("absent");
    openapiFields.add("absentTimeCode");
    openapiFields.add("authorizedMessage");
    openapiFields.add("comments");
    openapiFields.add("clocks");
    openapiFields.add("workDetails");
    openapiFields.add("exceptions");
    openapiFields.add("wrksMessages");
    openapiFields.add("readOnly");
    openapiFields.add("readOnlyReason");
    openapiFields.add("daily");
    openapiFields.add("flag1");
    openapiFields.add("flag2");
    openapiFields.add("flag3");
    openapiFields.add("flag4");
    openapiFields.add("flag5");
    openapiFields.add("udf1");
    openapiFields.add("udf2");
    openapiFields.add("udf3");
    openapiFields.add("udf4");
    openapiFields.add("udf5");
    openapiFields.add("udf6");
    openapiFields.add("udf7");
    openapiFields.add("udf8");
    openapiFields.add("udf9");
    openapiFields.add("udf10");
    openapiFields.add("payGroup");
    openapiFields.add("calcGroup");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WorkSummaryDto
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WorkSummaryDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkSummaryDto is not found in the empty JSON string", WorkSummaryDto.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("absentTimeCode") != null && !jsonObj.get("absentTimeCode").isJsonNull()) && !jsonObj.get("absentTimeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `absentTimeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("absentTimeCode").toString()));
      }
      if ((jsonObj.get("authorizedMessage") != null && !jsonObj.get("authorizedMessage").isJsonNull()) && !jsonObj.get("authorizedMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `authorizedMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("authorizedMessage").toString()));
      }
      if ((jsonObj.get("comments") != null && !jsonObj.get("comments").isJsonNull()) && !jsonObj.get("comments").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `comments` to be a primitive type in the JSON string but got `%s`", jsonObj.get("comments").toString()));
      }
      // validate the optional field `clocks`
      if (jsonObj.get("clocks") != null && !jsonObj.get("clocks").isJsonNull()) {
        WorkSummaryClocksDto.validateJsonObject(jsonObj.getAsJsonObject("clocks"));
      }
      if (jsonObj.get("workDetails") != null && !jsonObj.get("workDetails").isJsonNull()) {
        JsonArray jsonArrayworkDetails = jsonObj.getAsJsonArray("workDetails");
        if (jsonArrayworkDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("workDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `workDetails` to be an array in the JSON string but got `%s`", jsonObj.get("workDetails").toString()));
          }

          // validate the optional field `workDetails` (array)
          for (int i = 0; i < jsonArrayworkDetails.size(); i++) {
            WorkDetailDto.validateJsonObject(jsonArrayworkDetails.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("exceptions") != null && !jsonObj.get("exceptions").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `exceptions` to be an array in the JSON string but got `%s`", jsonObj.get("exceptions").toString()));
      }
      if ((jsonObj.get("wrksMessages") != null && !jsonObj.get("wrksMessages").isJsonNull()) && !jsonObj.get("wrksMessages").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wrksMessages` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wrksMessages").toString()));
      }
      if ((jsonObj.get("readOnlyReason") != null && !jsonObj.get("readOnlyReason").isJsonNull()) && !jsonObj.get("readOnlyReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `readOnlyReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("readOnlyReason").toString()));
      }
      if ((jsonObj.get("flag1") != null && !jsonObj.get("flag1").isJsonNull()) && !jsonObj.get("flag1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag1").toString()));
      }
      if ((jsonObj.get("flag2") != null && !jsonObj.get("flag2").isJsonNull()) && !jsonObj.get("flag2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag2").toString()));
      }
      if ((jsonObj.get("flag3") != null && !jsonObj.get("flag3").isJsonNull()) && !jsonObj.get("flag3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag3").toString()));
      }
      if ((jsonObj.get("flag4") != null && !jsonObj.get("flag4").isJsonNull()) && !jsonObj.get("flag4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag4").toString()));
      }
      if ((jsonObj.get("flag5") != null && !jsonObj.get("flag5").isJsonNull()) && !jsonObj.get("flag5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag5").toString()));
      }
      if ((jsonObj.get("udf1") != null && !jsonObj.get("udf1").isJsonNull()) && !jsonObj.get("udf1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf1").toString()));
      }
      if ((jsonObj.get("udf2") != null && !jsonObj.get("udf2").isJsonNull()) && !jsonObj.get("udf2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf2").toString()));
      }
      if ((jsonObj.get("udf3") != null && !jsonObj.get("udf3").isJsonNull()) && !jsonObj.get("udf3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf3").toString()));
      }
      if ((jsonObj.get("udf4") != null && !jsonObj.get("udf4").isJsonNull()) && !jsonObj.get("udf4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf4").toString()));
      }
      if ((jsonObj.get("udf5") != null && !jsonObj.get("udf5").isJsonNull()) && !jsonObj.get("udf5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf5").toString()));
      }
      if ((jsonObj.get("udf6") != null && !jsonObj.get("udf6").isJsonNull()) && !jsonObj.get("udf6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf6").toString()));
      }
      if ((jsonObj.get("udf7") != null && !jsonObj.get("udf7").isJsonNull()) && !jsonObj.get("udf7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf7").toString()));
      }
      if ((jsonObj.get("udf8") != null && !jsonObj.get("udf8").isJsonNull()) && !jsonObj.get("udf8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf8").toString()));
      }
      if ((jsonObj.get("udf9") != null && !jsonObj.get("udf9").isJsonNull()) && !jsonObj.get("udf9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf9").toString()));
      }
      if ((jsonObj.get("udf10") != null && !jsonObj.get("udf10").isJsonNull()) && !jsonObj.get("udf10").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf10` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf10").toString()));
      }
      // validate the optional field `payGroup`
      if (jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) {
        PayGroupDto.validateJsonObject(jsonObj.getAsJsonObject("payGroup"));
      }
      // validate the optional field `calcGroup`
      if (jsonObj.get("calcGroup") != null && !jsonObj.get("calcGroup").isJsonNull()) {
        CalcGroupDto.validateJsonObject(jsonObj.getAsJsonObject("calcGroup"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkSummaryDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkSummaryDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkSummaryDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkSummaryDto.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkSummaryDto>() {
           @Override
           public void write(JsonWriter out, WorkSummaryDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkSummaryDto read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WorkSummaryDto instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WorkSummaryDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WorkSummaryDto
  * @throws IOException if the JSON string is invalid with respect to WorkSummaryDto
  */
  public static WorkSummaryDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkSummaryDto.class);
  }

 /**
  * Convert an instance of WorkSummaryDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

