/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeeMultiplePositions
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeMultiplePositions {
  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_JOB_CODE = "jobCode";
  @SerializedName(SERIALIZED_NAME_JOB_CODE)
  private String jobCode;

  public static final String SERIALIZED_NAME_POSITION_CODE = "positionCode";
  @SerializedName(SERIALIZED_NAME_POSITION_CODE)
  private String positionCode;

  public static final String SERIALIZED_NAME_IS_PRIMARY = "isPrimary";
  @SerializedName(SERIALIZED_NAME_IS_PRIMARY)
  private Boolean isPrimary;

  public static final String SERIALIZED_NAME_ANNUAL_SALARY = "annualSalary";
  @SerializedName(SERIALIZED_NAME_ANNUAL_SALARY)
  private Double annualSalary;

  public static final String SERIALIZED_NAME_HOURLY_PAY_RATE = "hourlyPayRate";
  @SerializedName(SERIALIZED_NAME_HOURLY_PAY_RATE)
  private Double hourlyPayRate;

  public static final String SERIALIZED_NAME_FULL_TIME_OR_PART_TIME_CODE = "fullTimeOrPartTimeCode";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_OR_PART_TIME_CODE)
  private String fullTimeOrPartTimeCode;

  public static final String SERIALIZED_NAME_FULL_TIME_OR_PART_TIME = "fullTimeOrPartTime";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_OR_PART_TIME)
  private String fullTimeOrPartTime;

  public static final String SERIALIZED_NAME_CLOCK_CODE = "clockCode";
  @SerializedName(SERIALIZED_NAME_CLOCK_CODE)
  private String clockCode;

  public static final String SERIALIZED_NAME_DATE_TIME_CREATED = "dateTimeCreated";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_CREATED)
  private OffsetDateTime dateTimeCreated;

  public static final String SERIALIZED_NAME_EMPLOYEE_TYPE_CODE = "employeeTypeCode";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TYPE_CODE)
  private String employeeTypeCode;

  public static final String SERIALIZED_NAME_EMPLOYEE_TYPE_DESCRIPTION = "employeeTypeDescription";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TYPE_DESCRIPTION)
  private String employeeTypeDescription;

  public static final String SERIALIZED_NAME_EFFECTIVE_START_DATE = "effectiveStartDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_START_DATE)
  private OffsetDateTime effectiveStartDate;

  public static final String SERIALIZED_NAME_EFFECTIVE_STOP_DATE = "effectiveStopDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_STOP_DATE)
  private OffsetDateTime effectiveStopDate;

  public static final String SERIALIZED_NAME_IS_ELIGIBLE_FOR_BENEFITS = "isEligibleForBenefits";
  @SerializedName(SERIALIZED_NAME_IS_ELIGIBLE_FOR_BENEFITS)
  private Boolean isEligibleForBenefits;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL1_CODE = "organizationLevel1Code";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL1_CODE)
  private String organizationLevel1Code;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL2_CODE = "organizationLevel2Code";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL2_CODE)
  private String organizationLevel2Code;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL3_CODE = "organizationLevel3Code";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL3_CODE)
  private String organizationLevel3Code;

  public static final String SERIALIZED_NAME_ORGANIZATION_LEVEL4_CODE = "organizationLevel4Code";
  @SerializedName(SERIALIZED_NAME_ORGANIZATION_LEVEL4_CODE)
  private String organizationLevel4Code;

  public static final String SERIALIZED_NAME_OTHER_RATE1 = "otherRate1";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE1)
  private Double otherRate1;

  public static final String SERIALIZED_NAME_OTHER_RATE2 = "otherRate2";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE2)
  private Double otherRate2;

  public static final String SERIALIZED_NAME_OTHER_RATE3 = "otherRate3";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE3)
  private Double otherRate3;

  public static final String SERIALIZED_NAME_OTHER_RATE4 = "otherRate4";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE4)
  private Double otherRate4;

  public static final String SERIALIZED_NAME_OVERRIDE_INCUMBENT_DATA = "overrideIncumbentData";
  @SerializedName(SERIALIZED_NAME_OVERRIDE_INCUMBENT_DATA)
  private String overrideIncumbentData;

  public static final String SERIALIZED_NAME_PAY_GROUP_CODE = "payGroupCode";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP_CODE)
  private String payGroupCode;

  public static final String SERIALIZED_NAME_PERIOD_PAY_RATE = "periodPayRate";
  @SerializedName(SERIALIZED_NAME_PERIOD_PAY_RATE)
  private Double periodPayRate;

  public static final String SERIALIZED_NAME_PIECE_PAY_RATE = "piecePayRate";
  @SerializedName(SERIALIZED_NAME_PIECE_PAY_RATE)
  private Double piecePayRate;

  public static final String SERIALIZED_NAME_PROJECT_CODE = "projectCode";
  @SerializedName(SERIALIZED_NAME_PROJECT_CODE)
  private String projectCode;

  public static final String SERIALIZED_NAME_SALARY_OR_HOURLY_CODE = "salaryOrHourlyCode";
  @SerializedName(SERIALIZED_NAME_SALARY_OR_HOURLY_CODE)
  private String salaryOrHourlyCode;

  public static final String SERIALIZED_NAME_SALARY_OR_HOURLY = "salaryOrHourly";
  @SerializedName(SERIALIZED_NAME_SALARY_OR_HOURLY)
  private String salaryOrHourly;

  public static final String SERIALIZED_NAME_SCHEDULED_ANNUAL_HOURS = "scheduledAnnualHours";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ANNUAL_HOURS)
  private Double scheduledAnnualHours;

  public static final String SERIALIZED_NAME_SCHEDULED_FULL_TIME_EMPLOYEE = "scheduledFullTimeEmployee";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_FULL_TIME_EMPLOYEE)
  private Double scheduledFullTimeEmployee;

  public static final String SERIALIZED_NAME_SCHEDULED_WORK_HOURS = "scheduledWorkHours";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_WORK_HOURS)
  private Double scheduledWorkHours;

  public static final String SERIALIZED_NAME_SHIFT_CODE = "shiftCode";
  @SerializedName(SERIALIZED_NAME_SHIFT_CODE)
  private String shiftCode;

  public static final String SERIALIZED_NAME_SHIFT_GROUP_CODE = "shiftGroupCode";
  @SerializedName(SERIALIZED_NAME_SHIFT_GROUP_CODE)
  private String shiftGroupCode;

  public static final String SERIALIZED_NAME_SHIFT_GROUP_DESCRIPTION = "shiftGroupDescription";
  @SerializedName(SERIALIZED_NAME_SHIFT_GROUP_DESCRIPTION)
  private String shiftGroupDescription;

  public static final String SERIALIZED_NAME_SYSTEM_ID = "systemId";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ID)
  private String systemId;

  public static final String SERIALIZED_NAME_WEEKLY_PAY_RATE = "weeklyPayRate";
  @SerializedName(SERIALIZED_NAME_WEEKLY_PAY_RATE)
  private Double weeklyPayRate;

  public EmployeeMultiplePositions() {
  }

  public EmployeeMultiplePositions employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EmployeeMultiplePositions companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmployeeMultiplePositions jobCode(String jobCode) {
    
    
    
    
    this.jobCode = jobCode;
    return this;
  }

   /**
   * Get jobCode
   * @return jobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobCode() {
    return jobCode;
  }


  public void setJobCode(String jobCode) {
    
    
    
    this.jobCode = jobCode;
  }


  public EmployeeMultiplePositions positionCode(String positionCode) {
    
    
    
    
    this.positionCode = positionCode;
    return this;
  }

   /**
   * Get positionCode
   * @return positionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPositionCode() {
    return positionCode;
  }


  public void setPositionCode(String positionCode) {
    
    
    
    this.positionCode = positionCode;
  }


  public EmployeeMultiplePositions isPrimary(Boolean isPrimary) {
    
    
    
    
    this.isPrimary = isPrimary;
    return this;
  }

   /**
   * Get isPrimary
   * @return isPrimary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPrimary() {
    return isPrimary;
  }


  public void setIsPrimary(Boolean isPrimary) {
    
    
    
    this.isPrimary = isPrimary;
  }


  public EmployeeMultiplePositions annualSalary(Double annualSalary) {
    
    
    
    
    this.annualSalary = annualSalary;
    return this;
  }

  public EmployeeMultiplePositions annualSalary(Integer annualSalary) {
    
    
    
    
    this.annualSalary = annualSalary.doubleValue();
    return this;
  }

   /**
   * Get annualSalary
   * @return annualSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAnnualSalary() {
    return annualSalary;
  }


  public void setAnnualSalary(Double annualSalary) {
    
    
    
    this.annualSalary = annualSalary;
  }


  public EmployeeMultiplePositions hourlyPayRate(Double hourlyPayRate) {
    
    
    
    
    this.hourlyPayRate = hourlyPayRate;
    return this;
  }

  public EmployeeMultiplePositions hourlyPayRate(Integer hourlyPayRate) {
    
    
    
    
    this.hourlyPayRate = hourlyPayRate.doubleValue();
    return this;
  }

   /**
   * Get hourlyPayRate
   * @return hourlyPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHourlyPayRate() {
    return hourlyPayRate;
  }


  public void setHourlyPayRate(Double hourlyPayRate) {
    
    
    
    this.hourlyPayRate = hourlyPayRate;
  }


  public EmployeeMultiplePositions fullTimeOrPartTimeCode(String fullTimeOrPartTimeCode) {
    
    
    
    
    this.fullTimeOrPartTimeCode = fullTimeOrPartTimeCode;
    return this;
  }

   /**
   * Get fullTimeOrPartTimeCode
   * @return fullTimeOrPartTimeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullTimeOrPartTimeCode() {
    return fullTimeOrPartTimeCode;
  }


  public void setFullTimeOrPartTimeCode(String fullTimeOrPartTimeCode) {
    
    
    
    this.fullTimeOrPartTimeCode = fullTimeOrPartTimeCode;
  }


  public EmployeeMultiplePositions fullTimeOrPartTime(String fullTimeOrPartTime) {
    
    
    
    
    this.fullTimeOrPartTime = fullTimeOrPartTime;
    return this;
  }

   /**
   * Get fullTimeOrPartTime
   * @return fullTimeOrPartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullTimeOrPartTime() {
    return fullTimeOrPartTime;
  }


  public void setFullTimeOrPartTime(String fullTimeOrPartTime) {
    
    
    
    this.fullTimeOrPartTime = fullTimeOrPartTime;
  }


  public EmployeeMultiplePositions clockCode(String clockCode) {
    
    
    
    
    this.clockCode = clockCode;
    return this;
  }

   /**
   * Get clockCode
   * @return clockCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClockCode() {
    return clockCode;
  }


  public void setClockCode(String clockCode) {
    
    
    
    this.clockCode = clockCode;
  }


  public EmployeeMultiplePositions dateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    
    this.dateTimeCreated = dateTimeCreated;
    return this;
  }

   /**
   * Get dateTimeCreated
   * @return dateTimeCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeCreated() {
    return dateTimeCreated;
  }


  public void setDateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    this.dateTimeCreated = dateTimeCreated;
  }


  public EmployeeMultiplePositions employeeTypeCode(String employeeTypeCode) {
    
    
    
    
    this.employeeTypeCode = employeeTypeCode;
    return this;
  }

   /**
   * Get employeeTypeCode
   * @return employeeTypeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeTypeCode() {
    return employeeTypeCode;
  }


  public void setEmployeeTypeCode(String employeeTypeCode) {
    
    
    
    this.employeeTypeCode = employeeTypeCode;
  }


  public EmployeeMultiplePositions employeeTypeDescription(String employeeTypeDescription) {
    
    
    
    
    this.employeeTypeDescription = employeeTypeDescription;
    return this;
  }

   /**
   * Get employeeTypeDescription
   * @return employeeTypeDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeTypeDescription() {
    return employeeTypeDescription;
  }


  public void setEmployeeTypeDescription(String employeeTypeDescription) {
    
    
    
    this.employeeTypeDescription = employeeTypeDescription;
  }


  public EmployeeMultiplePositions effectiveStartDate(OffsetDateTime effectiveStartDate) {
    
    
    
    
    this.effectiveStartDate = effectiveStartDate;
    return this;
  }

   /**
   * Get effectiveStartDate
   * @return effectiveStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEffectiveStartDate() {
    return effectiveStartDate;
  }


  public void setEffectiveStartDate(OffsetDateTime effectiveStartDate) {
    
    
    
    this.effectiveStartDate = effectiveStartDate;
  }


  public EmployeeMultiplePositions effectiveStopDate(OffsetDateTime effectiveStopDate) {
    
    
    
    
    this.effectiveStopDate = effectiveStopDate;
    return this;
  }

   /**
   * Get effectiveStopDate
   * @return effectiveStopDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEffectiveStopDate() {
    return effectiveStopDate;
  }


  public void setEffectiveStopDate(OffsetDateTime effectiveStopDate) {
    
    
    
    this.effectiveStopDate = effectiveStopDate;
  }


  public EmployeeMultiplePositions isEligibleForBenefits(Boolean isEligibleForBenefits) {
    
    
    
    
    this.isEligibleForBenefits = isEligibleForBenefits;
    return this;
  }

   /**
   * Get isEligibleForBenefits
   * @return isEligibleForBenefits
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsEligibleForBenefits() {
    return isEligibleForBenefits;
  }


  public void setIsEligibleForBenefits(Boolean isEligibleForBenefits) {
    
    
    
    this.isEligibleForBenefits = isEligibleForBenefits;
  }


  public EmployeeMultiplePositions locationCode(String locationCode) {
    
    
    
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Get locationCode
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    
    
    
    this.locationCode = locationCode;
  }


  public EmployeeMultiplePositions notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public EmployeeMultiplePositions organizationLevel1Code(String organizationLevel1Code) {
    
    
    
    
    this.organizationLevel1Code = organizationLevel1Code;
    return this;
  }

   /**
   * Get organizationLevel1Code
   * @return organizationLevel1Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevel1Code() {
    return organizationLevel1Code;
  }


  public void setOrganizationLevel1Code(String organizationLevel1Code) {
    
    
    
    this.organizationLevel1Code = organizationLevel1Code;
  }


  public EmployeeMultiplePositions organizationLevel2Code(String organizationLevel2Code) {
    
    
    
    
    this.organizationLevel2Code = organizationLevel2Code;
    return this;
  }

   /**
   * Get organizationLevel2Code
   * @return organizationLevel2Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevel2Code() {
    return organizationLevel2Code;
  }


  public void setOrganizationLevel2Code(String organizationLevel2Code) {
    
    
    
    this.organizationLevel2Code = organizationLevel2Code;
  }


  public EmployeeMultiplePositions organizationLevel3Code(String organizationLevel3Code) {
    
    
    
    
    this.organizationLevel3Code = organizationLevel3Code;
    return this;
  }

   /**
   * Get organizationLevel3Code
   * @return organizationLevel3Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevel3Code() {
    return organizationLevel3Code;
  }


  public void setOrganizationLevel3Code(String organizationLevel3Code) {
    
    
    
    this.organizationLevel3Code = organizationLevel3Code;
  }


  public EmployeeMultiplePositions organizationLevel4Code(String organizationLevel4Code) {
    
    
    
    
    this.organizationLevel4Code = organizationLevel4Code;
    return this;
  }

   /**
   * Get organizationLevel4Code
   * @return organizationLevel4Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrganizationLevel4Code() {
    return organizationLevel4Code;
  }


  public void setOrganizationLevel4Code(String organizationLevel4Code) {
    
    
    
    this.organizationLevel4Code = organizationLevel4Code;
  }


  public EmployeeMultiplePositions otherRate1(Double otherRate1) {
    
    
    
    
    this.otherRate1 = otherRate1;
    return this;
  }

  public EmployeeMultiplePositions otherRate1(Integer otherRate1) {
    
    
    
    
    this.otherRate1 = otherRate1.doubleValue();
    return this;
  }

   /**
   * Get otherRate1
   * @return otherRate1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate1() {
    return otherRate1;
  }


  public void setOtherRate1(Double otherRate1) {
    
    
    
    this.otherRate1 = otherRate1;
  }


  public EmployeeMultiplePositions otherRate2(Double otherRate2) {
    
    
    
    
    this.otherRate2 = otherRate2;
    return this;
  }

  public EmployeeMultiplePositions otherRate2(Integer otherRate2) {
    
    
    
    
    this.otherRate2 = otherRate2.doubleValue();
    return this;
  }

   /**
   * Get otherRate2
   * @return otherRate2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate2() {
    return otherRate2;
  }


  public void setOtherRate2(Double otherRate2) {
    
    
    
    this.otherRate2 = otherRate2;
  }


  public EmployeeMultiplePositions otherRate3(Double otherRate3) {
    
    
    
    
    this.otherRate3 = otherRate3;
    return this;
  }

  public EmployeeMultiplePositions otherRate3(Integer otherRate3) {
    
    
    
    
    this.otherRate3 = otherRate3.doubleValue();
    return this;
  }

   /**
   * Get otherRate3
   * @return otherRate3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate3() {
    return otherRate3;
  }


  public void setOtherRate3(Double otherRate3) {
    
    
    
    this.otherRate3 = otherRate3;
  }


  public EmployeeMultiplePositions otherRate4(Double otherRate4) {
    
    
    
    
    this.otherRate4 = otherRate4;
    return this;
  }

  public EmployeeMultiplePositions otherRate4(Integer otherRate4) {
    
    
    
    
    this.otherRate4 = otherRate4.doubleValue();
    return this;
  }

   /**
   * Get otherRate4
   * @return otherRate4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate4() {
    return otherRate4;
  }


  public void setOtherRate4(Double otherRate4) {
    
    
    
    this.otherRate4 = otherRate4;
  }


  public EmployeeMultiplePositions overrideIncumbentData(String overrideIncumbentData) {
    
    
    
    
    this.overrideIncumbentData = overrideIncumbentData;
    return this;
  }

   /**
   * Get overrideIncumbentData
   * @return overrideIncumbentData
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOverrideIncumbentData() {
    return overrideIncumbentData;
  }


  public void setOverrideIncumbentData(String overrideIncumbentData) {
    
    
    
    this.overrideIncumbentData = overrideIncumbentData;
  }


  public EmployeeMultiplePositions payGroupCode(String payGroupCode) {
    
    
    
    
    this.payGroupCode = payGroupCode;
    return this;
  }

   /**
   * Get payGroupCode
   * @return payGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroupCode() {
    return payGroupCode;
  }


  public void setPayGroupCode(String payGroupCode) {
    
    
    
    this.payGroupCode = payGroupCode;
  }


  public EmployeeMultiplePositions periodPayRate(Double periodPayRate) {
    
    
    
    
    this.periodPayRate = periodPayRate;
    return this;
  }

  public EmployeeMultiplePositions periodPayRate(Integer periodPayRate) {
    
    
    
    
    this.periodPayRate = periodPayRate.doubleValue();
    return this;
  }

   /**
   * Get periodPayRate
   * @return periodPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPeriodPayRate() {
    return periodPayRate;
  }


  public void setPeriodPayRate(Double periodPayRate) {
    
    
    
    this.periodPayRate = periodPayRate;
  }


  public EmployeeMultiplePositions piecePayRate(Double piecePayRate) {
    
    
    
    
    this.piecePayRate = piecePayRate;
    return this;
  }

  public EmployeeMultiplePositions piecePayRate(Integer piecePayRate) {
    
    
    
    
    this.piecePayRate = piecePayRate.doubleValue();
    return this;
  }

   /**
   * Get piecePayRate
   * @return piecePayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPiecePayRate() {
    return piecePayRate;
  }


  public void setPiecePayRate(Double piecePayRate) {
    
    
    
    this.piecePayRate = piecePayRate;
  }


  public EmployeeMultiplePositions projectCode(String projectCode) {
    
    
    
    
    this.projectCode = projectCode;
    return this;
  }

   /**
   * Get projectCode
   * @return projectCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjectCode() {
    return projectCode;
  }


  public void setProjectCode(String projectCode) {
    
    
    
    this.projectCode = projectCode;
  }


  public EmployeeMultiplePositions salaryOrHourlyCode(String salaryOrHourlyCode) {
    
    
    
    
    this.salaryOrHourlyCode = salaryOrHourlyCode;
    return this;
  }

   /**
   * Get salaryOrHourlyCode
   * @return salaryOrHourlyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSalaryOrHourlyCode() {
    return salaryOrHourlyCode;
  }


  public void setSalaryOrHourlyCode(String salaryOrHourlyCode) {
    
    
    
    this.salaryOrHourlyCode = salaryOrHourlyCode;
  }


  public EmployeeMultiplePositions salaryOrHourly(String salaryOrHourly) {
    
    
    
    
    this.salaryOrHourly = salaryOrHourly;
    return this;
  }

   /**
   * Get salaryOrHourly
   * @return salaryOrHourly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSalaryOrHourly() {
    return salaryOrHourly;
  }


  public void setSalaryOrHourly(String salaryOrHourly) {
    
    
    
    this.salaryOrHourly = salaryOrHourly;
  }


  public EmployeeMultiplePositions scheduledAnnualHours(Double scheduledAnnualHours) {
    
    
    
    
    this.scheduledAnnualHours = scheduledAnnualHours;
    return this;
  }

  public EmployeeMultiplePositions scheduledAnnualHours(Integer scheduledAnnualHours) {
    
    
    
    
    this.scheduledAnnualHours = scheduledAnnualHours.doubleValue();
    return this;
  }

   /**
   * Get scheduledAnnualHours
   * @return scheduledAnnualHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledAnnualHours() {
    return scheduledAnnualHours;
  }


  public void setScheduledAnnualHours(Double scheduledAnnualHours) {
    
    
    
    this.scheduledAnnualHours = scheduledAnnualHours;
  }


  public EmployeeMultiplePositions scheduledFullTimeEmployee(Double scheduledFullTimeEmployee) {
    
    
    
    
    this.scheduledFullTimeEmployee = scheduledFullTimeEmployee;
    return this;
  }

  public EmployeeMultiplePositions scheduledFullTimeEmployee(Integer scheduledFullTimeEmployee) {
    
    
    
    
    this.scheduledFullTimeEmployee = scheduledFullTimeEmployee.doubleValue();
    return this;
  }

   /**
   * Get scheduledFullTimeEmployee
   * @return scheduledFullTimeEmployee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledFullTimeEmployee() {
    return scheduledFullTimeEmployee;
  }


  public void setScheduledFullTimeEmployee(Double scheduledFullTimeEmployee) {
    
    
    
    this.scheduledFullTimeEmployee = scheduledFullTimeEmployee;
  }


  public EmployeeMultiplePositions scheduledWorkHours(Double scheduledWorkHours) {
    
    
    
    
    this.scheduledWorkHours = scheduledWorkHours;
    return this;
  }

  public EmployeeMultiplePositions scheduledWorkHours(Integer scheduledWorkHours) {
    
    
    
    
    this.scheduledWorkHours = scheduledWorkHours.doubleValue();
    return this;
  }

   /**
   * Get scheduledWorkHours
   * @return scheduledWorkHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledWorkHours() {
    return scheduledWorkHours;
  }


  public void setScheduledWorkHours(Double scheduledWorkHours) {
    
    
    
    this.scheduledWorkHours = scheduledWorkHours;
  }


  public EmployeeMultiplePositions shiftCode(String shiftCode) {
    
    
    
    
    this.shiftCode = shiftCode;
    return this;
  }

   /**
   * Get shiftCode
   * @return shiftCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShiftCode() {
    return shiftCode;
  }


  public void setShiftCode(String shiftCode) {
    
    
    
    this.shiftCode = shiftCode;
  }


  public EmployeeMultiplePositions shiftGroupCode(String shiftGroupCode) {
    
    
    
    
    this.shiftGroupCode = shiftGroupCode;
    return this;
  }

   /**
   * Get shiftGroupCode
   * @return shiftGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShiftGroupCode() {
    return shiftGroupCode;
  }


  public void setShiftGroupCode(String shiftGroupCode) {
    
    
    
    this.shiftGroupCode = shiftGroupCode;
  }


  public EmployeeMultiplePositions shiftGroupDescription(String shiftGroupDescription) {
    
    
    
    
    this.shiftGroupDescription = shiftGroupDescription;
    return this;
  }

   /**
   * Get shiftGroupDescription
   * @return shiftGroupDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShiftGroupDescription() {
    return shiftGroupDescription;
  }


  public void setShiftGroupDescription(String shiftGroupDescription) {
    
    
    
    this.shiftGroupDescription = shiftGroupDescription;
  }


  public EmployeeMultiplePositions systemId(String systemId) {
    
    
    
    
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSystemId() {
    return systemId;
  }


  public void setSystemId(String systemId) {
    
    
    
    this.systemId = systemId;
  }


  public EmployeeMultiplePositions weeklyPayRate(Double weeklyPayRate) {
    
    
    
    
    this.weeklyPayRate = weeklyPayRate;
    return this;
  }

  public EmployeeMultiplePositions weeklyPayRate(Integer weeklyPayRate) {
    
    
    
    
    this.weeklyPayRate = weeklyPayRate.doubleValue();
    return this;
  }

   /**
   * Get weeklyPayRate
   * @return weeklyPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeeklyPayRate() {
    return weeklyPayRate;
  }


  public void setWeeklyPayRate(Double weeklyPayRate) {
    
    
    
    this.weeklyPayRate = weeklyPayRate;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeMultiplePositions instance itself
   */
  public EmployeeMultiplePositions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeMultiplePositions employeeMultiplePositions = (EmployeeMultiplePositions) o;
    return Objects.equals(this.employeeId, employeeMultiplePositions.employeeId) &&
        Objects.equals(this.companyId, employeeMultiplePositions.companyId) &&
        Objects.equals(this.jobCode, employeeMultiplePositions.jobCode) &&
        Objects.equals(this.positionCode, employeeMultiplePositions.positionCode) &&
        Objects.equals(this.isPrimary, employeeMultiplePositions.isPrimary) &&
        Objects.equals(this.annualSalary, employeeMultiplePositions.annualSalary) &&
        Objects.equals(this.hourlyPayRate, employeeMultiplePositions.hourlyPayRate) &&
        Objects.equals(this.fullTimeOrPartTimeCode, employeeMultiplePositions.fullTimeOrPartTimeCode) &&
        Objects.equals(this.fullTimeOrPartTime, employeeMultiplePositions.fullTimeOrPartTime) &&
        Objects.equals(this.clockCode, employeeMultiplePositions.clockCode) &&
        Objects.equals(this.dateTimeCreated, employeeMultiplePositions.dateTimeCreated) &&
        Objects.equals(this.employeeTypeCode, employeeMultiplePositions.employeeTypeCode) &&
        Objects.equals(this.employeeTypeDescription, employeeMultiplePositions.employeeTypeDescription) &&
        Objects.equals(this.effectiveStartDate, employeeMultiplePositions.effectiveStartDate) &&
        Objects.equals(this.effectiveStopDate, employeeMultiplePositions.effectiveStopDate) &&
        Objects.equals(this.isEligibleForBenefits, employeeMultiplePositions.isEligibleForBenefits) &&
        Objects.equals(this.locationCode, employeeMultiplePositions.locationCode) &&
        Objects.equals(this.notes, employeeMultiplePositions.notes) &&
        Objects.equals(this.organizationLevel1Code, employeeMultiplePositions.organizationLevel1Code) &&
        Objects.equals(this.organizationLevel2Code, employeeMultiplePositions.organizationLevel2Code) &&
        Objects.equals(this.organizationLevel3Code, employeeMultiplePositions.organizationLevel3Code) &&
        Objects.equals(this.organizationLevel4Code, employeeMultiplePositions.organizationLevel4Code) &&
        Objects.equals(this.otherRate1, employeeMultiplePositions.otherRate1) &&
        Objects.equals(this.otherRate2, employeeMultiplePositions.otherRate2) &&
        Objects.equals(this.otherRate3, employeeMultiplePositions.otherRate3) &&
        Objects.equals(this.otherRate4, employeeMultiplePositions.otherRate4) &&
        Objects.equals(this.overrideIncumbentData, employeeMultiplePositions.overrideIncumbentData) &&
        Objects.equals(this.payGroupCode, employeeMultiplePositions.payGroupCode) &&
        Objects.equals(this.periodPayRate, employeeMultiplePositions.periodPayRate) &&
        Objects.equals(this.piecePayRate, employeeMultiplePositions.piecePayRate) &&
        Objects.equals(this.projectCode, employeeMultiplePositions.projectCode) &&
        Objects.equals(this.salaryOrHourlyCode, employeeMultiplePositions.salaryOrHourlyCode) &&
        Objects.equals(this.salaryOrHourly, employeeMultiplePositions.salaryOrHourly) &&
        Objects.equals(this.scheduledAnnualHours, employeeMultiplePositions.scheduledAnnualHours) &&
        Objects.equals(this.scheduledFullTimeEmployee, employeeMultiplePositions.scheduledFullTimeEmployee) &&
        Objects.equals(this.scheduledWorkHours, employeeMultiplePositions.scheduledWorkHours) &&
        Objects.equals(this.shiftCode, employeeMultiplePositions.shiftCode) &&
        Objects.equals(this.shiftGroupCode, employeeMultiplePositions.shiftGroupCode) &&
        Objects.equals(this.shiftGroupDescription, employeeMultiplePositions.shiftGroupDescription) &&
        Objects.equals(this.systemId, employeeMultiplePositions.systemId) &&
        Objects.equals(this.weeklyPayRate, employeeMultiplePositions.weeklyPayRate)&&
        Objects.equals(this.additionalProperties, employeeMultiplePositions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeId, companyId, jobCode, positionCode, isPrimary, annualSalary, hourlyPayRate, fullTimeOrPartTimeCode, fullTimeOrPartTime, clockCode, dateTimeCreated, employeeTypeCode, employeeTypeDescription, effectiveStartDate, effectiveStopDate, isEligibleForBenefits, locationCode, notes, organizationLevel1Code, organizationLevel2Code, organizationLevel3Code, organizationLevel4Code, otherRate1, otherRate2, otherRate3, otherRate4, overrideIncumbentData, payGroupCode, periodPayRate, piecePayRate, projectCode, salaryOrHourlyCode, salaryOrHourly, scheduledAnnualHours, scheduledFullTimeEmployee, scheduledWorkHours, shiftCode, shiftGroupCode, shiftGroupDescription, systemId, weeklyPayRate, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeMultiplePositions {\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    jobCode: ").append(toIndentedString(jobCode)).append("\n");
    sb.append("    positionCode: ").append(toIndentedString(positionCode)).append("\n");
    sb.append("    isPrimary: ").append(toIndentedString(isPrimary)).append("\n");
    sb.append("    annualSalary: ").append(toIndentedString(annualSalary)).append("\n");
    sb.append("    hourlyPayRate: ").append(toIndentedString(hourlyPayRate)).append("\n");
    sb.append("    fullTimeOrPartTimeCode: ").append(toIndentedString(fullTimeOrPartTimeCode)).append("\n");
    sb.append("    fullTimeOrPartTime: ").append(toIndentedString(fullTimeOrPartTime)).append("\n");
    sb.append("    clockCode: ").append(toIndentedString(clockCode)).append("\n");
    sb.append("    dateTimeCreated: ").append(toIndentedString(dateTimeCreated)).append("\n");
    sb.append("    employeeTypeCode: ").append(toIndentedString(employeeTypeCode)).append("\n");
    sb.append("    employeeTypeDescription: ").append(toIndentedString(employeeTypeDescription)).append("\n");
    sb.append("    effectiveStartDate: ").append(toIndentedString(effectiveStartDate)).append("\n");
    sb.append("    effectiveStopDate: ").append(toIndentedString(effectiveStopDate)).append("\n");
    sb.append("    isEligibleForBenefits: ").append(toIndentedString(isEligibleForBenefits)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    organizationLevel1Code: ").append(toIndentedString(organizationLevel1Code)).append("\n");
    sb.append("    organizationLevel2Code: ").append(toIndentedString(organizationLevel2Code)).append("\n");
    sb.append("    organizationLevel3Code: ").append(toIndentedString(organizationLevel3Code)).append("\n");
    sb.append("    organizationLevel4Code: ").append(toIndentedString(organizationLevel4Code)).append("\n");
    sb.append("    otherRate1: ").append(toIndentedString(otherRate1)).append("\n");
    sb.append("    otherRate2: ").append(toIndentedString(otherRate2)).append("\n");
    sb.append("    otherRate3: ").append(toIndentedString(otherRate3)).append("\n");
    sb.append("    otherRate4: ").append(toIndentedString(otherRate4)).append("\n");
    sb.append("    overrideIncumbentData: ").append(toIndentedString(overrideIncumbentData)).append("\n");
    sb.append("    payGroupCode: ").append(toIndentedString(payGroupCode)).append("\n");
    sb.append("    periodPayRate: ").append(toIndentedString(periodPayRate)).append("\n");
    sb.append("    piecePayRate: ").append(toIndentedString(piecePayRate)).append("\n");
    sb.append("    projectCode: ").append(toIndentedString(projectCode)).append("\n");
    sb.append("    salaryOrHourlyCode: ").append(toIndentedString(salaryOrHourlyCode)).append("\n");
    sb.append("    salaryOrHourly: ").append(toIndentedString(salaryOrHourly)).append("\n");
    sb.append("    scheduledAnnualHours: ").append(toIndentedString(scheduledAnnualHours)).append("\n");
    sb.append("    scheduledFullTimeEmployee: ").append(toIndentedString(scheduledFullTimeEmployee)).append("\n");
    sb.append("    scheduledWorkHours: ").append(toIndentedString(scheduledWorkHours)).append("\n");
    sb.append("    shiftCode: ").append(toIndentedString(shiftCode)).append("\n");
    sb.append("    shiftGroupCode: ").append(toIndentedString(shiftGroupCode)).append("\n");
    sb.append("    shiftGroupDescription: ").append(toIndentedString(shiftGroupDescription)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    weeklyPayRate: ").append(toIndentedString(weeklyPayRate)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("employeeId");
    openapiFields.add("companyId");
    openapiFields.add("jobCode");
    openapiFields.add("positionCode");
    openapiFields.add("isPrimary");
    openapiFields.add("annualSalary");
    openapiFields.add("hourlyPayRate");
    openapiFields.add("fullTimeOrPartTimeCode");
    openapiFields.add("fullTimeOrPartTime");
    openapiFields.add("clockCode");
    openapiFields.add("dateTimeCreated");
    openapiFields.add("employeeTypeCode");
    openapiFields.add("employeeTypeDescription");
    openapiFields.add("effectiveStartDate");
    openapiFields.add("effectiveStopDate");
    openapiFields.add("isEligibleForBenefits");
    openapiFields.add("locationCode");
    openapiFields.add("notes");
    openapiFields.add("organizationLevel1Code");
    openapiFields.add("organizationLevel2Code");
    openapiFields.add("organizationLevel3Code");
    openapiFields.add("organizationLevel4Code");
    openapiFields.add("otherRate1");
    openapiFields.add("otherRate2");
    openapiFields.add("otherRate3");
    openapiFields.add("otherRate4");
    openapiFields.add("overrideIncumbentData");
    openapiFields.add("payGroupCode");
    openapiFields.add("periodPayRate");
    openapiFields.add("piecePayRate");
    openapiFields.add("projectCode");
    openapiFields.add("salaryOrHourlyCode");
    openapiFields.add("salaryOrHourly");
    openapiFields.add("scheduledAnnualHours");
    openapiFields.add("scheduledFullTimeEmployee");
    openapiFields.add("scheduledWorkHours");
    openapiFields.add("shiftCode");
    openapiFields.add("shiftGroupCode");
    openapiFields.add("shiftGroupDescription");
    openapiFields.add("systemId");
    openapiFields.add("weeklyPayRate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeMultiplePositions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeMultiplePositions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeMultiplePositions is not found in the empty JSON string", EmployeeMultiplePositions.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("jobCode") != null && !jsonObj.get("jobCode").isJsonNull()) && !jsonObj.get("jobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobCode").toString()));
      }
      if ((jsonObj.get("positionCode") != null && !jsonObj.get("positionCode").isJsonNull()) && !jsonObj.get("positionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionCode").toString()));
      }
      if ((jsonObj.get("fullTimeOrPartTimeCode") != null && !jsonObj.get("fullTimeOrPartTimeCode").isJsonNull()) && !jsonObj.get("fullTimeOrPartTimeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullTimeOrPartTimeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullTimeOrPartTimeCode").toString()));
      }
      if ((jsonObj.get("fullTimeOrPartTime") != null && !jsonObj.get("fullTimeOrPartTime").isJsonNull()) && !jsonObj.get("fullTimeOrPartTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullTimeOrPartTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullTimeOrPartTime").toString()));
      }
      if ((jsonObj.get("clockCode") != null && !jsonObj.get("clockCode").isJsonNull()) && !jsonObj.get("clockCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clockCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clockCode").toString()));
      }
      if ((jsonObj.get("employeeTypeCode") != null && !jsonObj.get("employeeTypeCode").isJsonNull()) && !jsonObj.get("employeeTypeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeTypeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeTypeCode").toString()));
      }
      if ((jsonObj.get("employeeTypeDescription") != null && !jsonObj.get("employeeTypeDescription").isJsonNull()) && !jsonObj.get("employeeTypeDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeTypeDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeTypeDescription").toString()));
      }
      if ((jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonNull()) && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("organizationLevel1Code") != null && !jsonObj.get("organizationLevel1Code").isJsonNull()) && !jsonObj.get("organizationLevel1Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevel1Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevel1Code").toString()));
      }
      if ((jsonObj.get("organizationLevel2Code") != null && !jsonObj.get("organizationLevel2Code").isJsonNull()) && !jsonObj.get("organizationLevel2Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevel2Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevel2Code").toString()));
      }
      if ((jsonObj.get("organizationLevel3Code") != null && !jsonObj.get("organizationLevel3Code").isJsonNull()) && !jsonObj.get("organizationLevel3Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevel3Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevel3Code").toString()));
      }
      if ((jsonObj.get("organizationLevel4Code") != null && !jsonObj.get("organizationLevel4Code").isJsonNull()) && !jsonObj.get("organizationLevel4Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `organizationLevel4Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("organizationLevel4Code").toString()));
      }
      if ((jsonObj.get("overrideIncumbentData") != null && !jsonObj.get("overrideIncumbentData").isJsonNull()) && !jsonObj.get("overrideIncumbentData").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `overrideIncumbentData` to be a primitive type in the JSON string but got `%s`", jsonObj.get("overrideIncumbentData").toString()));
      }
      if ((jsonObj.get("payGroupCode") != null && !jsonObj.get("payGroupCode").isJsonNull()) && !jsonObj.get("payGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroupCode").toString()));
      }
      if ((jsonObj.get("projectCode") != null && !jsonObj.get("projectCode").isJsonNull()) && !jsonObj.get("projectCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectCode").toString()));
      }
      if ((jsonObj.get("salaryOrHourlyCode") != null && !jsonObj.get("salaryOrHourlyCode").isJsonNull()) && !jsonObj.get("salaryOrHourlyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salaryOrHourlyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salaryOrHourlyCode").toString()));
      }
      if ((jsonObj.get("salaryOrHourly") != null && !jsonObj.get("salaryOrHourly").isJsonNull()) && !jsonObj.get("salaryOrHourly").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salaryOrHourly` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salaryOrHourly").toString()));
      }
      if ((jsonObj.get("shiftCode") != null && !jsonObj.get("shiftCode").isJsonNull()) && !jsonObj.get("shiftCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shiftCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shiftCode").toString()));
      }
      if ((jsonObj.get("shiftGroupCode") != null && !jsonObj.get("shiftGroupCode").isJsonNull()) && !jsonObj.get("shiftGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shiftGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shiftGroupCode").toString()));
      }
      if ((jsonObj.get("shiftGroupDescription") != null && !jsonObj.get("shiftGroupDescription").isJsonNull()) && !jsonObj.get("shiftGroupDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shiftGroupDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shiftGroupDescription").toString()));
      }
      if ((jsonObj.get("systemId") != null && !jsonObj.get("systemId").isJsonNull()) && !jsonObj.get("systemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `systemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("systemId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeMultiplePositions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeMultiplePositions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeMultiplePositions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeMultiplePositions.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeMultiplePositions>() {
           @Override
           public void write(JsonWriter out, EmployeeMultiplePositions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeMultiplePositions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeMultiplePositions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeMultiplePositions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeMultiplePositions
  * @throws IOException if the JSON string is invalid with respect to EmployeeMultiplePositions
  */
  public static EmployeeMultiplePositions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeMultiplePositions.class);
  }

 /**
  * Convert an instance of EmployeeMultiplePositions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

