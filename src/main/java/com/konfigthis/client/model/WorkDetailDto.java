/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.DepartmentDto;
import com.konfigthis.client.model.DocketDto;
import com.konfigthis.client.model.HourTypeDto;
import com.konfigthis.client.model.JobDto;
import com.konfigthis.client.model.ProjectDto;
import com.konfigthis.client.model.TeamDto;
import com.konfigthis.client.model.TimeCodeDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * WorkDetailDto
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class WorkDetailDto {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_WORK_SUMMARY_ID = "workSummaryId";
  @SerializedName(SERIALIZED_NAME_WORK_SUMMARY_ID)
  private Long workSummaryId;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "endTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_MINUTES = "minutes";
  @SerializedName(SERIALIZED_NAME_MINUTES)
  private Long minutes;

  public static final String SERIALIZED_NAME_RATE = "rate";
  @SerializedName(SERIALIZED_NAME_RATE)
  private Double rate;

  public static final String SERIALIZED_NAME_TIMECODE = "timecode";
  @SerializedName(SERIALIZED_NAME_TIMECODE)
  private TimeCodeDto timecode;

  public static final String SERIALIZED_NAME_HOUR_TYPE = "hourType";
  @SerializedName(SERIALIZED_NAME_HOUR_TYPE)
  private HourTypeDto hourType;

  public static final String SERIALIZED_NAME_JOB = "job";
  @SerializedName(SERIALIZED_NAME_JOB)
  private JobDto job;

  public static final String SERIALIZED_NAME_DEPARTMENT = "department";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT)
  private DepartmentDto department;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private ProjectDto project;

  public static final String SERIALIZED_NAME_DOCKET = "docket";
  @SerializedName(SERIALIZED_NAME_DOCKET)
  private DocketDto docket;

  public static final String SERIALIZED_NAME_TEAM = "team";
  @SerializedName(SERIALIZED_NAME_TEAM)
  private TeamDto team;

  public static final String SERIALIZED_NAME_WORK_TYPE = "workType";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE)
  private String workType;

  public static final String SERIALIZED_NAME_FLAG1 = "flag1";
  @SerializedName(SERIALIZED_NAME_FLAG1)
  private String flag1;

  public static final String SERIALIZED_NAME_FLAG2 = "flag2";
  @SerializedName(SERIALIZED_NAME_FLAG2)
  private String flag2;

  public static final String SERIALIZED_NAME_FLAG3 = "flag3";
  @SerializedName(SERIALIZED_NAME_FLAG3)
  private String flag3;

  public static final String SERIALIZED_NAME_FLAG4 = "flag4";
  @SerializedName(SERIALIZED_NAME_FLAG4)
  private String flag4;

  public static final String SERIALIZED_NAME_FLAG5 = "flag5";
  @SerializedName(SERIALIZED_NAME_FLAG5)
  private String flag5;

  public static final String SERIALIZED_NAME_FLAG6 = "flag6";
  @SerializedName(SERIALIZED_NAME_FLAG6)
  private String flag6;

  public static final String SERIALIZED_NAME_FLAG7 = "flag7";
  @SerializedName(SERIALIZED_NAME_FLAG7)
  private String flag7;

  public static final String SERIALIZED_NAME_FLAG8 = "flag8";
  @SerializedName(SERIALIZED_NAME_FLAG8)
  private String flag8;

  public static final String SERIALIZED_NAME_FLAG9 = "flag9";
  @SerializedName(SERIALIZED_NAME_FLAG9)
  private String flag9;

  public static final String SERIALIZED_NAME_FLAG10 = "flag10";
  @SerializedName(SERIALIZED_NAME_FLAG10)
  private String flag10;

  public static final String SERIALIZED_NAME_UDF1 = "udf1";
  @SerializedName(SERIALIZED_NAME_UDF1)
  private String udf1;

  public static final String SERIALIZED_NAME_UDF2 = "udf2";
  @SerializedName(SERIALIZED_NAME_UDF2)
  private String udf2;

  public static final String SERIALIZED_NAME_UDF3 = "udf3";
  @SerializedName(SERIALIZED_NAME_UDF3)
  private String udf3;

  public static final String SERIALIZED_NAME_UDF4 = "udf4";
  @SerializedName(SERIALIZED_NAME_UDF4)
  private String udf4;

  public static final String SERIALIZED_NAME_UDF5 = "udf5";
  @SerializedName(SERIALIZED_NAME_UDF5)
  private String udf5;

  public static final String SERIALIZED_NAME_UDF6 = "udf6";
  @SerializedName(SERIALIZED_NAME_UDF6)
  private String udf6;

  public static final String SERIALIZED_NAME_UDF7 = "udf7";
  @SerializedName(SERIALIZED_NAME_UDF7)
  private String udf7;

  public static final String SERIALIZED_NAME_UDF8 = "udf8";
  @SerializedName(SERIALIZED_NAME_UDF8)
  private String udf8;

  public static final String SERIALIZED_NAME_UDF9 = "udf9";
  @SerializedName(SERIALIZED_NAME_UDF9)
  private String udf9;

  public static final String SERIALIZED_NAME_UDF10 = "udf10";
  @SerializedName(SERIALIZED_NAME_UDF10)
  private String udf10;

  public WorkDetailDto() {
  }

  public WorkDetailDto id(Long id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getId() {
    return id;
  }


  public void setId(Long id) {
    
    
    
    this.id = id;
  }


  public WorkDetailDto workSummaryId(Long workSummaryId) {
    
    
    
    
    this.workSummaryId = workSummaryId;
    return this;
  }

   /**
   * Get workSummaryId
   * @return workSummaryId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getWorkSummaryId() {
    return workSummaryId;
  }


  public void setWorkSummaryId(Long workSummaryId) {
    
    
    
    this.workSummaryId = workSummaryId;
  }


  public WorkDetailDto startTime(OffsetDateTime startTime) {
    
    
    
    
    this.startTime = startTime;
    return this;
  }

   /**
   * Get startTime
   * @return startTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartTime() {
    return startTime;
  }


  public void setStartTime(OffsetDateTime startTime) {
    
    
    
    this.startTime = startTime;
  }


  public WorkDetailDto endTime(OffsetDateTime endTime) {
    
    
    
    
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndTime() {
    return endTime;
  }


  public void setEndTime(OffsetDateTime endTime) {
    
    
    
    this.endTime = endTime;
  }


  public WorkDetailDto minutes(Long minutes) {
    
    
    
    
    this.minutes = minutes;
    return this;
  }

   /**
   * Get minutes
   * @return minutes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getMinutes() {
    return minutes;
  }


  public void setMinutes(Long minutes) {
    
    
    
    this.minutes = minutes;
  }


  public WorkDetailDto rate(Double rate) {
    
    
    
    
    this.rate = rate;
    return this;
  }

   /**
   * Get rate
   * @return rate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getRate() {
    return rate;
  }


  public void setRate(Double rate) {
    
    
    
    this.rate = rate;
  }


  public WorkDetailDto timecode(TimeCodeDto timecode) {
    
    
    
    
    this.timecode = timecode;
    return this;
  }

   /**
   * Get timecode
   * @return timecode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TimeCodeDto getTimecode() {
    return timecode;
  }


  public void setTimecode(TimeCodeDto timecode) {
    
    
    
    this.timecode = timecode;
  }


  public WorkDetailDto hourType(HourTypeDto hourType) {
    
    
    
    
    this.hourType = hourType;
    return this;
  }

   /**
   * Get hourType
   * @return hourType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public HourTypeDto getHourType() {
    return hourType;
  }


  public void setHourType(HourTypeDto hourType) {
    
    
    
    this.hourType = hourType;
  }


  public WorkDetailDto job(JobDto job) {
    
    
    
    
    this.job = job;
    return this;
  }

   /**
   * Get job
   * @return job
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public JobDto getJob() {
    return job;
  }


  public void setJob(JobDto job) {
    
    
    
    this.job = job;
  }


  public WorkDetailDto department(DepartmentDto department) {
    
    
    
    
    this.department = department;
    return this;
  }

   /**
   * Get department
   * @return department
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DepartmentDto getDepartment() {
    return department;
  }


  public void setDepartment(DepartmentDto department) {
    
    
    
    this.department = department;
  }


  public WorkDetailDto project(ProjectDto project) {
    
    
    
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public ProjectDto getProject() {
    return project;
  }


  public void setProject(ProjectDto project) {
    
    
    
    this.project = project;
  }


  public WorkDetailDto docket(DocketDto docket) {
    
    
    
    
    this.docket = docket;
    return this;
  }

   /**
   * Get docket
   * @return docket
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public DocketDto getDocket() {
    return docket;
  }


  public void setDocket(DocketDto docket) {
    
    
    
    this.docket = docket;
  }


  public WorkDetailDto team(TeamDto team) {
    
    
    
    
    this.team = team;
    return this;
  }

   /**
   * Get team
   * @return team
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public TeamDto getTeam() {
    return team;
  }


  public void setTeam(TeamDto team) {
    
    
    
    this.team = team;
  }


  public WorkDetailDto workType(String workType) {
    
    
    
    
    this.workType = workType;
    return this;
  }

   /**
   * Get workType
   * @return workType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkType() {
    return workType;
  }


  public void setWorkType(String workType) {
    
    
    
    this.workType = workType;
  }


  public WorkDetailDto flag1(String flag1) {
    
    
    
    
    this.flag1 = flag1;
    return this;
  }

   /**
   * Get flag1
   * @return flag1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag1() {
    return flag1;
  }


  public void setFlag1(String flag1) {
    
    
    
    this.flag1 = flag1;
  }


  public WorkDetailDto flag2(String flag2) {
    
    
    
    
    this.flag2 = flag2;
    return this;
  }

   /**
   * Get flag2
   * @return flag2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag2() {
    return flag2;
  }


  public void setFlag2(String flag2) {
    
    
    
    this.flag2 = flag2;
  }


  public WorkDetailDto flag3(String flag3) {
    
    
    
    
    this.flag3 = flag3;
    return this;
  }

   /**
   * Get flag3
   * @return flag3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag3() {
    return flag3;
  }


  public void setFlag3(String flag3) {
    
    
    
    this.flag3 = flag3;
  }


  public WorkDetailDto flag4(String flag4) {
    
    
    
    
    this.flag4 = flag4;
    return this;
  }

   /**
   * Get flag4
   * @return flag4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag4() {
    return flag4;
  }


  public void setFlag4(String flag4) {
    
    
    
    this.flag4 = flag4;
  }


  public WorkDetailDto flag5(String flag5) {
    
    
    
    
    this.flag5 = flag5;
    return this;
  }

   /**
   * Get flag5
   * @return flag5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag5() {
    return flag5;
  }


  public void setFlag5(String flag5) {
    
    
    
    this.flag5 = flag5;
  }


  public WorkDetailDto flag6(String flag6) {
    
    
    
    
    this.flag6 = flag6;
    return this;
  }

   /**
   * Get flag6
   * @return flag6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag6() {
    return flag6;
  }


  public void setFlag6(String flag6) {
    
    
    
    this.flag6 = flag6;
  }


  public WorkDetailDto flag7(String flag7) {
    
    
    
    
    this.flag7 = flag7;
    return this;
  }

   /**
   * Get flag7
   * @return flag7
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag7() {
    return flag7;
  }


  public void setFlag7(String flag7) {
    
    
    
    this.flag7 = flag7;
  }


  public WorkDetailDto flag8(String flag8) {
    
    
    
    
    this.flag8 = flag8;
    return this;
  }

   /**
   * Get flag8
   * @return flag8
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag8() {
    return flag8;
  }


  public void setFlag8(String flag8) {
    
    
    
    this.flag8 = flag8;
  }


  public WorkDetailDto flag9(String flag9) {
    
    
    
    
    this.flag9 = flag9;
    return this;
  }

   /**
   * Get flag9
   * @return flag9
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag9() {
    return flag9;
  }


  public void setFlag9(String flag9) {
    
    
    
    this.flag9 = flag9;
  }


  public WorkDetailDto flag10(String flag10) {
    
    
    
    
    this.flag10 = flag10;
    return this;
  }

   /**
   * Get flag10
   * @return flag10
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlag10() {
    return flag10;
  }


  public void setFlag10(String flag10) {
    
    
    
    this.flag10 = flag10;
  }


  public WorkDetailDto udf1(String udf1) {
    
    
    
    
    this.udf1 = udf1;
    return this;
  }

   /**
   * Get udf1
   * @return udf1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf1() {
    return udf1;
  }


  public void setUdf1(String udf1) {
    
    
    
    this.udf1 = udf1;
  }


  public WorkDetailDto udf2(String udf2) {
    
    
    
    
    this.udf2 = udf2;
    return this;
  }

   /**
   * Get udf2
   * @return udf2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf2() {
    return udf2;
  }


  public void setUdf2(String udf2) {
    
    
    
    this.udf2 = udf2;
  }


  public WorkDetailDto udf3(String udf3) {
    
    
    
    
    this.udf3 = udf3;
    return this;
  }

   /**
   * Get udf3
   * @return udf3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf3() {
    return udf3;
  }


  public void setUdf3(String udf3) {
    
    
    
    this.udf3 = udf3;
  }


  public WorkDetailDto udf4(String udf4) {
    
    
    
    
    this.udf4 = udf4;
    return this;
  }

   /**
   * Get udf4
   * @return udf4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf4() {
    return udf4;
  }


  public void setUdf4(String udf4) {
    
    
    
    this.udf4 = udf4;
  }


  public WorkDetailDto udf5(String udf5) {
    
    
    
    
    this.udf5 = udf5;
    return this;
  }

   /**
   * Get udf5
   * @return udf5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf5() {
    return udf5;
  }


  public void setUdf5(String udf5) {
    
    
    
    this.udf5 = udf5;
  }


  public WorkDetailDto udf6(String udf6) {
    
    
    
    
    this.udf6 = udf6;
    return this;
  }

   /**
   * Get udf6
   * @return udf6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf6() {
    return udf6;
  }


  public void setUdf6(String udf6) {
    
    
    
    this.udf6 = udf6;
  }


  public WorkDetailDto udf7(String udf7) {
    
    
    
    
    this.udf7 = udf7;
    return this;
  }

   /**
   * Get udf7
   * @return udf7
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf7() {
    return udf7;
  }


  public void setUdf7(String udf7) {
    
    
    
    this.udf7 = udf7;
  }


  public WorkDetailDto udf8(String udf8) {
    
    
    
    
    this.udf8 = udf8;
    return this;
  }

   /**
   * Get udf8
   * @return udf8
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf8() {
    return udf8;
  }


  public void setUdf8(String udf8) {
    
    
    
    this.udf8 = udf8;
  }


  public WorkDetailDto udf9(String udf9) {
    
    
    
    
    this.udf9 = udf9;
    return this;
  }

   /**
   * Get udf9
   * @return udf9
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf9() {
    return udf9;
  }


  public void setUdf9(String udf9) {
    
    
    
    this.udf9 = udf9;
  }


  public WorkDetailDto udf10(String udf10) {
    
    
    
    
    this.udf10 = udf10;
    return this;
  }

   /**
   * Get udf10
   * @return udf10
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUdf10() {
    return udf10;
  }


  public void setUdf10(String udf10) {
    
    
    
    this.udf10 = udf10;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the WorkDetailDto instance itself
   */
  public WorkDetailDto putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkDetailDto workDetailDto = (WorkDetailDto) o;
    return Objects.equals(this.id, workDetailDto.id) &&
        Objects.equals(this.workSummaryId, workDetailDto.workSummaryId) &&
        Objects.equals(this.startTime, workDetailDto.startTime) &&
        Objects.equals(this.endTime, workDetailDto.endTime) &&
        Objects.equals(this.minutes, workDetailDto.minutes) &&
        Objects.equals(this.rate, workDetailDto.rate) &&
        Objects.equals(this.timecode, workDetailDto.timecode) &&
        Objects.equals(this.hourType, workDetailDto.hourType) &&
        Objects.equals(this.job, workDetailDto.job) &&
        Objects.equals(this.department, workDetailDto.department) &&
        Objects.equals(this.project, workDetailDto.project) &&
        Objects.equals(this.docket, workDetailDto.docket) &&
        Objects.equals(this.team, workDetailDto.team) &&
        Objects.equals(this.workType, workDetailDto.workType) &&
        Objects.equals(this.flag1, workDetailDto.flag1) &&
        Objects.equals(this.flag2, workDetailDto.flag2) &&
        Objects.equals(this.flag3, workDetailDto.flag3) &&
        Objects.equals(this.flag4, workDetailDto.flag4) &&
        Objects.equals(this.flag5, workDetailDto.flag5) &&
        Objects.equals(this.flag6, workDetailDto.flag6) &&
        Objects.equals(this.flag7, workDetailDto.flag7) &&
        Objects.equals(this.flag8, workDetailDto.flag8) &&
        Objects.equals(this.flag9, workDetailDto.flag9) &&
        Objects.equals(this.flag10, workDetailDto.flag10) &&
        Objects.equals(this.udf1, workDetailDto.udf1) &&
        Objects.equals(this.udf2, workDetailDto.udf2) &&
        Objects.equals(this.udf3, workDetailDto.udf3) &&
        Objects.equals(this.udf4, workDetailDto.udf4) &&
        Objects.equals(this.udf5, workDetailDto.udf5) &&
        Objects.equals(this.udf6, workDetailDto.udf6) &&
        Objects.equals(this.udf7, workDetailDto.udf7) &&
        Objects.equals(this.udf8, workDetailDto.udf8) &&
        Objects.equals(this.udf9, workDetailDto.udf9) &&
        Objects.equals(this.udf10, workDetailDto.udf10)&&
        Objects.equals(this.additionalProperties, workDetailDto.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, workSummaryId, startTime, endTime, minutes, rate, timecode, hourType, job, department, project, docket, team, workType, flag1, flag2, flag3, flag4, flag5, flag6, flag7, flag8, flag9, flag10, udf1, udf2, udf3, udf4, udf5, udf6, udf7, udf8, udf9, udf10, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkDetailDto {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    workSummaryId: ").append(toIndentedString(workSummaryId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    minutes: ").append(toIndentedString(minutes)).append("\n");
    sb.append("    rate: ").append(toIndentedString(rate)).append("\n");
    sb.append("    timecode: ").append(toIndentedString(timecode)).append("\n");
    sb.append("    hourType: ").append(toIndentedString(hourType)).append("\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    department: ").append(toIndentedString(department)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    docket: ").append(toIndentedString(docket)).append("\n");
    sb.append("    team: ").append(toIndentedString(team)).append("\n");
    sb.append("    workType: ").append(toIndentedString(workType)).append("\n");
    sb.append("    flag1: ").append(toIndentedString(flag1)).append("\n");
    sb.append("    flag2: ").append(toIndentedString(flag2)).append("\n");
    sb.append("    flag3: ").append(toIndentedString(flag3)).append("\n");
    sb.append("    flag4: ").append(toIndentedString(flag4)).append("\n");
    sb.append("    flag5: ").append(toIndentedString(flag5)).append("\n");
    sb.append("    flag6: ").append(toIndentedString(flag6)).append("\n");
    sb.append("    flag7: ").append(toIndentedString(flag7)).append("\n");
    sb.append("    flag8: ").append(toIndentedString(flag8)).append("\n");
    sb.append("    flag9: ").append(toIndentedString(flag9)).append("\n");
    sb.append("    flag10: ").append(toIndentedString(flag10)).append("\n");
    sb.append("    udf1: ").append(toIndentedString(udf1)).append("\n");
    sb.append("    udf2: ").append(toIndentedString(udf2)).append("\n");
    sb.append("    udf3: ").append(toIndentedString(udf3)).append("\n");
    sb.append("    udf4: ").append(toIndentedString(udf4)).append("\n");
    sb.append("    udf5: ").append(toIndentedString(udf5)).append("\n");
    sb.append("    udf6: ").append(toIndentedString(udf6)).append("\n");
    sb.append("    udf7: ").append(toIndentedString(udf7)).append("\n");
    sb.append("    udf8: ").append(toIndentedString(udf8)).append("\n");
    sb.append("    udf9: ").append(toIndentedString(udf9)).append("\n");
    sb.append("    udf10: ").append(toIndentedString(udf10)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("workSummaryId");
    openapiFields.add("startTime");
    openapiFields.add("endTime");
    openapiFields.add("minutes");
    openapiFields.add("rate");
    openapiFields.add("timecode");
    openapiFields.add("hourType");
    openapiFields.add("job");
    openapiFields.add("department");
    openapiFields.add("project");
    openapiFields.add("docket");
    openapiFields.add("team");
    openapiFields.add("workType");
    openapiFields.add("flag1");
    openapiFields.add("flag2");
    openapiFields.add("flag3");
    openapiFields.add("flag4");
    openapiFields.add("flag5");
    openapiFields.add("flag6");
    openapiFields.add("flag7");
    openapiFields.add("flag8");
    openapiFields.add("flag9");
    openapiFields.add("flag10");
    openapiFields.add("udf1");
    openapiFields.add("udf2");
    openapiFields.add("udf3");
    openapiFields.add("udf4");
    openapiFields.add("udf5");
    openapiFields.add("udf6");
    openapiFields.add("udf7");
    openapiFields.add("udf8");
    openapiFields.add("udf9");
    openapiFields.add("udf10");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to WorkDetailDto
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!WorkDetailDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in WorkDetailDto is not found in the empty JSON string", WorkDetailDto.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `timecode`
      if (jsonObj.get("timecode") != null && !jsonObj.get("timecode").isJsonNull()) {
        TimeCodeDto.validateJsonObject(jsonObj.getAsJsonObject("timecode"));
      }
      // validate the optional field `hourType`
      if (jsonObj.get("hourType") != null && !jsonObj.get("hourType").isJsonNull()) {
        HourTypeDto.validateJsonObject(jsonObj.getAsJsonObject("hourType"));
      }
      // validate the optional field `job`
      if (jsonObj.get("job") != null && !jsonObj.get("job").isJsonNull()) {
        JobDto.validateJsonObject(jsonObj.getAsJsonObject("job"));
      }
      // validate the optional field `department`
      if (jsonObj.get("department") != null && !jsonObj.get("department").isJsonNull()) {
        DepartmentDto.validateJsonObject(jsonObj.getAsJsonObject("department"));
      }
      // validate the optional field `project`
      if (jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) {
        ProjectDto.validateJsonObject(jsonObj.getAsJsonObject("project"));
      }
      // validate the optional field `docket`
      if (jsonObj.get("docket") != null && !jsonObj.get("docket").isJsonNull()) {
        DocketDto.validateJsonObject(jsonObj.getAsJsonObject("docket"));
      }
      // validate the optional field `team`
      if (jsonObj.get("team") != null && !jsonObj.get("team").isJsonNull()) {
        TeamDto.validateJsonObject(jsonObj.getAsJsonObject("team"));
      }
      if ((jsonObj.get("workType") != null && !jsonObj.get("workType").isJsonNull()) && !jsonObj.get("workType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workType").toString()));
      }
      if ((jsonObj.get("flag1") != null && !jsonObj.get("flag1").isJsonNull()) && !jsonObj.get("flag1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag1").toString()));
      }
      if ((jsonObj.get("flag2") != null && !jsonObj.get("flag2").isJsonNull()) && !jsonObj.get("flag2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag2").toString()));
      }
      if ((jsonObj.get("flag3") != null && !jsonObj.get("flag3").isJsonNull()) && !jsonObj.get("flag3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag3").toString()));
      }
      if ((jsonObj.get("flag4") != null && !jsonObj.get("flag4").isJsonNull()) && !jsonObj.get("flag4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag4").toString()));
      }
      if ((jsonObj.get("flag5") != null && !jsonObj.get("flag5").isJsonNull()) && !jsonObj.get("flag5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag5").toString()));
      }
      if ((jsonObj.get("flag6") != null && !jsonObj.get("flag6").isJsonNull()) && !jsonObj.get("flag6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag6").toString()));
      }
      if ((jsonObj.get("flag7") != null && !jsonObj.get("flag7").isJsonNull()) && !jsonObj.get("flag7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag7").toString()));
      }
      if ((jsonObj.get("flag8") != null && !jsonObj.get("flag8").isJsonNull()) && !jsonObj.get("flag8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag8").toString()));
      }
      if ((jsonObj.get("flag9") != null && !jsonObj.get("flag9").isJsonNull()) && !jsonObj.get("flag9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag9").toString()));
      }
      if ((jsonObj.get("flag10") != null && !jsonObj.get("flag10").isJsonNull()) && !jsonObj.get("flag10").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flag10` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flag10").toString()));
      }
      if ((jsonObj.get("udf1") != null && !jsonObj.get("udf1").isJsonNull()) && !jsonObj.get("udf1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf1").toString()));
      }
      if ((jsonObj.get("udf2") != null && !jsonObj.get("udf2").isJsonNull()) && !jsonObj.get("udf2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf2").toString()));
      }
      if ((jsonObj.get("udf3") != null && !jsonObj.get("udf3").isJsonNull()) && !jsonObj.get("udf3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf3").toString()));
      }
      if ((jsonObj.get("udf4") != null && !jsonObj.get("udf4").isJsonNull()) && !jsonObj.get("udf4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf4").toString()));
      }
      if ((jsonObj.get("udf5") != null && !jsonObj.get("udf5").isJsonNull()) && !jsonObj.get("udf5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf5").toString()));
      }
      if ((jsonObj.get("udf6") != null && !jsonObj.get("udf6").isJsonNull()) && !jsonObj.get("udf6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf6").toString()));
      }
      if ((jsonObj.get("udf7") != null && !jsonObj.get("udf7").isJsonNull()) && !jsonObj.get("udf7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf7").toString()));
      }
      if ((jsonObj.get("udf8") != null && !jsonObj.get("udf8").isJsonNull()) && !jsonObj.get("udf8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf8").toString()));
      }
      if ((jsonObj.get("udf9") != null && !jsonObj.get("udf9").isJsonNull()) && !jsonObj.get("udf9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf9").toString()));
      }
      if ((jsonObj.get("udf10") != null && !jsonObj.get("udf10").isJsonNull()) && !jsonObj.get("udf10").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `udf10` to be a primitive type in the JSON string but got `%s`", jsonObj.get("udf10").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!WorkDetailDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'WorkDetailDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<WorkDetailDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(WorkDetailDto.class));

       return (TypeAdapter<T>) new TypeAdapter<WorkDetailDto>() {
           @Override
           public void write(JsonWriter out, WorkDetailDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public WorkDetailDto read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             WorkDetailDto instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of WorkDetailDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of WorkDetailDto
  * @throws IOException if the JSON string is invalid with respect to WorkDetailDto
  */
  public static WorkDetailDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, WorkDetailDto.class);
  }

 /**
  * Convert an instance of WorkDetailDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

