/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * CompanyDetails
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class CompanyDetails {
  public static final String SERIALIZED_NAME_IS_MASTER_COMPANY = "isMasterCompany";
  @SerializedName(SERIALIZED_NAME_IS_MASTER_COMPANY)
  private String isMasterCompany;

  public static final String SERIALIZED_NAME_MASTER_COMPANY_ID = "masterCompanyId";
  @SerializedName(SERIALIZED_NAME_MASTER_COMPANY_ID)
  private String masterCompanyId;

  public static final String SERIALIZED_NAME_COMPANY_I_D = "companyID";
  @SerializedName(SERIALIZED_NAME_COMPANY_I_D)
  private String companyID;

  public static final String SERIALIZED_NAME_COMPANY_CODE = "companyCode";
  @SerializedName(SERIALIZED_NAME_COMPANY_CODE)
  private String companyCode;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_ADDRESS_CITY = "addressCity";
  @SerializedName(SERIALIZED_NAME_ADDRESS_CITY)
  private String addressCity;

  public static final String SERIALIZED_NAME_ADDRESS_STATE = "addressState";
  @SerializedName(SERIALIZED_NAME_ADDRESS_STATE)
  private String addressState;

  public static final String SERIALIZED_NAME_ADDRESS_ZIP_CODE = "addressZipCode";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ZIP_CODE)
  private String addressZipCode;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTRY = "addressCountry";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTRY)
  private String addressCountry;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTY = "addressCounty";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTY)
  private String addressCounty;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phoneNumber";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_PHONE_NUMBER_EXTENSION = "phoneNumberExtension";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER_EXTENSION)
  private String phoneNumberExtension;

  public static final String SERIALIZED_NAME_FEDERAL_TAX_ID = "federalTaxId";
  @SerializedName(SERIALIZED_NAME_FEDERAL_TAX_ID)
  private String federalTaxId;

  public static final String SERIALIZED_NAME_ORG_LEVEL1_CODE = "orgLevel1Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL1_CODE)
  private String orgLevel1Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL2_CODE = "orgLevel2Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL2_CODE)
  private String orgLevel2Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL3_CODE = "orgLevel3Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL3_CODE)
  private String orgLevel3Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL4_CODE = "orgLevel4Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL4_CODE)
  private String orgLevel4Code;

  public CompanyDetails() {
  }

  public CompanyDetails isMasterCompany(String isMasterCompany) {
    
    
    
    
    this.isMasterCompany = isMasterCompany;
    return this;
  }

   /**
   * true/false value represents if this company is a UKG Pro Master Company
   * @return isMasterCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "true/false value represents if this company is a UKG Pro Master Company")

  public String getIsMasterCompany() {
    return isMasterCompany;
  }


  public void setIsMasterCompany(String isMasterCompany) {
    
    
    
    this.isMasterCompany = isMasterCompany;
  }


  public CompanyDetails masterCompanyId(String masterCompanyId) {
    
    
    
    
    this.masterCompanyId = masterCompanyId;
    return this;
  }

   /**
   * 5 character value represents a UKG Pro Master CompanyID
   * @return masterCompanyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "5 character value represents a UKG Pro Master CompanyID")

  public String getMasterCompanyId() {
    return masterCompanyId;
  }


  public void setMasterCompanyId(String masterCompanyId) {
    
    
    
    this.masterCompanyId = masterCompanyId;
  }


  public CompanyDetails companyID(String companyID) {
    
    
    
    
    this.companyID = companyID;
    return this;
  }

   /**
   * 5 character value represents a UKG Pro CompanyID
   * @return companyID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "5 character value represents a UKG Pro CompanyID")

  public String getCompanyID() {
    return companyID;
  }


  public void setCompanyID(String companyID) {
    
    
    
    this.companyID = companyID;
  }


  public CompanyDetails companyCode(String companyCode) {
    
    
    
    
    this.companyCode = companyCode;
    return this;
  }

   /**
   * 5 character value represents a UKG Pro Company Code
   * @return companyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "5 character value represents a UKG Pro Company Code")

  public String getCompanyCode() {
    return companyCode;
  }


  public void setCompanyCode(String companyCode) {
    
    
    
    this.companyCode = companyCode;
  }


  public CompanyDetails companyName(String companyName) {
    
    
    
    
    this.companyName = companyName;
    return this;
  }

   /**
   * Customer identified name of a UKG Pro Company
   * @return companyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer identified name of a UKG Pro Company")

  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    
    
    
    this.companyName = companyName;
  }


  public CompanyDetails addressLine1(String addressLine1) {
    
    
    
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Main address line of a UKG Pro Company
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Main address line of a UKG Pro Company")

  public String getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(String addressLine1) {
    
    
    
    this.addressLine1 = addressLine1;
  }


  public CompanyDetails addressLine2(String addressLine2) {
    
    
    
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Secondary address line of a UKG Pro Company
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Secondary address line of a UKG Pro Company")

  public String getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(String addressLine2) {
    
    
    
    this.addressLine2 = addressLine2;
  }


  public CompanyDetails addressCity(String addressCity) {
    
    
    
    
    this.addressCity = addressCity;
    return this;
  }

   /**
   * Address city of a UKG Pro Company
   * @return addressCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address city of a UKG Pro Company")

  public String getAddressCity() {
    return addressCity;
  }


  public void setAddressCity(String addressCity) {
    
    
    
    this.addressCity = addressCity;
  }


  public CompanyDetails addressState(String addressState) {
    
    
    
    
    this.addressState = addressState;
    return this;
  }

   /**
   * Address state of a UKG Pro Company
   * @return addressState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address state of a UKG Pro Company")

  public String getAddressState() {
    return addressState;
  }


  public void setAddressState(String addressState) {
    
    
    
    this.addressState = addressState;
  }


  public CompanyDetails addressZipCode(String addressZipCode) {
    
    
    
    
    this.addressZipCode = addressZipCode;
    return this;
  }

   /**
   * Address zip code of a UKG Pro Company
   * @return addressZipCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address zip code of a UKG Pro Company")

  public String getAddressZipCode() {
    return addressZipCode;
  }


  public void setAddressZipCode(String addressZipCode) {
    
    
    
    this.addressZipCode = addressZipCode;
  }


  public CompanyDetails addressCountry(String addressCountry) {
    
    
    
    
    this.addressCountry = addressCountry;
    return this;
  }

   /**
   * Address country of a UKG Pro Company
   * @return addressCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address country of a UKG Pro Company")

  public String getAddressCountry() {
    return addressCountry;
  }


  public void setAddressCountry(String addressCountry) {
    
    
    
    this.addressCountry = addressCountry;
  }


  public CompanyDetails addressCounty(String addressCounty) {
    
    
    
    
    this.addressCounty = addressCounty;
    return this;
  }

   /**
   * Address county of a UKG Pro Company
   * @return addressCounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Address county of a UKG Pro Company")

  public String getAddressCounty() {
    return addressCounty;
  }


  public void setAddressCounty(String addressCounty) {
    
    
    
    this.addressCounty = addressCounty;
  }


  public CompanyDetails phoneNumber(String phoneNumber) {
    
    
    
    
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Customer identified phone number of a UKG Pro Company
   * @return phoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Customer identified phone number of a UKG Pro Company")

  public String getPhoneNumber() {
    return phoneNumber;
  }


  public void setPhoneNumber(String phoneNumber) {
    
    
    
    this.phoneNumber = phoneNumber;
  }


  public CompanyDetails phoneNumberExtension(String phoneNumberExtension) {
    
    
    
    
    this.phoneNumberExtension = phoneNumberExtension;
    return this;
  }

   /**
   * Phone number extension for a UKG Pro Company
   * @return phoneNumberExtension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phone number extension for a UKG Pro Company")

  public String getPhoneNumberExtension() {
    return phoneNumberExtension;
  }


  public void setPhoneNumberExtension(String phoneNumberExtension) {
    
    
    
    this.phoneNumberExtension = phoneNumberExtension;
  }


  public CompanyDetails federalTaxId(String federalTaxId) {
    
    
    
    
    this.federalTaxId = federalTaxId;
    return this;
  }

   /**
   * US FEIN for a UKG Pro Company
   * @return federalTaxId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "US FEIN for a UKG Pro Company")

  public String getFederalTaxId() {
    return federalTaxId;
  }


  public void setFederalTaxId(String federalTaxId) {
    
    
    
    this.federalTaxId = federalTaxId;
  }


  public CompanyDetails orgLevel1Code(String orgLevel1Code) {
    
    
    
    
    this.orgLevel1Code = orgLevel1Code;
    return this;
  }

   /**
   * Represents field defined as Org Level 1 for a UKG Pro Company
   * @return orgLevel1Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Represents field defined as Org Level 1 for a UKG Pro Company")

  public String getOrgLevel1Code() {
    return orgLevel1Code;
  }


  public void setOrgLevel1Code(String orgLevel1Code) {
    
    
    
    this.orgLevel1Code = orgLevel1Code;
  }


  public CompanyDetails orgLevel2Code(String orgLevel2Code) {
    
    
    
    
    this.orgLevel2Code = orgLevel2Code;
    return this;
  }

   /**
   * Represents field defined as Org Level 2 for a UKG Pro Company
   * @return orgLevel2Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Represents field defined as Org Level 2 for a UKG Pro Company")

  public String getOrgLevel2Code() {
    return orgLevel2Code;
  }


  public void setOrgLevel2Code(String orgLevel2Code) {
    
    
    
    this.orgLevel2Code = orgLevel2Code;
  }


  public CompanyDetails orgLevel3Code(String orgLevel3Code) {
    
    
    
    
    this.orgLevel3Code = orgLevel3Code;
    return this;
  }

   /**
   * Represents field defined as Org Level 3 for a UKG Pro Company
   * @return orgLevel3Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Represents field defined as Org Level 3 for a UKG Pro Company")

  public String getOrgLevel3Code() {
    return orgLevel3Code;
  }


  public void setOrgLevel3Code(String orgLevel3Code) {
    
    
    
    this.orgLevel3Code = orgLevel3Code;
  }


  public CompanyDetails orgLevel4Code(String orgLevel4Code) {
    
    
    
    
    this.orgLevel4Code = orgLevel4Code;
    return this;
  }

   /**
   * Represents field defined as Org Level 4 for a UKG Pro Company
   * @return orgLevel4Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Represents field defined as Org Level 4 for a UKG Pro Company")

  public String getOrgLevel4Code() {
    return orgLevel4Code;
  }


  public void setOrgLevel4Code(String orgLevel4Code) {
    
    
    
    this.orgLevel4Code = orgLevel4Code;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CompanyDetails instance itself
   */
  public CompanyDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyDetails companyDetails = (CompanyDetails) o;
    return Objects.equals(this.isMasterCompany, companyDetails.isMasterCompany) &&
        Objects.equals(this.masterCompanyId, companyDetails.masterCompanyId) &&
        Objects.equals(this.companyID, companyDetails.companyID) &&
        Objects.equals(this.companyCode, companyDetails.companyCode) &&
        Objects.equals(this.companyName, companyDetails.companyName) &&
        Objects.equals(this.addressLine1, companyDetails.addressLine1) &&
        Objects.equals(this.addressLine2, companyDetails.addressLine2) &&
        Objects.equals(this.addressCity, companyDetails.addressCity) &&
        Objects.equals(this.addressState, companyDetails.addressState) &&
        Objects.equals(this.addressZipCode, companyDetails.addressZipCode) &&
        Objects.equals(this.addressCountry, companyDetails.addressCountry) &&
        Objects.equals(this.addressCounty, companyDetails.addressCounty) &&
        Objects.equals(this.phoneNumber, companyDetails.phoneNumber) &&
        Objects.equals(this.phoneNumberExtension, companyDetails.phoneNumberExtension) &&
        Objects.equals(this.federalTaxId, companyDetails.federalTaxId) &&
        Objects.equals(this.orgLevel1Code, companyDetails.orgLevel1Code) &&
        Objects.equals(this.orgLevel2Code, companyDetails.orgLevel2Code) &&
        Objects.equals(this.orgLevel3Code, companyDetails.orgLevel3Code) &&
        Objects.equals(this.orgLevel4Code, companyDetails.orgLevel4Code)&&
        Objects.equals(this.additionalProperties, companyDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isMasterCompany, masterCompanyId, companyID, companyCode, companyName, addressLine1, addressLine2, addressCity, addressState, addressZipCode, addressCountry, addressCounty, phoneNumber, phoneNumberExtension, federalTaxId, orgLevel1Code, orgLevel2Code, orgLevel3Code, orgLevel4Code, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyDetails {\n");
    sb.append("    isMasterCompany: ").append(toIndentedString(isMasterCompany)).append("\n");
    sb.append("    masterCompanyId: ").append(toIndentedString(masterCompanyId)).append("\n");
    sb.append("    companyID: ").append(toIndentedString(companyID)).append("\n");
    sb.append("    companyCode: ").append(toIndentedString(companyCode)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressCity: ").append(toIndentedString(addressCity)).append("\n");
    sb.append("    addressState: ").append(toIndentedString(addressState)).append("\n");
    sb.append("    addressZipCode: ").append(toIndentedString(addressZipCode)).append("\n");
    sb.append("    addressCountry: ").append(toIndentedString(addressCountry)).append("\n");
    sb.append("    addressCounty: ").append(toIndentedString(addressCounty)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    phoneNumberExtension: ").append(toIndentedString(phoneNumberExtension)).append("\n");
    sb.append("    federalTaxId: ").append(toIndentedString(federalTaxId)).append("\n");
    sb.append("    orgLevel1Code: ").append(toIndentedString(orgLevel1Code)).append("\n");
    sb.append("    orgLevel2Code: ").append(toIndentedString(orgLevel2Code)).append("\n");
    sb.append("    orgLevel3Code: ").append(toIndentedString(orgLevel3Code)).append("\n");
    sb.append("    orgLevel4Code: ").append(toIndentedString(orgLevel4Code)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("isMasterCompany");
    openapiFields.add("masterCompanyId");
    openapiFields.add("companyID");
    openapiFields.add("companyCode");
    openapiFields.add("companyName");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("addressCity");
    openapiFields.add("addressState");
    openapiFields.add("addressZipCode");
    openapiFields.add("addressCountry");
    openapiFields.add("addressCounty");
    openapiFields.add("phoneNumber");
    openapiFields.add("phoneNumberExtension");
    openapiFields.add("federalTaxId");
    openapiFields.add("orgLevel1Code");
    openapiFields.add("orgLevel2Code");
    openapiFields.add("orgLevel3Code");
    openapiFields.add("orgLevel4Code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to CompanyDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!CompanyDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompanyDetails is not found in the empty JSON string", CompanyDetails.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("isMasterCompany") != null && !jsonObj.get("isMasterCompany").isJsonNull()) && !jsonObj.get("isMasterCompany").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isMasterCompany` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isMasterCompany").toString()));
      }
      if ((jsonObj.get("masterCompanyId") != null && !jsonObj.get("masterCompanyId").isJsonNull()) && !jsonObj.get("masterCompanyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `masterCompanyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("masterCompanyId").toString()));
      }
      if ((jsonObj.get("companyID") != null && !jsonObj.get("companyID").isJsonNull()) && !jsonObj.get("companyID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyID").toString()));
      }
      if ((jsonObj.get("companyCode") != null && !jsonObj.get("companyCode").isJsonNull()) && !jsonObj.get("companyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyCode").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("addressCity") != null && !jsonObj.get("addressCity").isJsonNull()) && !jsonObj.get("addressCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCity").toString()));
      }
      if ((jsonObj.get("addressState") != null && !jsonObj.get("addressState").isJsonNull()) && !jsonObj.get("addressState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressState").toString()));
      }
      if ((jsonObj.get("addressZipCode") != null && !jsonObj.get("addressZipCode").isJsonNull()) && !jsonObj.get("addressZipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressZipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressZipCode").toString()));
      }
      if ((jsonObj.get("addressCountry") != null && !jsonObj.get("addressCountry").isJsonNull()) && !jsonObj.get("addressCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCountry").toString()));
      }
      if ((jsonObj.get("addressCounty") != null && !jsonObj.get("addressCounty").isJsonNull()) && !jsonObj.get("addressCounty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCounty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCounty").toString()));
      }
      if ((jsonObj.get("phoneNumber") != null && !jsonObj.get("phoneNumber").isJsonNull()) && !jsonObj.get("phoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumber").toString()));
      }
      if ((jsonObj.get("phoneNumberExtension") != null && !jsonObj.get("phoneNumberExtension").isJsonNull()) && !jsonObj.get("phoneNumberExtension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phoneNumberExtension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phoneNumberExtension").toString()));
      }
      if ((jsonObj.get("federalTaxId") != null && !jsonObj.get("federalTaxId").isJsonNull()) && !jsonObj.get("federalTaxId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `federalTaxId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("federalTaxId").toString()));
      }
      if ((jsonObj.get("orgLevel1Code") != null && !jsonObj.get("orgLevel1Code").isJsonNull()) && !jsonObj.get("orgLevel1Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel1Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel1Code").toString()));
      }
      if ((jsonObj.get("orgLevel2Code") != null && !jsonObj.get("orgLevel2Code").isJsonNull()) && !jsonObj.get("orgLevel2Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel2Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel2Code").toString()));
      }
      if ((jsonObj.get("orgLevel3Code") != null && !jsonObj.get("orgLevel3Code").isJsonNull()) && !jsonObj.get("orgLevel3Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel3Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel3Code").toString()));
      }
      if ((jsonObj.get("orgLevel4Code") != null && !jsonObj.get("orgLevel4Code").isJsonNull()) && !jsonObj.get("orgLevel4Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel4Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel4Code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompanyDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompanyDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompanyDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompanyDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<CompanyDetails>() {
           @Override
           public void write(JsonWriter out, CompanyDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CompanyDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             CompanyDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CompanyDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CompanyDetails
  * @throws IOException if the JSON string is invalid with respect to CompanyDetails
  */
  public static CompanyDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompanyDetails.class);
  }

 /**
  * Convert an instance of CompanyDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

