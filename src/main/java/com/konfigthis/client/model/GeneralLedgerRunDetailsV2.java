/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * GeneralLedgerRunDetailsV2
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class GeneralLedgerRunDetailsV2 {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_RUN_ID = "runId";
  @SerializedName(SERIALIZED_NAME_RUN_ID)
  private String runId;

  public static final String SERIALIZED_NAME_PAY_PERIOD_END_DATE = "payPeriodEndDate";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD_END_DATE)
  private OffsetDateTime payPeriodEndDate;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "accountType";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private String accountType;

  public static final String SERIALIZED_NAME_BASE_SEGMENT = "baseSegment";
  @SerializedName(SERIALIZED_NAME_BASE_SEGMENT)
  private String baseSegment;

  public static final String SERIALIZED_NAME_COMPANY_CODE = "companyCode";
  @SerializedName(SERIALIZED_NAME_COMPANY_CODE)
  private String companyCode;

  public static final String SERIALIZED_NAME_CREDIT_AMT = "creditAmt";
  @SerializedName(SERIALIZED_NAME_CREDIT_AMT)
  private Double creditAmt;

  public static final String SERIALIZED_NAME_DEBIT_AMT = "debitAmt";
  @SerializedName(SERIALIZED_NAME_DEBIT_AMT)
  private Double debitAmt;

  public static final String SERIALIZED_NAME_GENERAL_LEDGER_ACCOUNT = "generalLedgerAccount";
  @SerializedName(SERIALIZED_NAME_GENERAL_LEDGER_ACCOUNT)
  private String generalLedgerAccount;

  public static final String SERIALIZED_NAME_JOB_CODE = "jobCode";
  @SerializedName(SERIALIZED_NAME_JOB_CODE)
  private String jobCode;

  public static final String SERIALIZED_NAME_JOB_DESC = "jobDesc";
  @SerializedName(SERIALIZED_NAME_JOB_DESC)
  private String jobDesc;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_ORG_LEVEL1 = "orgLevel1";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL1)
  private String orgLevel1;

  public static final String SERIALIZED_NAME_ORG_LEVEL2 = "orgLevel2";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL2)
  private String orgLevel2;

  public static final String SERIALIZED_NAME_ORG_LEVEL3 = "orgLevel3";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL3)
  private String orgLevel3;

  public static final String SERIALIZED_NAME_ORG_LEVEL4 = "orgLevel4";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL4)
  private String orgLevel4;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private String payGroup;

  public static final String SERIALIZED_NAME_PERIOD_END_DATE = "periodEndDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_END_DATE)
  private OffsetDateTime periodEndDate;

  public static final String SERIALIZED_NAME_PERIOD_START_DATE = "periodStartDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_START_DATE)
  private OffsetDateTime periodStartDate;

  public static final String SERIALIZED_NAME_POSITION_CODE = "positionCode";
  @SerializedName(SERIALIZED_NAME_POSITION_CODE)
  private String positionCode;

  public static final String SERIALIZED_NAME_POSITION_DESC = "positionDesc";
  @SerializedName(SERIALIZED_NAME_POSITION_DESC)
  private String positionDesc;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_SYSTEM_ID = "systemId";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ID)
  private Integer systemId;

  public static final String SERIALIZED_NAME_BLOCK_ID = "blockId";
  @SerializedName(SERIALIZED_NAME_BLOCK_ID)
  private Integer blockId;

  public static final String SERIALIZED_NAME_CO_ID = "coId";
  @SerializedName(SERIALIZED_NAME_CO_ID)
  private String coId;

  public static final String SERIALIZED_NAME_GL_RUN_DATE_TIME = "glRunDateTime";
  @SerializedName(SERIALIZED_NAME_GL_RUN_DATE_TIME)
  private OffsetDateTime glRunDateTime;

  public static final String SERIALIZED_NAME_TOTAL_NR_OF_BLOCKS = "totalNrOfBlocks";
  @SerializedName(SERIALIZED_NAME_TOTAL_NR_OF_BLOCKS)
  private Integer totalNrOfBlocks;

  public static final String SERIALIZED_NAME_USER_WHO_RAN_THIS_GL = "userWhoRanThisGl";
  @SerializedName(SERIALIZED_NAME_USER_WHO_RAN_THIS_GL)
  private String userWhoRanThisGl;

  public static final String SERIALIZED_NAME_GL_JSON = "glJson";
  @SerializedName(SERIALIZED_NAME_GL_JSON)
  private String glJson;

  public GeneralLedgerRunDetailsV2() {
  }

  public GeneralLedgerRunDetailsV2 description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public GeneralLedgerRunDetailsV2 runId(String runId) {
    
    
    
    
    this.runId = runId;
    return this;
  }

   /**
   * Get runId
   * @return runId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRunId() {
    return runId;
  }


  public void setRunId(String runId) {
    
    
    
    this.runId = runId;
  }


  public GeneralLedgerRunDetailsV2 payPeriodEndDate(OffsetDateTime payPeriodEndDate) {
    
    
    
    
    this.payPeriodEndDate = payPeriodEndDate;
    return this;
  }

   /**
   * Get payPeriodEndDate
   * @return payPeriodEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPayPeriodEndDate() {
    return payPeriodEndDate;
  }


  public void setPayPeriodEndDate(OffsetDateTime payPeriodEndDate) {
    
    
    
    this.payPeriodEndDate = payPeriodEndDate;
  }


  public GeneralLedgerRunDetailsV2 accountType(String accountType) {
    
    
    
    
    this.accountType = accountType;
    return this;
  }

   /**
   * Get accountType
   * @return accountType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccountType() {
    return accountType;
  }


  public void setAccountType(String accountType) {
    
    
    
    this.accountType = accountType;
  }


  public GeneralLedgerRunDetailsV2 baseSegment(String baseSegment) {
    
    
    
    
    this.baseSegment = baseSegment;
    return this;
  }

   /**
   * Get baseSegment
   * @return baseSegment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBaseSegment() {
    return baseSegment;
  }


  public void setBaseSegment(String baseSegment) {
    
    
    
    this.baseSegment = baseSegment;
  }


  public GeneralLedgerRunDetailsV2 companyCode(String companyCode) {
    
    
    
    
    this.companyCode = companyCode;
    return this;
  }

   /**
   * Get companyCode
   * @return companyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyCode() {
    return companyCode;
  }


  public void setCompanyCode(String companyCode) {
    
    
    
    this.companyCode = companyCode;
  }


  public GeneralLedgerRunDetailsV2 creditAmt(Double creditAmt) {
    
    
    
    
    this.creditAmt = creditAmt;
    return this;
  }

   /**
   * Get creditAmt
   * @return creditAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCreditAmt() {
    return creditAmt;
  }


  public void setCreditAmt(Double creditAmt) {
    
    
    
    this.creditAmt = creditAmt;
  }


  public GeneralLedgerRunDetailsV2 debitAmt(Double debitAmt) {
    
    
    
    
    this.debitAmt = debitAmt;
    return this;
  }

   /**
   * Get debitAmt
   * @return debitAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDebitAmt() {
    return debitAmt;
  }


  public void setDebitAmt(Double debitAmt) {
    
    
    
    this.debitAmt = debitAmt;
  }


  public GeneralLedgerRunDetailsV2 generalLedgerAccount(String generalLedgerAccount) {
    
    
    
    
    this.generalLedgerAccount = generalLedgerAccount;
    return this;
  }

   /**
   * Get generalLedgerAccount
   * @return generalLedgerAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGeneralLedgerAccount() {
    return generalLedgerAccount;
  }


  public void setGeneralLedgerAccount(String generalLedgerAccount) {
    
    
    
    this.generalLedgerAccount = generalLedgerAccount;
  }


  public GeneralLedgerRunDetailsV2 jobCode(String jobCode) {
    
    
    
    
    this.jobCode = jobCode;
    return this;
  }

   /**
   * Get jobCode
   * @return jobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobCode() {
    return jobCode;
  }


  public void setJobCode(String jobCode) {
    
    
    
    this.jobCode = jobCode;
  }


  public GeneralLedgerRunDetailsV2 jobDesc(String jobDesc) {
    
    
    
    
    this.jobDesc = jobDesc;
    return this;
  }

   /**
   * Get jobDesc
   * @return jobDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobDesc() {
    return jobDesc;
  }


  public void setJobDesc(String jobDesc) {
    
    
    
    this.jobDesc = jobDesc;
  }


  public GeneralLedgerRunDetailsV2 location(String location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    
    
    
    this.location = location;
  }


  public GeneralLedgerRunDetailsV2 orgLevel1(String orgLevel1) {
    
    
    
    
    this.orgLevel1 = orgLevel1;
    return this;
  }

   /**
   * Get orgLevel1
   * @return orgLevel1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel1() {
    return orgLevel1;
  }


  public void setOrgLevel1(String orgLevel1) {
    
    
    
    this.orgLevel1 = orgLevel1;
  }


  public GeneralLedgerRunDetailsV2 orgLevel2(String orgLevel2) {
    
    
    
    
    this.orgLevel2 = orgLevel2;
    return this;
  }

   /**
   * Get orgLevel2
   * @return orgLevel2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel2() {
    return orgLevel2;
  }


  public void setOrgLevel2(String orgLevel2) {
    
    
    
    this.orgLevel2 = orgLevel2;
  }


  public GeneralLedgerRunDetailsV2 orgLevel3(String orgLevel3) {
    
    
    
    
    this.orgLevel3 = orgLevel3;
    return this;
  }

   /**
   * Get orgLevel3
   * @return orgLevel3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel3() {
    return orgLevel3;
  }


  public void setOrgLevel3(String orgLevel3) {
    
    
    
    this.orgLevel3 = orgLevel3;
  }


  public GeneralLedgerRunDetailsV2 orgLevel4(String orgLevel4) {
    
    
    
    
    this.orgLevel4 = orgLevel4;
    return this;
  }

   /**
   * Get orgLevel4
   * @return orgLevel4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel4() {
    return orgLevel4;
  }


  public void setOrgLevel4(String orgLevel4) {
    
    
    
    this.orgLevel4 = orgLevel4;
  }


  public GeneralLedgerRunDetailsV2 payGroup(String payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(String payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public GeneralLedgerRunDetailsV2 periodEndDate(OffsetDateTime periodEndDate) {
    
    
    
    
    this.periodEndDate = periodEndDate;
    return this;
  }

   /**
   * Get periodEndDate
   * @return periodEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPeriodEndDate() {
    return periodEndDate;
  }


  public void setPeriodEndDate(OffsetDateTime periodEndDate) {
    
    
    
    this.periodEndDate = periodEndDate;
  }


  public GeneralLedgerRunDetailsV2 periodStartDate(OffsetDateTime periodStartDate) {
    
    
    
    
    this.periodStartDate = periodStartDate;
    return this;
  }

   /**
   * Get periodStartDate
   * @return periodStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPeriodStartDate() {
    return periodStartDate;
  }


  public void setPeriodStartDate(OffsetDateTime periodStartDate) {
    
    
    
    this.periodStartDate = periodStartDate;
  }


  public GeneralLedgerRunDetailsV2 positionCode(String positionCode) {
    
    
    
    
    this.positionCode = positionCode;
    return this;
  }

   /**
   * Get positionCode
   * @return positionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPositionCode() {
    return positionCode;
  }


  public void setPositionCode(String positionCode) {
    
    
    
    this.positionCode = positionCode;
  }


  public GeneralLedgerRunDetailsV2 positionDesc(String positionDesc) {
    
    
    
    
    this.positionDesc = positionDesc;
    return this;
  }

   /**
   * Get positionDesc
   * @return positionDesc
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPositionDesc() {
    return positionDesc;
  }


  public void setPositionDesc(String positionDesc) {
    
    
    
    this.positionDesc = positionDesc;
  }


  public GeneralLedgerRunDetailsV2 project(String project) {
    
    
    
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProject() {
    return project;
  }


  public void setProject(String project) {
    
    
    
    this.project = project;
  }


  public GeneralLedgerRunDetailsV2 systemId(Integer systemId) {
    
    
    
    
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getSystemId() {
    return systemId;
  }


  public void setSystemId(Integer systemId) {
    
    
    
    this.systemId = systemId;
  }


  public GeneralLedgerRunDetailsV2 blockId(Integer blockId) {
    
    
    
    
    this.blockId = blockId;
    return this;
  }

   /**
   * Get blockId
   * @return blockId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getBlockId() {
    return blockId;
  }


  public void setBlockId(Integer blockId) {
    
    
    
    this.blockId = blockId;
  }


  public GeneralLedgerRunDetailsV2 coId(String coId) {
    
    
    
    
    this.coId = coId;
    return this;
  }

   /**
   * Get coId
   * @return coId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCoId() {
    return coId;
  }


  public void setCoId(String coId) {
    
    
    
    this.coId = coId;
  }


  public GeneralLedgerRunDetailsV2 glRunDateTime(OffsetDateTime glRunDateTime) {
    
    
    
    
    this.glRunDateTime = glRunDateTime;
    return this;
  }

   /**
   * Get glRunDateTime
   * @return glRunDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getGlRunDateTime() {
    return glRunDateTime;
  }


  public void setGlRunDateTime(OffsetDateTime glRunDateTime) {
    
    
    
    this.glRunDateTime = glRunDateTime;
  }


  public GeneralLedgerRunDetailsV2 totalNrOfBlocks(Integer totalNrOfBlocks) {
    
    
    
    
    this.totalNrOfBlocks = totalNrOfBlocks;
    return this;
  }

   /**
   * Get totalNrOfBlocks
   * @return totalNrOfBlocks
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTotalNrOfBlocks() {
    return totalNrOfBlocks;
  }


  public void setTotalNrOfBlocks(Integer totalNrOfBlocks) {
    
    
    
    this.totalNrOfBlocks = totalNrOfBlocks;
  }


  public GeneralLedgerRunDetailsV2 userWhoRanThisGl(String userWhoRanThisGl) {
    
    
    
    
    this.userWhoRanThisGl = userWhoRanThisGl;
    return this;
  }

   /**
   * Get userWhoRanThisGl
   * @return userWhoRanThisGl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserWhoRanThisGl() {
    return userWhoRanThisGl;
  }


  public void setUserWhoRanThisGl(String userWhoRanThisGl) {
    
    
    
    this.userWhoRanThisGl = userWhoRanThisGl;
  }


  public GeneralLedgerRunDetailsV2 glJson(String glJson) {
    
    
    
    
    this.glJson = glJson;
    return this;
  }

   /**
   * Get glJson
   * @return glJson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlJson() {
    return glJson;
  }


  public void setGlJson(String glJson) {
    
    
    
    this.glJson = glJson;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the GeneralLedgerRunDetailsV2 instance itself
   */
  public GeneralLedgerRunDetailsV2 putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GeneralLedgerRunDetailsV2 generalLedgerRunDetailsV2 = (GeneralLedgerRunDetailsV2) o;
    return Objects.equals(this.description, generalLedgerRunDetailsV2.description) &&
        Objects.equals(this.runId, generalLedgerRunDetailsV2.runId) &&
        Objects.equals(this.payPeriodEndDate, generalLedgerRunDetailsV2.payPeriodEndDate) &&
        Objects.equals(this.accountType, generalLedgerRunDetailsV2.accountType) &&
        Objects.equals(this.baseSegment, generalLedgerRunDetailsV2.baseSegment) &&
        Objects.equals(this.companyCode, generalLedgerRunDetailsV2.companyCode) &&
        Objects.equals(this.creditAmt, generalLedgerRunDetailsV2.creditAmt) &&
        Objects.equals(this.debitAmt, generalLedgerRunDetailsV2.debitAmt) &&
        Objects.equals(this.generalLedgerAccount, generalLedgerRunDetailsV2.generalLedgerAccount) &&
        Objects.equals(this.jobCode, generalLedgerRunDetailsV2.jobCode) &&
        Objects.equals(this.jobDesc, generalLedgerRunDetailsV2.jobDesc) &&
        Objects.equals(this.location, generalLedgerRunDetailsV2.location) &&
        Objects.equals(this.orgLevel1, generalLedgerRunDetailsV2.orgLevel1) &&
        Objects.equals(this.orgLevel2, generalLedgerRunDetailsV2.orgLevel2) &&
        Objects.equals(this.orgLevel3, generalLedgerRunDetailsV2.orgLevel3) &&
        Objects.equals(this.orgLevel4, generalLedgerRunDetailsV2.orgLevel4) &&
        Objects.equals(this.payGroup, generalLedgerRunDetailsV2.payGroup) &&
        Objects.equals(this.periodEndDate, generalLedgerRunDetailsV2.periodEndDate) &&
        Objects.equals(this.periodStartDate, generalLedgerRunDetailsV2.periodStartDate) &&
        Objects.equals(this.positionCode, generalLedgerRunDetailsV2.positionCode) &&
        Objects.equals(this.positionDesc, generalLedgerRunDetailsV2.positionDesc) &&
        Objects.equals(this.project, generalLedgerRunDetailsV2.project) &&
        Objects.equals(this.systemId, generalLedgerRunDetailsV2.systemId) &&
        Objects.equals(this.blockId, generalLedgerRunDetailsV2.blockId) &&
        Objects.equals(this.coId, generalLedgerRunDetailsV2.coId) &&
        Objects.equals(this.glRunDateTime, generalLedgerRunDetailsV2.glRunDateTime) &&
        Objects.equals(this.totalNrOfBlocks, generalLedgerRunDetailsV2.totalNrOfBlocks) &&
        Objects.equals(this.userWhoRanThisGl, generalLedgerRunDetailsV2.userWhoRanThisGl) &&
        Objects.equals(this.glJson, generalLedgerRunDetailsV2.glJson)&&
        Objects.equals(this.additionalProperties, generalLedgerRunDetailsV2.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, runId, payPeriodEndDate, accountType, baseSegment, companyCode, creditAmt, debitAmt, generalLedgerAccount, jobCode, jobDesc, location, orgLevel1, orgLevel2, orgLevel3, orgLevel4, payGroup, periodEndDate, periodStartDate, positionCode, positionDesc, project, systemId, blockId, coId, glRunDateTime, totalNrOfBlocks, userWhoRanThisGl, glJson, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GeneralLedgerRunDetailsV2 {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    runId: ").append(toIndentedString(runId)).append("\n");
    sb.append("    payPeriodEndDate: ").append(toIndentedString(payPeriodEndDate)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    baseSegment: ").append(toIndentedString(baseSegment)).append("\n");
    sb.append("    companyCode: ").append(toIndentedString(companyCode)).append("\n");
    sb.append("    creditAmt: ").append(toIndentedString(creditAmt)).append("\n");
    sb.append("    debitAmt: ").append(toIndentedString(debitAmt)).append("\n");
    sb.append("    generalLedgerAccount: ").append(toIndentedString(generalLedgerAccount)).append("\n");
    sb.append("    jobCode: ").append(toIndentedString(jobCode)).append("\n");
    sb.append("    jobDesc: ").append(toIndentedString(jobDesc)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    orgLevel1: ").append(toIndentedString(orgLevel1)).append("\n");
    sb.append("    orgLevel2: ").append(toIndentedString(orgLevel2)).append("\n");
    sb.append("    orgLevel3: ").append(toIndentedString(orgLevel3)).append("\n");
    sb.append("    orgLevel4: ").append(toIndentedString(orgLevel4)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    periodEndDate: ").append(toIndentedString(periodEndDate)).append("\n");
    sb.append("    periodStartDate: ").append(toIndentedString(periodStartDate)).append("\n");
    sb.append("    positionCode: ").append(toIndentedString(positionCode)).append("\n");
    sb.append("    positionDesc: ").append(toIndentedString(positionDesc)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    blockId: ").append(toIndentedString(blockId)).append("\n");
    sb.append("    coId: ").append(toIndentedString(coId)).append("\n");
    sb.append("    glRunDateTime: ").append(toIndentedString(glRunDateTime)).append("\n");
    sb.append("    totalNrOfBlocks: ").append(toIndentedString(totalNrOfBlocks)).append("\n");
    sb.append("    userWhoRanThisGl: ").append(toIndentedString(userWhoRanThisGl)).append("\n");
    sb.append("    glJson: ").append(toIndentedString(glJson)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("runId");
    openapiFields.add("payPeriodEndDate");
    openapiFields.add("accountType");
    openapiFields.add("baseSegment");
    openapiFields.add("companyCode");
    openapiFields.add("creditAmt");
    openapiFields.add("debitAmt");
    openapiFields.add("generalLedgerAccount");
    openapiFields.add("jobCode");
    openapiFields.add("jobDesc");
    openapiFields.add("location");
    openapiFields.add("orgLevel1");
    openapiFields.add("orgLevel2");
    openapiFields.add("orgLevel3");
    openapiFields.add("orgLevel4");
    openapiFields.add("payGroup");
    openapiFields.add("periodEndDate");
    openapiFields.add("periodStartDate");
    openapiFields.add("positionCode");
    openapiFields.add("positionDesc");
    openapiFields.add("project");
    openapiFields.add("systemId");
    openapiFields.add("blockId");
    openapiFields.add("coId");
    openapiFields.add("glRunDateTime");
    openapiFields.add("totalNrOfBlocks");
    openapiFields.add("userWhoRanThisGl");
    openapiFields.add("glJson");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to GeneralLedgerRunDetailsV2
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!GeneralLedgerRunDetailsV2.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GeneralLedgerRunDetailsV2 is not found in the empty JSON string", GeneralLedgerRunDetailsV2.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("runId") != null && !jsonObj.get("runId").isJsonNull()) && !jsonObj.get("runId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `runId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("runId").toString()));
      }
      if ((jsonObj.get("accountType") != null && !jsonObj.get("accountType").isJsonNull()) && !jsonObj.get("accountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountType").toString()));
      }
      if ((jsonObj.get("baseSegment") != null && !jsonObj.get("baseSegment").isJsonNull()) && !jsonObj.get("baseSegment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `baseSegment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("baseSegment").toString()));
      }
      if ((jsonObj.get("companyCode") != null && !jsonObj.get("companyCode").isJsonNull()) && !jsonObj.get("companyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyCode").toString()));
      }
      if ((jsonObj.get("generalLedgerAccount") != null && !jsonObj.get("generalLedgerAccount").isJsonNull()) && !jsonObj.get("generalLedgerAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generalLedgerAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generalLedgerAccount").toString()));
      }
      if ((jsonObj.get("jobCode") != null && !jsonObj.get("jobCode").isJsonNull()) && !jsonObj.get("jobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobCode").toString()));
      }
      if ((jsonObj.get("jobDesc") != null && !jsonObj.get("jobDesc").isJsonNull()) && !jsonObj.get("jobDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobDesc").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("orgLevel1") != null && !jsonObj.get("orgLevel1").isJsonNull()) && !jsonObj.get("orgLevel1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel1").toString()));
      }
      if ((jsonObj.get("orgLevel2") != null && !jsonObj.get("orgLevel2").isJsonNull()) && !jsonObj.get("orgLevel2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel2").toString()));
      }
      if ((jsonObj.get("orgLevel3") != null && !jsonObj.get("orgLevel3").isJsonNull()) && !jsonObj.get("orgLevel3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel3").toString()));
      }
      if ((jsonObj.get("orgLevel4") != null && !jsonObj.get("orgLevel4").isJsonNull()) && !jsonObj.get("orgLevel4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel4").toString()));
      }
      if ((jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) && !jsonObj.get("payGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroup").toString()));
      }
      if ((jsonObj.get("positionCode") != null && !jsonObj.get("positionCode").isJsonNull()) && !jsonObj.get("positionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionCode").toString()));
      }
      if ((jsonObj.get("positionDesc") != null && !jsonObj.get("positionDesc").isJsonNull()) && !jsonObj.get("positionDesc").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionDesc` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionDesc").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
      if ((jsonObj.get("coId") != null && !jsonObj.get("coId").isJsonNull()) && !jsonObj.get("coId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coId").toString()));
      }
      if ((jsonObj.get("userWhoRanThisGl") != null && !jsonObj.get("userWhoRanThisGl").isJsonNull()) && !jsonObj.get("userWhoRanThisGl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userWhoRanThisGl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userWhoRanThisGl").toString()));
      }
      if ((jsonObj.get("glJson") != null && !jsonObj.get("glJson").isJsonNull()) && !jsonObj.get("glJson").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `glJson` to be a primitive type in the JSON string but got `%s`", jsonObj.get("glJson").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GeneralLedgerRunDetailsV2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GeneralLedgerRunDetailsV2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GeneralLedgerRunDetailsV2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GeneralLedgerRunDetailsV2.class));

       return (TypeAdapter<T>) new TypeAdapter<GeneralLedgerRunDetailsV2>() {
           @Override
           public void write(JsonWriter out, GeneralLedgerRunDetailsV2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public GeneralLedgerRunDetailsV2 read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             GeneralLedgerRunDetailsV2 instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GeneralLedgerRunDetailsV2 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GeneralLedgerRunDetailsV2
  * @throws IOException if the JSON string is invalid with respect to GeneralLedgerRunDetailsV2
  */
  public static GeneralLedgerRunDetailsV2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GeneralLedgerRunDetailsV2.class);
  }

 /**
  * Convert an instance of GeneralLedgerRunDetailsV2 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

