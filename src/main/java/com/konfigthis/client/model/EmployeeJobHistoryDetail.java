/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeeJobHistoryDetail
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeJobHistoryDetail {
  public static final String SERIALIZED_NAME_ANNUAL_SALARY = "annualSalary";
  @SerializedName(SERIALIZED_NAME_ANNUAL_SALARY)
  private Double annualSalary;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_DATE_TIME_CREATED = "dateTimeCreated";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_CREATED)
  private OffsetDateTime dateTimeCreated;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EMPLOYEE_TYPE = "employeeType";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TYPE)
  private String employeeType;

  public static final String SERIALIZED_NAME_EMPLOYEE_STATUS = "employeeStatus";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_STATUS)
  private String employeeStatus;

  public static final String SERIALIZED_NAME_FLSA_CATEGORY = "flsaCategory";
  @SerializedName(SERIALIZED_NAME_FLSA_CATEGORY)
  private String flsaCategory;

  public static final String SERIALIZED_NAME_FULL_TIME_OR_PART_TIME = "fullTimeOrPartTime";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_OR_PART_TIME)
  private String fullTimeOrPartTime;

  public static final String SERIALIZED_NAME_HOURLY_PAY_RATE = "hourlyPayRate";
  @SerializedName(SERIALIZED_NAME_HOURLY_PAY_RATE)
  private Double hourlyPayRate;

  public static final String SERIALIZED_NAME_IS_JOB_CHANGE = "isJobChange";
  @SerializedName(SERIALIZED_NAME_IS_JOB_CHANGE)
  private Boolean isJobChange;

  public static final String SERIALIZED_NAME_IS_ORGCHANGE = "isOrgchange";
  @SerializedName(SERIALIZED_NAME_IS_ORGCHANGE)
  private Boolean isOrgchange;

  public static final String SERIALIZED_NAME_IS_OUTSIDE_GUIDELINES = "isOutsideGuidelines";
  @SerializedName(SERIALIZED_NAME_IS_OUTSIDE_GUIDELINES)
  private Boolean isOutsideGuidelines;

  public static final String SERIALIZED_NAME_IS_OUTSIDE_RANGE = "isOutsideRange";
  @SerializedName(SERIALIZED_NAME_IS_OUTSIDE_RANGE)
  private Boolean isOutsideRange;

  public static final String SERIALIZED_NAME_IS_PROMOTION = "isPromotion";
  @SerializedName(SERIALIZED_NAME_IS_PROMOTION)
  private Boolean isPromotion;

  public static final String SERIALIZED_NAME_IS_RATE_CHANGE = "isRateChange";
  @SerializedName(SERIALIZED_NAME_IS_RATE_CHANGE)
  private Boolean isRateChange;

  public static final String SERIALIZED_NAME_IS_SYSTEM = "isSystem";
  @SerializedName(SERIALIZED_NAME_IS_SYSTEM)
  private Boolean isSystem;

  public static final String SERIALIZED_NAME_IS_TRANSFER = "isTransfer";
  @SerializedName(SERIALIZED_NAME_IS_TRANSFER)
  private Boolean isTransfer;

  public static final String SERIALIZED_NAME_JOB_CODE = "jobCode";
  @SerializedName(SERIALIZED_NAME_JOB_CODE)
  private String jobCode;

  public static final String SERIALIZED_NAME_JOB_DESCRIPTION = "jobDescription";
  @SerializedName(SERIALIZED_NAME_JOB_DESCRIPTION)
  private String jobDescription;

  public static final String SERIALIZED_NAME_JOB_EFFECTIVE_DATE = "jobEffectiveDate";
  @SerializedName(SERIALIZED_NAME_JOB_EFFECTIVE_DATE)
  private OffsetDateTime jobEffectiveDate;

  public static final String SERIALIZED_NAME_JOB_GROUP_CODE = "jobGroupCode";
  @SerializedName(SERIALIZED_NAME_JOB_GROUP_CODE)
  private String jobGroupCode;

  public static final String SERIALIZED_NAME_LOCATION_CODE = "locationCode";
  @SerializedName(SERIALIZED_NAME_LOCATION_CODE)
  private String locationCode;

  public static final String SERIALIZED_NAME_ORG_LEVEL1_CODE = "orgLevel1Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL1_CODE)
  private String orgLevel1Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL2_CODE = "orgLevel2Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL2_CODE)
  private String orgLevel2Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL3_CODE = "orgLevel3Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL3_CODE)
  private String orgLevel3Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL4_CODE = "orgLevel4Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL4_CODE)
  private String orgLevel4Code;

  public static final String SERIALIZED_NAME_OTHER_RATE1 = "otherRate1";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE1)
  private Double otherRate1;

  public static final String SERIALIZED_NAME_OTHER_RATE2 = "otherRate2";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE2)
  private Double otherRate2;

  public static final String SERIALIZED_NAME_OTHER_RATE3 = "otherRate3";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE3)
  private Double otherRate3;

  public static final String SERIALIZED_NAME_OTHER_RATE4 = "otherRate4";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE4)
  private Double otherRate4;

  public static final String SERIALIZED_NAME_PAY_GROUP_CODE = "payGroupCode";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP_CODE)
  private String payGroupCode;

  public static final String SERIALIZED_NAME_PAY_PERIOD_CODE = "payPeriodCode";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD_CODE)
  private String payPeriodCode;

  public static final String SERIALIZED_NAME_PAY_SCALE_CODE = "payScaleCode";
  @SerializedName(SERIALIZED_NAME_PAY_SCALE_CODE)
  private String payScaleCode;

  public static final String SERIALIZED_NAME_PERCENT_CHANGE = "percentChange";
  @SerializedName(SERIALIZED_NAME_PERCENT_CHANGE)
  private Double percentChange;

  public static final String SERIALIZED_NAME_PERIOD_PAY_RATE = "periodPayRate";
  @SerializedName(SERIALIZED_NAME_PERIOD_PAY_RATE)
  private Double periodPayRate;

  public static final String SERIALIZED_NAME_PIECE_PAY_RATE = "piecePayRate";
  @SerializedName(SERIALIZED_NAME_PIECE_PAY_RATE)
  private Double piecePayRate;

  public static final String SERIALIZED_NAME_POSITION_CODE = "positionCode";
  @SerializedName(SERIALIZED_NAME_POSITION_CODE)
  private String positionCode;

  public static final String SERIALIZED_NAME_REASON_CODE = "reasonCode";
  @SerializedName(SERIALIZED_NAME_REASON_CODE)
  private String reasonCode;

  public static final String SERIALIZED_NAME_SALARY_GRADE = "salaryGrade";
  @SerializedName(SERIALIZED_NAME_SALARY_GRADE)
  private String salaryGrade;

  public static final String SERIALIZED_NAME_SALARY_OR_HOURLY = "salaryOrHourly";
  @SerializedName(SERIALIZED_NAME_SALARY_OR_HOURLY)
  private String salaryOrHourly;

  public static final String SERIALIZED_NAME_SCHEDULED_ANNUAL_HOURS = "scheduledAnnualHours";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ANNUAL_HOURS)
  private Double scheduledAnnualHours;

  public static final String SERIALIZED_NAME_SCHEDULED_FULL_TIME_EQUIVALENCY = "scheduledFullTimeEquivalency";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_FULL_TIME_EQUIVALENCY)
  private Double scheduledFullTimeEquivalency;

  public static final String SERIALIZED_NAME_SCHEDULED_WORK_HOURS = "scheduledWorkHours";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_WORK_HOURS)
  private Double scheduledWorkHours;

  public static final String SERIALIZED_NAME_SHIFT_CODE = "shiftCode";
  @SerializedName(SERIALIZED_NAME_SHIFT_CODE)
  private String shiftCode;

  public static final String SERIALIZED_NAME_SHIFT_GROUP_CODE = "shiftGroupCode";
  @SerializedName(SERIALIZED_NAME_SHIFT_GROUP_CODE)
  private String shiftGroupCode;

  public static final String SERIALIZED_NAME_STEP_NUMBER = "stepNumber";
  @SerializedName(SERIALIZED_NAME_STEP_NUMBER)
  private Double stepNumber;

  public static final String SERIALIZED_NAME_SUPERVISOR_ID = "supervisorId";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_ID)
  private String supervisorId;

  public static final String SERIALIZED_NAME_SUPERVISOR_NAME_FIRST = "supervisorNameFirst";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_NAME_FIRST)
  private String supervisorNameFirst;

  public static final String SERIALIZED_NAME_SUPERVISOR_NAME_LAST = "supervisorNameLast";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_NAME_LAST)
  private String supervisorNameLast;

  public static final String SERIALIZED_NAME_SUPERVISOR_NAME_SUFFIX = "supervisorNameSuffix";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_NAME_SUFFIX)
  private String supervisorNameSuffix;

  public static final String SERIALIZED_NAME_SUPERVISOR_NOT_IN_LIST = "supervisorNotInList";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_NOT_IN_LIST)
  private Boolean supervisorNotInList;

  public static final String SERIALIZED_NAME_SYSTEM_ID = "systemId";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ID)
  private String systemId;

  public static final String SERIALIZED_NAME_UNION_NATIONAL = "unionNational";
  @SerializedName(SERIALIZED_NAME_UNION_NATIONAL)
  private String unionNational;

  public static final String SERIALIZED_NAME_USE_PAY_SCALES = "usePayScales";
  @SerializedName(SERIALIZED_NAME_USE_PAY_SCALES)
  private Boolean usePayScales;

  public static final String SERIALIZED_NAME_WEEKLY_PAY_RATE = "weeklyPayRate";
  @SerializedName(SERIALIZED_NAME_WEEKLY_PAY_RATE)
  private Double weeklyPayRate;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_HOME_COMPANY_ID = "homeCompanyId";
  @SerializedName(SERIALIZED_NAME_HOME_COMPANY_ID)
  private String homeCompanyId;

  public static final String SERIALIZED_NAME_INTEGRATION_EFFECTIVE_DATE = "integrationEffectiveDate";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_EFFECTIVE_DATE)
  private OffsetDateTime integrationEffectiveDate;

  public static final String SERIALIZED_NAME_PROJECT_CODE = "projectCode";
  @SerializedName(SERIALIZED_NAME_PROJECT_CODE)
  private String projectCode;

  public static final String SERIALIZED_NAME_NUMBER_OF_PAYMENTS = "numberOfPayments";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_PAYMENTS)
  private Double numberOfPayments;

  public static final String SERIALIZED_NAME_WEEKLY_HOURS = "weeklyHours";
  @SerializedName(SERIALIZED_NAME_WEEKLY_HOURS)
  private Double weeklyHours;

  public static final String SERIALIZED_NAME_IS_VIEWABLE_BY_EMPLOYEE = "isViewableByEmployee";
  @SerializedName(SERIALIZED_NAME_IS_VIEWABLE_BY_EMPLOYEE)
  private Boolean isViewableByEmployee;

  public static final String SERIALIZED_NAME_CREATED_BY_USER_ID = "createdByUserId";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_USER_ID)
  private Double createdByUserId;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public EmployeeJobHistoryDetail() {
  }

  public EmployeeJobHistoryDetail annualSalary(Double annualSalary) {
    
    
    
    
    this.annualSalary = annualSalary;
    return this;
  }

   /**
   * Get annualSalary
   * @return annualSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAnnualSalary() {
    return annualSalary;
  }


  public void setAnnualSalary(Double annualSalary) {
    
    
    
    this.annualSalary = annualSalary;
  }


  public EmployeeJobHistoryDetail companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmployeeJobHistoryDetail dateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    
    this.dateTimeCreated = dateTimeCreated;
    return this;
  }

   /**
   * Get dateTimeCreated
   * @return dateTimeCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeCreated() {
    return dateTimeCreated;
  }


  public void setDateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    this.dateTimeCreated = dateTimeCreated;
  }


  public EmployeeJobHistoryDetail employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EmployeeJobHistoryDetail employeeType(String employeeType) {
    
    
    
    
    this.employeeType = employeeType;
    return this;
  }

   /**
   * Get employeeType
   * @return employeeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeType() {
    return employeeType;
  }


  public void setEmployeeType(String employeeType) {
    
    
    
    this.employeeType = employeeType;
  }


  public EmployeeJobHistoryDetail employeeStatus(String employeeStatus) {
    
    
    
    
    this.employeeStatus = employeeStatus;
    return this;
  }

   /**
   * Get employeeStatus
   * @return employeeStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeStatus() {
    return employeeStatus;
  }


  public void setEmployeeStatus(String employeeStatus) {
    
    
    
    this.employeeStatus = employeeStatus;
  }


  public EmployeeJobHistoryDetail flsaCategory(String flsaCategory) {
    
    
    
    
    this.flsaCategory = flsaCategory;
    return this;
  }

   /**
   * Get flsaCategory
   * @return flsaCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFlsaCategory() {
    return flsaCategory;
  }


  public void setFlsaCategory(String flsaCategory) {
    
    
    
    this.flsaCategory = flsaCategory;
  }


  public EmployeeJobHistoryDetail fullTimeOrPartTime(String fullTimeOrPartTime) {
    
    
    
    
    this.fullTimeOrPartTime = fullTimeOrPartTime;
    return this;
  }

   /**
   * Get fullTimeOrPartTime
   * @return fullTimeOrPartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullTimeOrPartTime() {
    return fullTimeOrPartTime;
  }


  public void setFullTimeOrPartTime(String fullTimeOrPartTime) {
    
    
    
    this.fullTimeOrPartTime = fullTimeOrPartTime;
  }


  public EmployeeJobHistoryDetail hourlyPayRate(Double hourlyPayRate) {
    
    
    
    
    this.hourlyPayRate = hourlyPayRate;
    return this;
  }

   /**
   * Get hourlyPayRate
   * @return hourlyPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHourlyPayRate() {
    return hourlyPayRate;
  }


  public void setHourlyPayRate(Double hourlyPayRate) {
    
    
    
    this.hourlyPayRate = hourlyPayRate;
  }


  public EmployeeJobHistoryDetail isJobChange(Boolean isJobChange) {
    
    
    
    
    this.isJobChange = isJobChange;
    return this;
  }

   /**
   * Get isJobChange
   * @return isJobChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsJobChange() {
    return isJobChange;
  }


  public void setIsJobChange(Boolean isJobChange) {
    
    
    
    this.isJobChange = isJobChange;
  }


  public EmployeeJobHistoryDetail isOrgchange(Boolean isOrgchange) {
    
    
    
    
    this.isOrgchange = isOrgchange;
    return this;
  }

   /**
   * Get isOrgchange
   * @return isOrgchange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsOrgchange() {
    return isOrgchange;
  }


  public void setIsOrgchange(Boolean isOrgchange) {
    
    
    
    this.isOrgchange = isOrgchange;
  }


  public EmployeeJobHistoryDetail isOutsideGuidelines(Boolean isOutsideGuidelines) {
    
    
    
    
    this.isOutsideGuidelines = isOutsideGuidelines;
    return this;
  }

   /**
   * Get isOutsideGuidelines
   * @return isOutsideGuidelines
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsOutsideGuidelines() {
    return isOutsideGuidelines;
  }


  public void setIsOutsideGuidelines(Boolean isOutsideGuidelines) {
    
    
    
    this.isOutsideGuidelines = isOutsideGuidelines;
  }


  public EmployeeJobHistoryDetail isOutsideRange(Boolean isOutsideRange) {
    
    
    
    
    this.isOutsideRange = isOutsideRange;
    return this;
  }

   /**
   * Get isOutsideRange
   * @return isOutsideRange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsOutsideRange() {
    return isOutsideRange;
  }


  public void setIsOutsideRange(Boolean isOutsideRange) {
    
    
    
    this.isOutsideRange = isOutsideRange;
  }


  public EmployeeJobHistoryDetail isPromotion(Boolean isPromotion) {
    
    
    
    
    this.isPromotion = isPromotion;
    return this;
  }

   /**
   * Get isPromotion
   * @return isPromotion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPromotion() {
    return isPromotion;
  }


  public void setIsPromotion(Boolean isPromotion) {
    
    
    
    this.isPromotion = isPromotion;
  }


  public EmployeeJobHistoryDetail isRateChange(Boolean isRateChange) {
    
    
    
    
    this.isRateChange = isRateChange;
    return this;
  }

   /**
   * Get isRateChange
   * @return isRateChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsRateChange() {
    return isRateChange;
  }


  public void setIsRateChange(Boolean isRateChange) {
    
    
    
    this.isRateChange = isRateChange;
  }


  public EmployeeJobHistoryDetail isSystem(Boolean isSystem) {
    
    
    
    
    this.isSystem = isSystem;
    return this;
  }

   /**
   * Get isSystem
   * @return isSystem
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSystem() {
    return isSystem;
  }


  public void setIsSystem(Boolean isSystem) {
    
    
    
    this.isSystem = isSystem;
  }


  public EmployeeJobHistoryDetail isTransfer(Boolean isTransfer) {
    
    
    
    
    this.isTransfer = isTransfer;
    return this;
  }

   /**
   * Get isTransfer
   * @return isTransfer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsTransfer() {
    return isTransfer;
  }


  public void setIsTransfer(Boolean isTransfer) {
    
    
    
    this.isTransfer = isTransfer;
  }


  public EmployeeJobHistoryDetail jobCode(String jobCode) {
    
    
    
    
    this.jobCode = jobCode;
    return this;
  }

   /**
   * Get jobCode
   * @return jobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobCode() {
    return jobCode;
  }


  public void setJobCode(String jobCode) {
    
    
    
    this.jobCode = jobCode;
  }


  public EmployeeJobHistoryDetail jobDescription(String jobDescription) {
    
    
    
    
    this.jobDescription = jobDescription;
    return this;
  }

   /**
   * Get jobDescription
   * @return jobDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobDescription() {
    return jobDescription;
  }


  public void setJobDescription(String jobDescription) {
    
    
    
    this.jobDescription = jobDescription;
  }


  public EmployeeJobHistoryDetail jobEffectiveDate(OffsetDateTime jobEffectiveDate) {
    
    
    
    
    this.jobEffectiveDate = jobEffectiveDate;
    return this;
  }

   /**
   * Get jobEffectiveDate
   * @return jobEffectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getJobEffectiveDate() {
    return jobEffectiveDate;
  }


  public void setJobEffectiveDate(OffsetDateTime jobEffectiveDate) {
    
    
    
    this.jobEffectiveDate = jobEffectiveDate;
  }


  public EmployeeJobHistoryDetail jobGroupCode(String jobGroupCode) {
    
    
    
    
    this.jobGroupCode = jobGroupCode;
    return this;
  }

   /**
   * Get jobGroupCode
   * @return jobGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobGroupCode() {
    return jobGroupCode;
  }


  public void setJobGroupCode(String jobGroupCode) {
    
    
    
    this.jobGroupCode = jobGroupCode;
  }


  public EmployeeJobHistoryDetail locationCode(String locationCode) {
    
    
    
    
    this.locationCode = locationCode;
    return this;
  }

   /**
   * Get locationCode
   * @return locationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationCode() {
    return locationCode;
  }


  public void setLocationCode(String locationCode) {
    
    
    
    this.locationCode = locationCode;
  }


  public EmployeeJobHistoryDetail orgLevel1Code(String orgLevel1Code) {
    
    
    
    
    this.orgLevel1Code = orgLevel1Code;
    return this;
  }

   /**
   * Get orgLevel1Code
   * @return orgLevel1Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel1Code() {
    return orgLevel1Code;
  }


  public void setOrgLevel1Code(String orgLevel1Code) {
    
    
    
    this.orgLevel1Code = orgLevel1Code;
  }


  public EmployeeJobHistoryDetail orgLevel2Code(String orgLevel2Code) {
    
    
    
    
    this.orgLevel2Code = orgLevel2Code;
    return this;
  }

   /**
   * Get orgLevel2Code
   * @return orgLevel2Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel2Code() {
    return orgLevel2Code;
  }


  public void setOrgLevel2Code(String orgLevel2Code) {
    
    
    
    this.orgLevel2Code = orgLevel2Code;
  }


  public EmployeeJobHistoryDetail orgLevel3Code(String orgLevel3Code) {
    
    
    
    
    this.orgLevel3Code = orgLevel3Code;
    return this;
  }

   /**
   * Get orgLevel3Code
   * @return orgLevel3Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel3Code() {
    return orgLevel3Code;
  }


  public void setOrgLevel3Code(String orgLevel3Code) {
    
    
    
    this.orgLevel3Code = orgLevel3Code;
  }


  public EmployeeJobHistoryDetail orgLevel4Code(String orgLevel4Code) {
    
    
    
    
    this.orgLevel4Code = orgLevel4Code;
    return this;
  }

   /**
   * Get orgLevel4Code
   * @return orgLevel4Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel4Code() {
    return orgLevel4Code;
  }


  public void setOrgLevel4Code(String orgLevel4Code) {
    
    
    
    this.orgLevel4Code = orgLevel4Code;
  }


  public EmployeeJobHistoryDetail otherRate1(Double otherRate1) {
    
    
    
    
    this.otherRate1 = otherRate1;
    return this;
  }

   /**
   * Get otherRate1
   * @return otherRate1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate1() {
    return otherRate1;
  }


  public void setOtherRate1(Double otherRate1) {
    
    
    
    this.otherRate1 = otherRate1;
  }


  public EmployeeJobHistoryDetail otherRate2(Double otherRate2) {
    
    
    
    
    this.otherRate2 = otherRate2;
    return this;
  }

   /**
   * Get otherRate2
   * @return otherRate2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate2() {
    return otherRate2;
  }


  public void setOtherRate2(Double otherRate2) {
    
    
    
    this.otherRate2 = otherRate2;
  }


  public EmployeeJobHistoryDetail otherRate3(Double otherRate3) {
    
    
    
    
    this.otherRate3 = otherRate3;
    return this;
  }

   /**
   * Get otherRate3
   * @return otherRate3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate3() {
    return otherRate3;
  }


  public void setOtherRate3(Double otherRate3) {
    
    
    
    this.otherRate3 = otherRate3;
  }


  public EmployeeJobHistoryDetail otherRate4(Double otherRate4) {
    
    
    
    
    this.otherRate4 = otherRate4;
    return this;
  }

   /**
   * Get otherRate4
   * @return otherRate4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate4() {
    return otherRate4;
  }


  public void setOtherRate4(Double otherRate4) {
    
    
    
    this.otherRate4 = otherRate4;
  }


  public EmployeeJobHistoryDetail payGroupCode(String payGroupCode) {
    
    
    
    
    this.payGroupCode = payGroupCode;
    return this;
  }

   /**
   * Get payGroupCode
   * @return payGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroupCode() {
    return payGroupCode;
  }


  public void setPayGroupCode(String payGroupCode) {
    
    
    
    this.payGroupCode = payGroupCode;
  }


  public EmployeeJobHistoryDetail payPeriodCode(String payPeriodCode) {
    
    
    
    
    this.payPeriodCode = payPeriodCode;
    return this;
  }

   /**
   * Get payPeriodCode
   * @return payPeriodCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayPeriodCode() {
    return payPeriodCode;
  }


  public void setPayPeriodCode(String payPeriodCode) {
    
    
    
    this.payPeriodCode = payPeriodCode;
  }


  public EmployeeJobHistoryDetail payScaleCode(String payScaleCode) {
    
    
    
    
    this.payScaleCode = payScaleCode;
    return this;
  }

   /**
   * Get payScaleCode
   * @return payScaleCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayScaleCode() {
    return payScaleCode;
  }


  public void setPayScaleCode(String payScaleCode) {
    
    
    
    this.payScaleCode = payScaleCode;
  }


  public EmployeeJobHistoryDetail percentChange(Double percentChange) {
    
    
    
    
    this.percentChange = percentChange;
    return this;
  }

   /**
   * Get percentChange
   * @return percentChange
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPercentChange() {
    return percentChange;
  }


  public void setPercentChange(Double percentChange) {
    
    
    
    this.percentChange = percentChange;
  }


  public EmployeeJobHistoryDetail periodPayRate(Double periodPayRate) {
    
    
    
    
    this.periodPayRate = periodPayRate;
    return this;
  }

   /**
   * Get periodPayRate
   * @return periodPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPeriodPayRate() {
    return periodPayRate;
  }


  public void setPeriodPayRate(Double periodPayRate) {
    
    
    
    this.periodPayRate = periodPayRate;
  }


  public EmployeeJobHistoryDetail piecePayRate(Double piecePayRate) {
    
    
    
    
    this.piecePayRate = piecePayRate;
    return this;
  }

   /**
   * Get piecePayRate
   * @return piecePayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPiecePayRate() {
    return piecePayRate;
  }


  public void setPiecePayRate(Double piecePayRate) {
    
    
    
    this.piecePayRate = piecePayRate;
  }


  public EmployeeJobHistoryDetail positionCode(String positionCode) {
    
    
    
    
    this.positionCode = positionCode;
    return this;
  }

   /**
   * Get positionCode
   * @return positionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPositionCode() {
    return positionCode;
  }


  public void setPositionCode(String positionCode) {
    
    
    
    this.positionCode = positionCode;
  }


  public EmployeeJobHistoryDetail reasonCode(String reasonCode) {
    
    
    
    
    this.reasonCode = reasonCode;
    return this;
  }

   /**
   * Get reasonCode
   * @return reasonCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReasonCode() {
    return reasonCode;
  }


  public void setReasonCode(String reasonCode) {
    
    
    
    this.reasonCode = reasonCode;
  }


  public EmployeeJobHistoryDetail salaryGrade(String salaryGrade) {
    
    
    
    
    this.salaryGrade = salaryGrade;
    return this;
  }

   /**
   * Get salaryGrade
   * @return salaryGrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSalaryGrade() {
    return salaryGrade;
  }


  public void setSalaryGrade(String salaryGrade) {
    
    
    
    this.salaryGrade = salaryGrade;
  }


  public EmployeeJobHistoryDetail salaryOrHourly(String salaryOrHourly) {
    
    
    
    
    this.salaryOrHourly = salaryOrHourly;
    return this;
  }

   /**
   * Get salaryOrHourly
   * @return salaryOrHourly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSalaryOrHourly() {
    return salaryOrHourly;
  }


  public void setSalaryOrHourly(String salaryOrHourly) {
    
    
    
    this.salaryOrHourly = salaryOrHourly;
  }


  public EmployeeJobHistoryDetail scheduledAnnualHours(Double scheduledAnnualHours) {
    
    
    
    
    this.scheduledAnnualHours = scheduledAnnualHours;
    return this;
  }

   /**
   * Get scheduledAnnualHours
   * @return scheduledAnnualHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledAnnualHours() {
    return scheduledAnnualHours;
  }


  public void setScheduledAnnualHours(Double scheduledAnnualHours) {
    
    
    
    this.scheduledAnnualHours = scheduledAnnualHours;
  }


  public EmployeeJobHistoryDetail scheduledFullTimeEquivalency(Double scheduledFullTimeEquivalency) {
    
    
    
    
    this.scheduledFullTimeEquivalency = scheduledFullTimeEquivalency;
    return this;
  }

   /**
   * Get scheduledFullTimeEquivalency
   * @return scheduledFullTimeEquivalency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledFullTimeEquivalency() {
    return scheduledFullTimeEquivalency;
  }


  public void setScheduledFullTimeEquivalency(Double scheduledFullTimeEquivalency) {
    
    
    
    this.scheduledFullTimeEquivalency = scheduledFullTimeEquivalency;
  }


  public EmployeeJobHistoryDetail scheduledWorkHours(Double scheduledWorkHours) {
    
    
    
    
    this.scheduledWorkHours = scheduledWorkHours;
    return this;
  }

   /**
   * Get scheduledWorkHours
   * @return scheduledWorkHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledWorkHours() {
    return scheduledWorkHours;
  }


  public void setScheduledWorkHours(Double scheduledWorkHours) {
    
    
    
    this.scheduledWorkHours = scheduledWorkHours;
  }


  public EmployeeJobHistoryDetail shiftCode(String shiftCode) {
    
    
    
    
    this.shiftCode = shiftCode;
    return this;
  }

   /**
   * Get shiftCode
   * @return shiftCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShiftCode() {
    return shiftCode;
  }


  public void setShiftCode(String shiftCode) {
    
    
    
    this.shiftCode = shiftCode;
  }


  public EmployeeJobHistoryDetail shiftGroupCode(String shiftGroupCode) {
    
    
    
    
    this.shiftGroupCode = shiftGroupCode;
    return this;
  }

   /**
   * Get shiftGroupCode
   * @return shiftGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShiftGroupCode() {
    return shiftGroupCode;
  }


  public void setShiftGroupCode(String shiftGroupCode) {
    
    
    
    this.shiftGroupCode = shiftGroupCode;
  }


  public EmployeeJobHistoryDetail stepNumber(Double stepNumber) {
    
    
    
    
    this.stepNumber = stepNumber;
    return this;
  }

   /**
   * Get stepNumber
   * @return stepNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getStepNumber() {
    return stepNumber;
  }


  public void setStepNumber(Double stepNumber) {
    
    
    
    this.stepNumber = stepNumber;
  }


  public EmployeeJobHistoryDetail supervisorId(String supervisorId) {
    
    
    
    
    this.supervisorId = supervisorId;
    return this;
  }

   /**
   * Get supervisorId
   * @return supervisorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorId() {
    return supervisorId;
  }


  public void setSupervisorId(String supervisorId) {
    
    
    
    this.supervisorId = supervisorId;
  }


  public EmployeeJobHistoryDetail supervisorNameFirst(String supervisorNameFirst) {
    
    
    
    
    this.supervisorNameFirst = supervisorNameFirst;
    return this;
  }

   /**
   * Get supervisorNameFirst
   * @return supervisorNameFirst
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorNameFirst() {
    return supervisorNameFirst;
  }


  public void setSupervisorNameFirst(String supervisorNameFirst) {
    
    
    
    this.supervisorNameFirst = supervisorNameFirst;
  }


  public EmployeeJobHistoryDetail supervisorNameLast(String supervisorNameLast) {
    
    
    
    
    this.supervisorNameLast = supervisorNameLast;
    return this;
  }

   /**
   * Get supervisorNameLast
   * @return supervisorNameLast
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorNameLast() {
    return supervisorNameLast;
  }


  public void setSupervisorNameLast(String supervisorNameLast) {
    
    
    
    this.supervisorNameLast = supervisorNameLast;
  }


  public EmployeeJobHistoryDetail supervisorNameSuffix(String supervisorNameSuffix) {
    
    
    
    
    this.supervisorNameSuffix = supervisorNameSuffix;
    return this;
  }

   /**
   * Get supervisorNameSuffix
   * @return supervisorNameSuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorNameSuffix() {
    return supervisorNameSuffix;
  }


  public void setSupervisorNameSuffix(String supervisorNameSuffix) {
    
    
    
    this.supervisorNameSuffix = supervisorNameSuffix;
  }


  public EmployeeJobHistoryDetail supervisorNotInList(Boolean supervisorNotInList) {
    
    
    
    
    this.supervisorNotInList = supervisorNotInList;
    return this;
  }

   /**
   * Get supervisorNotInList
   * @return supervisorNotInList
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSupervisorNotInList() {
    return supervisorNotInList;
  }


  public void setSupervisorNotInList(Boolean supervisorNotInList) {
    
    
    
    this.supervisorNotInList = supervisorNotInList;
  }


  public EmployeeJobHistoryDetail systemId(String systemId) {
    
    
    
    
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSystemId() {
    return systemId;
  }


  public void setSystemId(String systemId) {
    
    
    
    this.systemId = systemId;
  }


  public EmployeeJobHistoryDetail unionNational(String unionNational) {
    
    
    
    
    this.unionNational = unionNational;
    return this;
  }

   /**
   * Get unionNational
   * @return unionNational
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnionNational() {
    return unionNational;
  }


  public void setUnionNational(String unionNational) {
    
    
    
    this.unionNational = unionNational;
  }


  public EmployeeJobHistoryDetail usePayScales(Boolean usePayScales) {
    
    
    
    
    this.usePayScales = usePayScales;
    return this;
  }

   /**
   * Get usePayScales
   * @return usePayScales
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUsePayScales() {
    return usePayScales;
  }


  public void setUsePayScales(Boolean usePayScales) {
    
    
    
    this.usePayScales = usePayScales;
  }


  public EmployeeJobHistoryDetail weeklyPayRate(Double weeklyPayRate) {
    
    
    
    
    this.weeklyPayRate = weeklyPayRate;
    return this;
  }

   /**
   * Get weeklyPayRate
   * @return weeklyPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeeklyPayRate() {
    return weeklyPayRate;
  }


  public void setWeeklyPayRate(Double weeklyPayRate) {
    
    
    
    this.weeklyPayRate = weeklyPayRate;
  }


  public EmployeeJobHistoryDetail notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public EmployeeJobHistoryDetail homeCompanyId(String homeCompanyId) {
    
    
    
    
    this.homeCompanyId = homeCompanyId;
    return this;
  }

   /**
   * Get homeCompanyId
   * @return homeCompanyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomeCompanyId() {
    return homeCompanyId;
  }


  public void setHomeCompanyId(String homeCompanyId) {
    
    
    
    this.homeCompanyId = homeCompanyId;
  }


  public EmployeeJobHistoryDetail integrationEffectiveDate(OffsetDateTime integrationEffectiveDate) {
    
    
    
    
    this.integrationEffectiveDate = integrationEffectiveDate;
    return this;
  }

   /**
   * Get integrationEffectiveDate
   * @return integrationEffectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getIntegrationEffectiveDate() {
    return integrationEffectiveDate;
  }


  public void setIntegrationEffectiveDate(OffsetDateTime integrationEffectiveDate) {
    
    
    
    this.integrationEffectiveDate = integrationEffectiveDate;
  }


  public EmployeeJobHistoryDetail projectCode(String projectCode) {
    
    
    
    
    this.projectCode = projectCode;
    return this;
  }

   /**
   * Get projectCode
   * @return projectCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProjectCode() {
    return projectCode;
  }


  public void setProjectCode(String projectCode) {
    
    
    
    this.projectCode = projectCode;
  }


  public EmployeeJobHistoryDetail numberOfPayments(Double numberOfPayments) {
    
    
    
    
    this.numberOfPayments = numberOfPayments;
    return this;
  }

   /**
   * Get numberOfPayments
   * @return numberOfPayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getNumberOfPayments() {
    return numberOfPayments;
  }


  public void setNumberOfPayments(Double numberOfPayments) {
    
    
    
    this.numberOfPayments = numberOfPayments;
  }


  public EmployeeJobHistoryDetail weeklyHours(Double weeklyHours) {
    
    
    
    
    this.weeklyHours = weeklyHours;
    return this;
  }

   /**
   * Get weeklyHours
   * @return weeklyHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeeklyHours() {
    return weeklyHours;
  }


  public void setWeeklyHours(Double weeklyHours) {
    
    
    
    this.weeklyHours = weeklyHours;
  }


  public EmployeeJobHistoryDetail isViewableByEmployee(Boolean isViewableByEmployee) {
    
    
    
    
    this.isViewableByEmployee = isViewableByEmployee;
    return this;
  }

   /**
   * Get isViewableByEmployee
   * @return isViewableByEmployee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsViewableByEmployee() {
    return isViewableByEmployee;
  }


  public void setIsViewableByEmployee(Boolean isViewableByEmployee) {
    
    
    
    this.isViewableByEmployee = isViewableByEmployee;
  }


  public EmployeeJobHistoryDetail createdByUserId(Double createdByUserId) {
    
    
    
    
    this.createdByUserId = createdByUserId;
    return this;
  }

   /**
   * Get createdByUserId
   * @return createdByUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCreatedByUserId() {
    return createdByUserId;
  }


  public void setCreatedByUserId(Double createdByUserId) {
    
    
    
    this.createdByUserId = createdByUserId;
  }


  public EmployeeJobHistoryDetail jobTitle(String jobTitle) {
    
    
    
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * Get jobTitle
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    
    
    
    this.jobTitle = jobTitle;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeJobHistoryDetail instance itself
   */
  public EmployeeJobHistoryDetail putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeJobHistoryDetail employeeJobHistoryDetail = (EmployeeJobHistoryDetail) o;
    return Objects.equals(this.annualSalary, employeeJobHistoryDetail.annualSalary) &&
        Objects.equals(this.companyId, employeeJobHistoryDetail.companyId) &&
        Objects.equals(this.dateTimeCreated, employeeJobHistoryDetail.dateTimeCreated) &&
        Objects.equals(this.employeeId, employeeJobHistoryDetail.employeeId) &&
        Objects.equals(this.employeeType, employeeJobHistoryDetail.employeeType) &&
        Objects.equals(this.employeeStatus, employeeJobHistoryDetail.employeeStatus) &&
        Objects.equals(this.flsaCategory, employeeJobHistoryDetail.flsaCategory) &&
        Objects.equals(this.fullTimeOrPartTime, employeeJobHistoryDetail.fullTimeOrPartTime) &&
        Objects.equals(this.hourlyPayRate, employeeJobHistoryDetail.hourlyPayRate) &&
        Objects.equals(this.isJobChange, employeeJobHistoryDetail.isJobChange) &&
        Objects.equals(this.isOrgchange, employeeJobHistoryDetail.isOrgchange) &&
        Objects.equals(this.isOutsideGuidelines, employeeJobHistoryDetail.isOutsideGuidelines) &&
        Objects.equals(this.isOutsideRange, employeeJobHistoryDetail.isOutsideRange) &&
        Objects.equals(this.isPromotion, employeeJobHistoryDetail.isPromotion) &&
        Objects.equals(this.isRateChange, employeeJobHistoryDetail.isRateChange) &&
        Objects.equals(this.isSystem, employeeJobHistoryDetail.isSystem) &&
        Objects.equals(this.isTransfer, employeeJobHistoryDetail.isTransfer) &&
        Objects.equals(this.jobCode, employeeJobHistoryDetail.jobCode) &&
        Objects.equals(this.jobDescription, employeeJobHistoryDetail.jobDescription) &&
        Objects.equals(this.jobEffectiveDate, employeeJobHistoryDetail.jobEffectiveDate) &&
        Objects.equals(this.jobGroupCode, employeeJobHistoryDetail.jobGroupCode) &&
        Objects.equals(this.locationCode, employeeJobHistoryDetail.locationCode) &&
        Objects.equals(this.orgLevel1Code, employeeJobHistoryDetail.orgLevel1Code) &&
        Objects.equals(this.orgLevel2Code, employeeJobHistoryDetail.orgLevel2Code) &&
        Objects.equals(this.orgLevel3Code, employeeJobHistoryDetail.orgLevel3Code) &&
        Objects.equals(this.orgLevel4Code, employeeJobHistoryDetail.orgLevel4Code) &&
        Objects.equals(this.otherRate1, employeeJobHistoryDetail.otherRate1) &&
        Objects.equals(this.otherRate2, employeeJobHistoryDetail.otherRate2) &&
        Objects.equals(this.otherRate3, employeeJobHistoryDetail.otherRate3) &&
        Objects.equals(this.otherRate4, employeeJobHistoryDetail.otherRate4) &&
        Objects.equals(this.payGroupCode, employeeJobHistoryDetail.payGroupCode) &&
        Objects.equals(this.payPeriodCode, employeeJobHistoryDetail.payPeriodCode) &&
        Objects.equals(this.payScaleCode, employeeJobHistoryDetail.payScaleCode) &&
        Objects.equals(this.percentChange, employeeJobHistoryDetail.percentChange) &&
        Objects.equals(this.periodPayRate, employeeJobHistoryDetail.periodPayRate) &&
        Objects.equals(this.piecePayRate, employeeJobHistoryDetail.piecePayRate) &&
        Objects.equals(this.positionCode, employeeJobHistoryDetail.positionCode) &&
        Objects.equals(this.reasonCode, employeeJobHistoryDetail.reasonCode) &&
        Objects.equals(this.salaryGrade, employeeJobHistoryDetail.salaryGrade) &&
        Objects.equals(this.salaryOrHourly, employeeJobHistoryDetail.salaryOrHourly) &&
        Objects.equals(this.scheduledAnnualHours, employeeJobHistoryDetail.scheduledAnnualHours) &&
        Objects.equals(this.scheduledFullTimeEquivalency, employeeJobHistoryDetail.scheduledFullTimeEquivalency) &&
        Objects.equals(this.scheduledWorkHours, employeeJobHistoryDetail.scheduledWorkHours) &&
        Objects.equals(this.shiftCode, employeeJobHistoryDetail.shiftCode) &&
        Objects.equals(this.shiftGroupCode, employeeJobHistoryDetail.shiftGroupCode) &&
        Objects.equals(this.stepNumber, employeeJobHistoryDetail.stepNumber) &&
        Objects.equals(this.supervisorId, employeeJobHistoryDetail.supervisorId) &&
        Objects.equals(this.supervisorNameFirst, employeeJobHistoryDetail.supervisorNameFirst) &&
        Objects.equals(this.supervisorNameLast, employeeJobHistoryDetail.supervisorNameLast) &&
        Objects.equals(this.supervisorNameSuffix, employeeJobHistoryDetail.supervisorNameSuffix) &&
        Objects.equals(this.supervisorNotInList, employeeJobHistoryDetail.supervisorNotInList) &&
        Objects.equals(this.systemId, employeeJobHistoryDetail.systemId) &&
        Objects.equals(this.unionNational, employeeJobHistoryDetail.unionNational) &&
        Objects.equals(this.usePayScales, employeeJobHistoryDetail.usePayScales) &&
        Objects.equals(this.weeklyPayRate, employeeJobHistoryDetail.weeklyPayRate) &&
        Objects.equals(this.notes, employeeJobHistoryDetail.notes) &&
        Objects.equals(this.homeCompanyId, employeeJobHistoryDetail.homeCompanyId) &&
        Objects.equals(this.integrationEffectiveDate, employeeJobHistoryDetail.integrationEffectiveDate) &&
        Objects.equals(this.projectCode, employeeJobHistoryDetail.projectCode) &&
        Objects.equals(this.numberOfPayments, employeeJobHistoryDetail.numberOfPayments) &&
        Objects.equals(this.weeklyHours, employeeJobHistoryDetail.weeklyHours) &&
        Objects.equals(this.isViewableByEmployee, employeeJobHistoryDetail.isViewableByEmployee) &&
        Objects.equals(this.createdByUserId, employeeJobHistoryDetail.createdByUserId) &&
        Objects.equals(this.jobTitle, employeeJobHistoryDetail.jobTitle)&&
        Objects.equals(this.additionalProperties, employeeJobHistoryDetail.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(annualSalary, companyId, dateTimeCreated, employeeId, employeeType, employeeStatus, flsaCategory, fullTimeOrPartTime, hourlyPayRate, isJobChange, isOrgchange, isOutsideGuidelines, isOutsideRange, isPromotion, isRateChange, isSystem, isTransfer, jobCode, jobDescription, jobEffectiveDate, jobGroupCode, locationCode, orgLevel1Code, orgLevel2Code, orgLevel3Code, orgLevel4Code, otherRate1, otherRate2, otherRate3, otherRate4, payGroupCode, payPeriodCode, payScaleCode, percentChange, periodPayRate, piecePayRate, positionCode, reasonCode, salaryGrade, salaryOrHourly, scheduledAnnualHours, scheduledFullTimeEquivalency, scheduledWorkHours, shiftCode, shiftGroupCode, stepNumber, supervisorId, supervisorNameFirst, supervisorNameLast, supervisorNameSuffix, supervisorNotInList, systemId, unionNational, usePayScales, weeklyPayRate, notes, homeCompanyId, integrationEffectiveDate, projectCode, numberOfPayments, weeklyHours, isViewableByEmployee, createdByUserId, jobTitle, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeJobHistoryDetail {\n");
    sb.append("    annualSalary: ").append(toIndentedString(annualSalary)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    dateTimeCreated: ").append(toIndentedString(dateTimeCreated)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    employeeType: ").append(toIndentedString(employeeType)).append("\n");
    sb.append("    employeeStatus: ").append(toIndentedString(employeeStatus)).append("\n");
    sb.append("    flsaCategory: ").append(toIndentedString(flsaCategory)).append("\n");
    sb.append("    fullTimeOrPartTime: ").append(toIndentedString(fullTimeOrPartTime)).append("\n");
    sb.append("    hourlyPayRate: ").append(toIndentedString(hourlyPayRate)).append("\n");
    sb.append("    isJobChange: ").append(toIndentedString(isJobChange)).append("\n");
    sb.append("    isOrgchange: ").append(toIndentedString(isOrgchange)).append("\n");
    sb.append("    isOutsideGuidelines: ").append(toIndentedString(isOutsideGuidelines)).append("\n");
    sb.append("    isOutsideRange: ").append(toIndentedString(isOutsideRange)).append("\n");
    sb.append("    isPromotion: ").append(toIndentedString(isPromotion)).append("\n");
    sb.append("    isRateChange: ").append(toIndentedString(isRateChange)).append("\n");
    sb.append("    isSystem: ").append(toIndentedString(isSystem)).append("\n");
    sb.append("    isTransfer: ").append(toIndentedString(isTransfer)).append("\n");
    sb.append("    jobCode: ").append(toIndentedString(jobCode)).append("\n");
    sb.append("    jobDescription: ").append(toIndentedString(jobDescription)).append("\n");
    sb.append("    jobEffectiveDate: ").append(toIndentedString(jobEffectiveDate)).append("\n");
    sb.append("    jobGroupCode: ").append(toIndentedString(jobGroupCode)).append("\n");
    sb.append("    locationCode: ").append(toIndentedString(locationCode)).append("\n");
    sb.append("    orgLevel1Code: ").append(toIndentedString(orgLevel1Code)).append("\n");
    sb.append("    orgLevel2Code: ").append(toIndentedString(orgLevel2Code)).append("\n");
    sb.append("    orgLevel3Code: ").append(toIndentedString(orgLevel3Code)).append("\n");
    sb.append("    orgLevel4Code: ").append(toIndentedString(orgLevel4Code)).append("\n");
    sb.append("    otherRate1: ").append(toIndentedString(otherRate1)).append("\n");
    sb.append("    otherRate2: ").append(toIndentedString(otherRate2)).append("\n");
    sb.append("    otherRate3: ").append(toIndentedString(otherRate3)).append("\n");
    sb.append("    otherRate4: ").append(toIndentedString(otherRate4)).append("\n");
    sb.append("    payGroupCode: ").append(toIndentedString(payGroupCode)).append("\n");
    sb.append("    payPeriodCode: ").append(toIndentedString(payPeriodCode)).append("\n");
    sb.append("    payScaleCode: ").append(toIndentedString(payScaleCode)).append("\n");
    sb.append("    percentChange: ").append(toIndentedString(percentChange)).append("\n");
    sb.append("    periodPayRate: ").append(toIndentedString(periodPayRate)).append("\n");
    sb.append("    piecePayRate: ").append(toIndentedString(piecePayRate)).append("\n");
    sb.append("    positionCode: ").append(toIndentedString(positionCode)).append("\n");
    sb.append("    reasonCode: ").append(toIndentedString(reasonCode)).append("\n");
    sb.append("    salaryGrade: ").append(toIndentedString(salaryGrade)).append("\n");
    sb.append("    salaryOrHourly: ").append(toIndentedString(salaryOrHourly)).append("\n");
    sb.append("    scheduledAnnualHours: ").append(toIndentedString(scheduledAnnualHours)).append("\n");
    sb.append("    scheduledFullTimeEquivalency: ").append(toIndentedString(scheduledFullTimeEquivalency)).append("\n");
    sb.append("    scheduledWorkHours: ").append(toIndentedString(scheduledWorkHours)).append("\n");
    sb.append("    shiftCode: ").append(toIndentedString(shiftCode)).append("\n");
    sb.append("    shiftGroupCode: ").append(toIndentedString(shiftGroupCode)).append("\n");
    sb.append("    stepNumber: ").append(toIndentedString(stepNumber)).append("\n");
    sb.append("    supervisorId: ").append(toIndentedString(supervisorId)).append("\n");
    sb.append("    supervisorNameFirst: ").append(toIndentedString(supervisorNameFirst)).append("\n");
    sb.append("    supervisorNameLast: ").append(toIndentedString(supervisorNameLast)).append("\n");
    sb.append("    supervisorNameSuffix: ").append(toIndentedString(supervisorNameSuffix)).append("\n");
    sb.append("    supervisorNotInList: ").append(toIndentedString(supervisorNotInList)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    unionNational: ").append(toIndentedString(unionNational)).append("\n");
    sb.append("    usePayScales: ").append(toIndentedString(usePayScales)).append("\n");
    sb.append("    weeklyPayRate: ").append(toIndentedString(weeklyPayRate)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    homeCompanyId: ").append(toIndentedString(homeCompanyId)).append("\n");
    sb.append("    integrationEffectiveDate: ").append(toIndentedString(integrationEffectiveDate)).append("\n");
    sb.append("    projectCode: ").append(toIndentedString(projectCode)).append("\n");
    sb.append("    numberOfPayments: ").append(toIndentedString(numberOfPayments)).append("\n");
    sb.append("    weeklyHours: ").append(toIndentedString(weeklyHours)).append("\n");
    sb.append("    isViewableByEmployee: ").append(toIndentedString(isViewableByEmployee)).append("\n");
    sb.append("    createdByUserId: ").append(toIndentedString(createdByUserId)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("annualSalary");
    openapiFields.add("companyId");
    openapiFields.add("dateTimeCreated");
    openapiFields.add("employeeId");
    openapiFields.add("employeeType");
    openapiFields.add("employeeStatus");
    openapiFields.add("flsaCategory");
    openapiFields.add("fullTimeOrPartTime");
    openapiFields.add("hourlyPayRate");
    openapiFields.add("isJobChange");
    openapiFields.add("isOrgchange");
    openapiFields.add("isOutsideGuidelines");
    openapiFields.add("isOutsideRange");
    openapiFields.add("isPromotion");
    openapiFields.add("isRateChange");
    openapiFields.add("isSystem");
    openapiFields.add("isTransfer");
    openapiFields.add("jobCode");
    openapiFields.add("jobDescription");
    openapiFields.add("jobEffectiveDate");
    openapiFields.add("jobGroupCode");
    openapiFields.add("locationCode");
    openapiFields.add("orgLevel1Code");
    openapiFields.add("orgLevel2Code");
    openapiFields.add("orgLevel3Code");
    openapiFields.add("orgLevel4Code");
    openapiFields.add("otherRate1");
    openapiFields.add("otherRate2");
    openapiFields.add("otherRate3");
    openapiFields.add("otherRate4");
    openapiFields.add("payGroupCode");
    openapiFields.add("payPeriodCode");
    openapiFields.add("payScaleCode");
    openapiFields.add("percentChange");
    openapiFields.add("periodPayRate");
    openapiFields.add("piecePayRate");
    openapiFields.add("positionCode");
    openapiFields.add("reasonCode");
    openapiFields.add("salaryGrade");
    openapiFields.add("salaryOrHourly");
    openapiFields.add("scheduledAnnualHours");
    openapiFields.add("scheduledFullTimeEquivalency");
    openapiFields.add("scheduledWorkHours");
    openapiFields.add("shiftCode");
    openapiFields.add("shiftGroupCode");
    openapiFields.add("stepNumber");
    openapiFields.add("supervisorId");
    openapiFields.add("supervisorNameFirst");
    openapiFields.add("supervisorNameLast");
    openapiFields.add("supervisorNameSuffix");
    openapiFields.add("supervisorNotInList");
    openapiFields.add("systemId");
    openapiFields.add("unionNational");
    openapiFields.add("usePayScales");
    openapiFields.add("weeklyPayRate");
    openapiFields.add("notes");
    openapiFields.add("homeCompanyId");
    openapiFields.add("integrationEffectiveDate");
    openapiFields.add("projectCode");
    openapiFields.add("numberOfPayments");
    openapiFields.add("weeklyHours");
    openapiFields.add("isViewableByEmployee");
    openapiFields.add("createdByUserId");
    openapiFields.add("jobTitle");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeJobHistoryDetail
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeJobHistoryDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeJobHistoryDetail is not found in the empty JSON string", EmployeeJobHistoryDetail.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("employeeType") != null && !jsonObj.get("employeeType").isJsonNull()) && !jsonObj.get("employeeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeType").toString()));
      }
      if ((jsonObj.get("employeeStatus") != null && !jsonObj.get("employeeStatus").isJsonNull()) && !jsonObj.get("employeeStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeStatus").toString()));
      }
      if ((jsonObj.get("flsaCategory") != null && !jsonObj.get("flsaCategory").isJsonNull()) && !jsonObj.get("flsaCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `flsaCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("flsaCategory").toString()));
      }
      if ((jsonObj.get("fullTimeOrPartTime") != null && !jsonObj.get("fullTimeOrPartTime").isJsonNull()) && !jsonObj.get("fullTimeOrPartTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullTimeOrPartTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullTimeOrPartTime").toString()));
      }
      if ((jsonObj.get("jobCode") != null && !jsonObj.get("jobCode").isJsonNull()) && !jsonObj.get("jobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobCode").toString()));
      }
      if ((jsonObj.get("jobDescription") != null && !jsonObj.get("jobDescription").isJsonNull()) && !jsonObj.get("jobDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobDescription").toString()));
      }
      if ((jsonObj.get("jobGroupCode") != null && !jsonObj.get("jobGroupCode").isJsonNull()) && !jsonObj.get("jobGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobGroupCode").toString()));
      }
      if ((jsonObj.get("locationCode") != null && !jsonObj.get("locationCode").isJsonNull()) && !jsonObj.get("locationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationCode").toString()));
      }
      if ((jsonObj.get("orgLevel1Code") != null && !jsonObj.get("orgLevel1Code").isJsonNull()) && !jsonObj.get("orgLevel1Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel1Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel1Code").toString()));
      }
      if ((jsonObj.get("orgLevel2Code") != null && !jsonObj.get("orgLevel2Code").isJsonNull()) && !jsonObj.get("orgLevel2Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel2Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel2Code").toString()));
      }
      if ((jsonObj.get("orgLevel3Code") != null && !jsonObj.get("orgLevel3Code").isJsonNull()) && !jsonObj.get("orgLevel3Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel3Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel3Code").toString()));
      }
      if ((jsonObj.get("orgLevel4Code") != null && !jsonObj.get("orgLevel4Code").isJsonNull()) && !jsonObj.get("orgLevel4Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel4Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel4Code").toString()));
      }
      if ((jsonObj.get("payGroupCode") != null && !jsonObj.get("payGroupCode").isJsonNull()) && !jsonObj.get("payGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroupCode").toString()));
      }
      if ((jsonObj.get("payPeriodCode") != null && !jsonObj.get("payPeriodCode").isJsonNull()) && !jsonObj.get("payPeriodCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payPeriodCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payPeriodCode").toString()));
      }
      if ((jsonObj.get("payScaleCode") != null && !jsonObj.get("payScaleCode").isJsonNull()) && !jsonObj.get("payScaleCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payScaleCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payScaleCode").toString()));
      }
      if ((jsonObj.get("positionCode") != null && !jsonObj.get("positionCode").isJsonNull()) && !jsonObj.get("positionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionCode").toString()));
      }
      if ((jsonObj.get("reasonCode") != null && !jsonObj.get("reasonCode").isJsonNull()) && !jsonObj.get("reasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reasonCode").toString()));
      }
      if ((jsonObj.get("salaryGrade") != null && !jsonObj.get("salaryGrade").isJsonNull()) && !jsonObj.get("salaryGrade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salaryGrade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salaryGrade").toString()));
      }
      if ((jsonObj.get("salaryOrHourly") != null && !jsonObj.get("salaryOrHourly").isJsonNull()) && !jsonObj.get("salaryOrHourly").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salaryOrHourly` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salaryOrHourly").toString()));
      }
      if ((jsonObj.get("shiftCode") != null && !jsonObj.get("shiftCode").isJsonNull()) && !jsonObj.get("shiftCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shiftCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shiftCode").toString()));
      }
      if ((jsonObj.get("shiftGroupCode") != null && !jsonObj.get("shiftGroupCode").isJsonNull()) && !jsonObj.get("shiftGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shiftGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shiftGroupCode").toString()));
      }
      if ((jsonObj.get("supervisorId") != null && !jsonObj.get("supervisorId").isJsonNull()) && !jsonObj.get("supervisorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorId").toString()));
      }
      if ((jsonObj.get("supervisorNameFirst") != null && !jsonObj.get("supervisorNameFirst").isJsonNull()) && !jsonObj.get("supervisorNameFirst").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorNameFirst` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorNameFirst").toString()));
      }
      if ((jsonObj.get("supervisorNameLast") != null && !jsonObj.get("supervisorNameLast").isJsonNull()) && !jsonObj.get("supervisorNameLast").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorNameLast` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorNameLast").toString()));
      }
      if ((jsonObj.get("supervisorNameSuffix") != null && !jsonObj.get("supervisorNameSuffix").isJsonNull()) && !jsonObj.get("supervisorNameSuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorNameSuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorNameSuffix").toString()));
      }
      if ((jsonObj.get("systemId") != null && !jsonObj.get("systemId").isJsonNull()) && !jsonObj.get("systemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `systemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("systemId").toString()));
      }
      if ((jsonObj.get("unionNational") != null && !jsonObj.get("unionNational").isJsonNull()) && !jsonObj.get("unionNational").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unionNational` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unionNational").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("homeCompanyId") != null && !jsonObj.get("homeCompanyId").isJsonNull()) && !jsonObj.get("homeCompanyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeCompanyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeCompanyId").toString()));
      }
      if ((jsonObj.get("projectCode") != null && !jsonObj.get("projectCode").isJsonNull()) && !jsonObj.get("projectCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectCode").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeJobHistoryDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeJobHistoryDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeJobHistoryDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeJobHistoryDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeJobHistoryDetail>() {
           @Override
           public void write(JsonWriter out, EmployeeJobHistoryDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeJobHistoryDetail read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeJobHistoryDetail instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeJobHistoryDetail given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeJobHistoryDetail
  * @throws IOException if the JSON string is invalid with respect to EmployeeJobHistoryDetail
  */
  public static EmployeeJobHistoryDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeJobHistoryDetail.class);
  }

 /**
  * Convert an instance of EmployeeJobHistoryDetail to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

