/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.UUID;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * Contact
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Contact {
  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_COUNTY = "county";
  @SerializedName(SERIALIZED_NAME_COUNTY)
  private String county;

  public static final String SERIALIZED_NAME_ADDRESS_IS_DIFFERENT_FROM_EMPLOYEE = "addressIsDifferentFromEmployee";
  @SerializedName(SERIALIZED_NAME_ADDRESS_IS_DIFFERENT_FROM_EMPLOYEE)
  private Boolean addressIsDifferentFromEmployee;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zipCode";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private String zipCode;

  public static final String SERIALIZED_NAME_COBRA_EXPORT = "cobraExport";
  @SerializedName(SERIALIZED_NAME_COBRA_EXPORT)
  private Boolean cobraExport;

  public static final String SERIALIZED_NAME_COBRA_IS_ACTIVE = "cobraIsActive";
  @SerializedName(SERIALIZED_NAME_COBRA_IS_ACTIVE)
  private Boolean cobraIsActive;

  public static final String SERIALIZED_NAME_COBRA_REASON = "cobraReason";
  @SerializedName(SERIALIZED_NAME_COBRA_REASON)
  private String cobraReason;

  public static final String SERIALIZED_NAME_COBRA_STATUS = "cobraStatus";
  @SerializedName(SERIALIZED_NAME_COBRA_STATUS)
  private String cobraStatus;

  public static final String SERIALIZED_NAME_COBRA_STATUS_DATE = "cobraStatusDate";
  @SerializedName(SERIALIZED_NAME_COBRA_STATUS_DATE)
  private OffsetDateTime cobraStatusDate;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private OffsetDateTime dateOfBirth;

  public static final String SERIALIZED_NAME_DATE_OF_C_O_B_R_A_EVENT = "dateOfCOBRAEvent";
  @SerializedName(SERIALIZED_NAME_DATE_OF_C_O_B_R_A_EVENT)
  private OffsetDateTime dateOfCOBRAEvent;

  public static final String SERIALIZED_NAME_DATE_OF_C_O_B_R_A_LETTER = "dateOfCOBRALetter";
  @SerializedName(SERIALIZED_NAME_DATE_OF_C_O_B_R_A_LETTER)
  private OffsetDateTime dateOfCOBRALetter;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_IMPORT_ID = "importId";
  @SerializedName(SERIALIZED_NAME_IMPORT_ID)
  private String importId;

  public static final String SERIALIZED_NAME_IS_BENEFICIARY = "isBeneficiary";
  @SerializedName(SERIALIZED_NAME_IS_BENEFICIARY)
  private Boolean isBeneficiary;

  public static final String SERIALIZED_NAME_IS_DEPENDENT = "isDependent";
  @SerializedName(SERIALIZED_NAME_IS_DEPENDENT)
  private Boolean isDependent;

  public static final String SERIALIZED_NAME_IS_DISABLED = "isDisabled";
  @SerializedName(SERIALIZED_NAME_IS_DISABLED)
  private Boolean isDisabled;

  public static final String SERIALIZED_NAME_IS_EMERGENCY_CONTACT = "isEmergencyContact";
  @SerializedName(SERIALIZED_NAME_IS_EMERGENCY_CONTACT)
  private Boolean isEmergencyContact;

  public static final String SERIALIZED_NAME_IS_SMOKER = "isSmoker";
  @SerializedName(SERIALIZED_NAME_IS_SMOKER)
  private Boolean isSmoker;

  public static final String SERIALIZED_NAME_IS_STUDENT = "isStudent";
  @SerializedName(SERIALIZED_NAME_IS_STUDENT)
  private Boolean isStudent;

  public static final String SERIALIZED_NAME_MARRIAGE_DATE = "marriageDate";
  @SerializedName(SERIALIZED_NAME_MARRIAGE_DATE)
  private OffsetDateTime marriageDate;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_FORMER_NAME = "formerName";
  @SerializedName(SERIALIZED_NAME_FORMER_NAME)
  private String formerName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_NAME_SUFFIX = "nameSuffix";
  @SerializedName(SERIALIZED_NAME_NAME_SUFFIX)
  private String nameSuffix;

  public static final String SERIALIZED_NAME_OCCUPATION = "occupation";
  @SerializedName(SERIALIZED_NAME_OCCUPATION)
  private String occupation;

  public static final String SERIALIZED_NAME_OTHER_INSURANCE = "otherInsurance";
  @SerializedName(SERIALIZED_NAME_OTHER_INSURANCE)
  private String otherInsurance;

  public static final String SERIALIZED_NAME_HOME_PHONE_COUNTRY = "homePhoneCountry";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_COUNTRY)
  private String homePhoneCountry;

  public static final String SERIALIZED_NAME_HOME_PHONE_NUMBER = "homePhoneNumber";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_NUMBER)
  private String homePhoneNumber;

  public static final String SERIALIZED_NAME_OTHER_PHONE_NUMBER = "otherPhoneNumber";
  @SerializedName(SERIALIZED_NAME_OTHER_PHONE_NUMBER)
  private String otherPhoneNumber;

  public static final String SERIALIZED_NAME_OTHER_PHONE_TYPE = "otherPhoneType";
  @SerializedName(SERIALIZED_NAME_OTHER_PHONE_TYPE)
  private String otherPhoneType;

  public static final String SERIALIZED_NAME_PREFERRED_PHONE_NUMBER = "preferredPhoneNumber";
  @SerializedName(SERIALIZED_NAME_PREFERRED_PHONE_NUMBER)
  private String preferredPhoneNumber;

  public static final String SERIALIZED_NAME_RELATIONSHIP_CODE = "relationshipCode";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP_CODE)
  private String relationshipCode;

  public static final String SERIALIZED_NAME_RELATIONSHIP_DESCRIPTION = "relationshipDescription";
  @SerializedName(SERIALIZED_NAME_RELATIONSHIP_DESCRIPTION)
  private String relationshipDescription;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_CONTACT_ID = "contactId";
  @SerializedName(SERIALIZED_NAME_CONTACT_ID)
  private String contactId;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD01 = "userDefinedField01";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD01)
  private String userDefinedField01;

  public static final String SERIALIZED_NAME_WORK_PHONE_EXTENSION = "workPhoneExtension";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_EXTENSION)
  private String workPhoneExtension;

  public static final String SERIALIZED_NAME_WORK_PHONE_NUMBER = "workPhoneNumber";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_NUMBER)
  private String workPhoneNumber;

  public static final String SERIALIZED_NAME_COBRA_NOTES = "cobraNotes";
  @SerializedName(SERIALIZED_NAME_COBRA_NOTES)
  private String cobraNotes;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_STATUS_AS_OF_DATE = "statusAsOfDate";
  @SerializedName(SERIALIZED_NAME_STATUS_AS_OF_DATE)
  private OffsetDateTime statusAsOfDate;

  public static final String SERIALIZED_NAME_DEATH_DATE = "deathDate";
  @SerializedName(SERIALIZED_NAME_DEATH_DATE)
  private OffsetDateTime deathDate;

  public static final String SERIALIZED_NAME_DIVORCE_DATE = "divorceDate";
  @SerializedName(SERIALIZED_NAME_DIVORCE_DATE)
  private OffsetDateTime divorceDate;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_OTHER_PHONE_COUNTRY_CODE = "otherPhoneCountryCode";
  @SerializedName(SERIALIZED_NAME_OTHER_PHONE_COUNTRY_CODE)
  private String otherPhoneCountryCode;

  public static final String SERIALIZED_NAME_HEALTH_CARE_ID = "healthCareId";
  @SerializedName(SERIALIZED_NAME_HEALTH_CARE_ID)
  private String healthCareId;

  public static final String SERIALIZED_NAME_NATIONAL_ID = "nationalId";
  @SerializedName(SERIALIZED_NAME_NATIONAL_ID)
  private String nationalId;

  public static final String SERIALIZED_NAME_NATIONAL_ID_EXPIRATION_DATE = "nationalIdExpirationDate";
  @SerializedName(SERIALIZED_NAME_NATIONAL_ID_EXPIRATION_DATE)
  private OffsetDateTime nationalIdExpirationDate;

  public static final String SERIALIZED_NAME_PERSON_I_D = "personID";
  @SerializedName(SERIALIZED_NAME_PERSON_I_D)
  private UUID personID;

  public static final String SERIALIZED_NAME_ADDRESS_I_D = "addressID";
  @SerializedName(SERIALIZED_NAME_ADDRESS_I_D)
  private UUID addressID;

  public static final String SERIALIZED_NAME_WORK_PHONE_ID = "workPhoneId";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_ID)
  private UUID workPhoneId;

  public static final String SERIALIZED_NAME_HOME_PHONE_ID = "homePhoneId";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_ID)
  private UUID homePhoneId;

  public static final String SERIALIZED_NAME_OTHER_PHONE_ID = "otherPhoneId";
  @SerializedName(SERIALIZED_NAME_OTHER_PHONE_ID)
  private UUID otherPhoneId;

  public Contact() {
  }

  public Contact city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public Contact countryCode(String countryCode) {
    
    
    
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    
    
    
    this.countryCode = countryCode;
  }


  public Contact county(String county) {
    
    
    
    
    this.county = county;
    return this;
  }

   /**
   * Get county
   * @return county
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCounty() {
    return county;
  }


  public void setCounty(String county) {
    
    
    
    this.county = county;
  }


  public Contact addressIsDifferentFromEmployee(Boolean addressIsDifferentFromEmployee) {
    
    
    
    
    this.addressIsDifferentFromEmployee = addressIsDifferentFromEmployee;
    return this;
  }

   /**
   * Get addressIsDifferentFromEmployee
   * @return addressIsDifferentFromEmployee
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAddressIsDifferentFromEmployee() {
    return addressIsDifferentFromEmployee;
  }


  public void setAddressIsDifferentFromEmployee(Boolean addressIsDifferentFromEmployee) {
    
    
    
    this.addressIsDifferentFromEmployee = addressIsDifferentFromEmployee;
  }


  public Contact addressLine1(String addressLine1) {
    
    
    
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Get addressLine1
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(String addressLine1) {
    
    
    
    this.addressLine1 = addressLine1;
  }


  public Contact addressLine2(String addressLine2) {
    
    
    
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Get addressLine2
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(String addressLine2) {
    
    
    
    this.addressLine2 = addressLine2;
  }


  public Contact state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public Contact zipCode(String zipCode) {
    
    
    
    
    this.zipCode = zipCode;
    return this;
  }

   /**
   * Get zipCode
   * @return zipCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getZipCode() {
    return zipCode;
  }


  public void setZipCode(String zipCode) {
    
    
    
    this.zipCode = zipCode;
  }


  public Contact cobraExport(Boolean cobraExport) {
    
    
    
    
    this.cobraExport = cobraExport;
    return this;
  }

   /**
   * Get cobraExport
   * @return cobraExport
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCobraExport() {
    return cobraExport;
  }


  public void setCobraExport(Boolean cobraExport) {
    
    
    
    this.cobraExport = cobraExport;
  }


  public Contact cobraIsActive(Boolean cobraIsActive) {
    
    
    
    
    this.cobraIsActive = cobraIsActive;
    return this;
  }

   /**
   * Get cobraIsActive
   * @return cobraIsActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCobraIsActive() {
    return cobraIsActive;
  }


  public void setCobraIsActive(Boolean cobraIsActive) {
    
    
    
    this.cobraIsActive = cobraIsActive;
  }


  public Contact cobraReason(String cobraReason) {
    
    
    
    
    this.cobraReason = cobraReason;
    return this;
  }

   /**
   * Get cobraReason
   * @return cobraReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCobraReason() {
    return cobraReason;
  }


  public void setCobraReason(String cobraReason) {
    
    
    
    this.cobraReason = cobraReason;
  }


  public Contact cobraStatus(String cobraStatus) {
    
    
    
    
    this.cobraStatus = cobraStatus;
    return this;
  }

   /**
   * Get cobraStatus
   * @return cobraStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCobraStatus() {
    return cobraStatus;
  }


  public void setCobraStatus(String cobraStatus) {
    
    
    
    this.cobraStatus = cobraStatus;
  }


  public Contact cobraStatusDate(OffsetDateTime cobraStatusDate) {
    
    
    
    
    this.cobraStatusDate = cobraStatusDate;
    return this;
  }

   /**
   * Get cobraStatusDate
   * @return cobraStatusDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCobraStatusDate() {
    return cobraStatusDate;
  }


  public void setCobraStatusDate(OffsetDateTime cobraStatusDate) {
    
    
    
    this.cobraStatusDate = cobraStatusDate;
  }


  public Contact dateOfBirth(OffsetDateTime dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(OffsetDateTime dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public Contact dateOfCOBRAEvent(OffsetDateTime dateOfCOBRAEvent) {
    
    
    
    
    this.dateOfCOBRAEvent = dateOfCOBRAEvent;
    return this;
  }

   /**
   * Get dateOfCOBRAEvent
   * @return dateOfCOBRAEvent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfCOBRAEvent() {
    return dateOfCOBRAEvent;
  }


  public void setDateOfCOBRAEvent(OffsetDateTime dateOfCOBRAEvent) {
    
    
    
    this.dateOfCOBRAEvent = dateOfCOBRAEvent;
  }


  public Contact dateOfCOBRALetter(OffsetDateTime dateOfCOBRALetter) {
    
    
    
    
    this.dateOfCOBRALetter = dateOfCOBRALetter;
    return this;
  }

   /**
   * Get dateOfCOBRALetter
   * @return dateOfCOBRALetter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfCOBRALetter() {
    return dateOfCOBRALetter;
  }


  public void setDateOfCOBRALetter(OffsetDateTime dateOfCOBRALetter) {
    
    
    
    this.dateOfCOBRALetter = dateOfCOBRALetter;
  }


  public Contact employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public Contact gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public Contact importId(String importId) {
    
    
    
    
    this.importId = importId;
    return this;
  }

   /**
   * Get importId
   * @return importId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getImportId() {
    return importId;
  }


  public void setImportId(String importId) {
    
    
    
    this.importId = importId;
  }


  public Contact isBeneficiary(Boolean isBeneficiary) {
    
    
    
    
    this.isBeneficiary = isBeneficiary;
    return this;
  }

   /**
   * Get isBeneficiary
   * @return isBeneficiary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsBeneficiary() {
    return isBeneficiary;
  }


  public void setIsBeneficiary(Boolean isBeneficiary) {
    
    
    
    this.isBeneficiary = isBeneficiary;
  }


  public Contact isDependent(Boolean isDependent) {
    
    
    
    
    this.isDependent = isDependent;
    return this;
  }

   /**
   * Get isDependent
   * @return isDependent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDependent() {
    return isDependent;
  }


  public void setIsDependent(Boolean isDependent) {
    
    
    
    this.isDependent = isDependent;
  }


  public Contact isDisabled(Boolean isDisabled) {
    
    
    
    
    this.isDisabled = isDisabled;
    return this;
  }

   /**
   * Get isDisabled
   * @return isDisabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDisabled() {
    return isDisabled;
  }


  public void setIsDisabled(Boolean isDisabled) {
    
    
    
    this.isDisabled = isDisabled;
  }


  public Contact isEmergencyContact(Boolean isEmergencyContact) {
    
    
    
    
    this.isEmergencyContact = isEmergencyContact;
    return this;
  }

   /**
   * Get isEmergencyContact
   * @return isEmergencyContact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsEmergencyContact() {
    return isEmergencyContact;
  }


  public void setIsEmergencyContact(Boolean isEmergencyContact) {
    
    
    
    this.isEmergencyContact = isEmergencyContact;
  }


  public Contact isSmoker(Boolean isSmoker) {
    
    
    
    
    this.isSmoker = isSmoker;
    return this;
  }

   /**
   * Get isSmoker
   * @return isSmoker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSmoker() {
    return isSmoker;
  }


  public void setIsSmoker(Boolean isSmoker) {
    
    
    
    this.isSmoker = isSmoker;
  }


  public Contact isStudent(Boolean isStudent) {
    
    
    
    
    this.isStudent = isStudent;
    return this;
  }

   /**
   * Get isStudent
   * @return isStudent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsStudent() {
    return isStudent;
  }


  public void setIsStudent(Boolean isStudent) {
    
    
    
    this.isStudent = isStudent;
  }


  public Contact marriageDate(OffsetDateTime marriageDate) {
    
    
    
    
    this.marriageDate = marriageDate;
    return this;
  }

   /**
   * Get marriageDate
   * @return marriageDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getMarriageDate() {
    return marriageDate;
  }


  public void setMarriageDate(OffsetDateTime marriageDate) {
    
    
    
    this.marriageDate = marriageDate;
  }


  public Contact firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public Contact formerName(String formerName) {
    
    
    
    
    this.formerName = formerName;
    return this;
  }

   /**
   * Get formerName
   * @return formerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFormerName() {
    return formerName;
  }


  public void setFormerName(String formerName) {
    
    
    
    this.formerName = formerName;
  }


  public Contact lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public Contact middleName(String middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    
    
    
    this.middleName = middleName;
  }


  public Contact nameSuffix(String nameSuffix) {
    
    
    
    
    this.nameSuffix = nameSuffix;
    return this;
  }

   /**
   * Get nameSuffix
   * @return nameSuffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameSuffix() {
    return nameSuffix;
  }


  public void setNameSuffix(String nameSuffix) {
    
    
    
    this.nameSuffix = nameSuffix;
  }


  public Contact occupation(String occupation) {
    
    
    
    
    this.occupation = occupation;
    return this;
  }

   /**
   * Get occupation
   * @return occupation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOccupation() {
    return occupation;
  }


  public void setOccupation(String occupation) {
    
    
    
    this.occupation = occupation;
  }


  public Contact otherInsurance(String otherInsurance) {
    
    
    
    
    this.otherInsurance = otherInsurance;
    return this;
  }

   /**
   * Get otherInsurance
   * @return otherInsurance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOtherInsurance() {
    return otherInsurance;
  }


  public void setOtherInsurance(String otherInsurance) {
    
    
    
    this.otherInsurance = otherInsurance;
  }


  public Contact homePhoneCountry(String homePhoneCountry) {
    
    
    
    
    this.homePhoneCountry = homePhoneCountry;
    return this;
  }

   /**
   * Get homePhoneCountry
   * @return homePhoneCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomePhoneCountry() {
    return homePhoneCountry;
  }


  public void setHomePhoneCountry(String homePhoneCountry) {
    
    
    
    this.homePhoneCountry = homePhoneCountry;
  }


  public Contact homePhoneNumber(String homePhoneNumber) {
    
    
    
    
    this.homePhoneNumber = homePhoneNumber;
    return this;
  }

   /**
   * Get homePhoneNumber
   * @return homePhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomePhoneNumber() {
    return homePhoneNumber;
  }


  public void setHomePhoneNumber(String homePhoneNumber) {
    
    
    
    this.homePhoneNumber = homePhoneNumber;
  }


  public Contact otherPhoneNumber(String otherPhoneNumber) {
    
    
    
    
    this.otherPhoneNumber = otherPhoneNumber;
    return this;
  }

   /**
   * Get otherPhoneNumber
   * @return otherPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOtherPhoneNumber() {
    return otherPhoneNumber;
  }


  public void setOtherPhoneNumber(String otherPhoneNumber) {
    
    
    
    this.otherPhoneNumber = otherPhoneNumber;
  }


  public Contact otherPhoneType(String otherPhoneType) {
    
    
    
    
    this.otherPhoneType = otherPhoneType;
    return this;
  }

   /**
   * Get otherPhoneType
   * @return otherPhoneType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOtherPhoneType() {
    return otherPhoneType;
  }


  public void setOtherPhoneType(String otherPhoneType) {
    
    
    
    this.otherPhoneType = otherPhoneType;
  }


  public Contact preferredPhoneNumber(String preferredPhoneNumber) {
    
    
    
    
    this.preferredPhoneNumber = preferredPhoneNumber;
    return this;
  }

   /**
   * Get preferredPhoneNumber
   * @return preferredPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPreferredPhoneNumber() {
    return preferredPhoneNumber;
  }


  public void setPreferredPhoneNumber(String preferredPhoneNumber) {
    
    
    
    this.preferredPhoneNumber = preferredPhoneNumber;
  }


  public Contact relationshipCode(String relationshipCode) {
    
    
    
    
    this.relationshipCode = relationshipCode;
    return this;
  }

   /**
   * Get relationshipCode
   * @return relationshipCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRelationshipCode() {
    return relationshipCode;
  }


  public void setRelationshipCode(String relationshipCode) {
    
    
    
    this.relationshipCode = relationshipCode;
  }


  public Contact relationshipDescription(String relationshipDescription) {
    
    
    
    
    this.relationshipDescription = relationshipDescription;
    return this;
  }

   /**
   * Get relationshipDescription
   * @return relationshipDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRelationshipDescription() {
    return relationshipDescription;
  }


  public void setRelationshipDescription(String relationshipDescription) {
    
    
    
    this.relationshipDescription = relationshipDescription;
  }


  public Contact ssn(String ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSsn() {
    return ssn;
  }


  public void setSsn(String ssn) {
    
    
    
    this.ssn = ssn;
  }


  public Contact contactId(String contactId) {
    
    
    
    
    this.contactId = contactId;
    return this;
  }

   /**
   * Get contactId
   * @return contactId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContactId() {
    return contactId;
  }


  public void setContactId(String contactId) {
    
    
    
    this.contactId = contactId;
  }


  public Contact userDefinedField01(String userDefinedField01) {
    
    
    
    
    this.userDefinedField01 = userDefinedField01;
    return this;
  }

   /**
   * Get userDefinedField01
   * @return userDefinedField01
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDefinedField01() {
    return userDefinedField01;
  }


  public void setUserDefinedField01(String userDefinedField01) {
    
    
    
    this.userDefinedField01 = userDefinedField01;
  }


  public Contact workPhoneExtension(String workPhoneExtension) {
    
    
    
    
    this.workPhoneExtension = workPhoneExtension;
    return this;
  }

   /**
   * Get workPhoneExtension
   * @return workPhoneExtension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhoneExtension() {
    return workPhoneExtension;
  }


  public void setWorkPhoneExtension(String workPhoneExtension) {
    
    
    
    this.workPhoneExtension = workPhoneExtension;
  }


  public Contact workPhoneNumber(String workPhoneNumber) {
    
    
    
    
    this.workPhoneNumber = workPhoneNumber;
    return this;
  }

   /**
   * Get workPhoneNumber
   * @return workPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhoneNumber() {
    return workPhoneNumber;
  }


  public void setWorkPhoneNumber(String workPhoneNumber) {
    
    
    
    this.workPhoneNumber = workPhoneNumber;
  }


  public Contact cobraNotes(String cobraNotes) {
    
    
    
    
    this.cobraNotes = cobraNotes;
    return this;
  }

   /**
   * Get cobraNotes
   * @return cobraNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCobraNotes() {
    return cobraNotes;
  }


  public void setCobraNotes(String cobraNotes) {
    
    
    
    this.cobraNotes = cobraNotes;
  }


  public Contact notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public Contact isActive(Boolean isActive) {
    
    
    
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    
    
    
    this.isActive = isActive;
  }


  public Contact statusAsOfDate(OffsetDateTime statusAsOfDate) {
    
    
    
    
    this.statusAsOfDate = statusAsOfDate;
    return this;
  }

   /**
   * Get statusAsOfDate
   * @return statusAsOfDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStatusAsOfDate() {
    return statusAsOfDate;
  }


  public void setStatusAsOfDate(OffsetDateTime statusAsOfDate) {
    
    
    
    this.statusAsOfDate = statusAsOfDate;
  }


  public Contact deathDate(OffsetDateTime deathDate) {
    
    
    
    
    this.deathDate = deathDate;
    return this;
  }

   /**
   * Get deathDate
   * @return deathDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeathDate() {
    return deathDate;
  }


  public void setDeathDate(OffsetDateTime deathDate) {
    
    
    
    this.deathDate = deathDate;
  }


  public Contact divorceDate(OffsetDateTime divorceDate) {
    
    
    
    
    this.divorceDate = divorceDate;
    return this;
  }

   /**
   * Get divorceDate
   * @return divorceDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDivorceDate() {
    return divorceDate;
  }


  public void setDivorceDate(OffsetDateTime divorceDate) {
    
    
    
    this.divorceDate = divorceDate;
  }


  public Contact emailAddress(String emailAddress) {
    
    
    
    
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Get emailAddress
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmailAddress() {
    return emailAddress;
  }


  public void setEmailAddress(String emailAddress) {
    
    
    
    this.emailAddress = emailAddress;
  }


  public Contact otherPhoneCountryCode(String otherPhoneCountryCode) {
    
    
    
    
    this.otherPhoneCountryCode = otherPhoneCountryCode;
    return this;
  }

   /**
   * Get otherPhoneCountryCode
   * @return otherPhoneCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOtherPhoneCountryCode() {
    return otherPhoneCountryCode;
  }


  public void setOtherPhoneCountryCode(String otherPhoneCountryCode) {
    
    
    
    this.otherPhoneCountryCode = otherPhoneCountryCode;
  }


  public Contact healthCareId(String healthCareId) {
    
    
    
    
    this.healthCareId = healthCareId;
    return this;
  }

   /**
   * Get healthCareId
   * @return healthCareId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthCareId() {
    return healthCareId;
  }


  public void setHealthCareId(String healthCareId) {
    
    
    
    this.healthCareId = healthCareId;
  }


  public Contact nationalId(String nationalId) {
    
    
    
    
    this.nationalId = nationalId;
    return this;
  }

   /**
   * Get nationalId
   * @return nationalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNationalId() {
    return nationalId;
  }


  public void setNationalId(String nationalId) {
    
    
    
    this.nationalId = nationalId;
  }


  public Contact nationalIdExpirationDate(OffsetDateTime nationalIdExpirationDate) {
    
    
    
    
    this.nationalIdExpirationDate = nationalIdExpirationDate;
    return this;
  }

   /**
   * Get nationalIdExpirationDate
   * @return nationalIdExpirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getNationalIdExpirationDate() {
    return nationalIdExpirationDate;
  }


  public void setNationalIdExpirationDate(OffsetDateTime nationalIdExpirationDate) {
    
    
    
    this.nationalIdExpirationDate = nationalIdExpirationDate;
  }


  public Contact personID(UUID personID) {
    
    
    
    
    this.personID = personID;
    return this;
  }

   /**
   * Get personID
   * @return personID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getPersonID() {
    return personID;
  }


  public void setPersonID(UUID personID) {
    
    
    
    this.personID = personID;
  }


  public Contact addressID(UUID addressID) {
    
    
    
    
    this.addressID = addressID;
    return this;
  }

   /**
   * Get addressID
   * @return addressID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getAddressID() {
    return addressID;
  }


  public void setAddressID(UUID addressID) {
    
    
    
    this.addressID = addressID;
  }


  public Contact workPhoneId(UUID workPhoneId) {
    
    
    
    
    this.workPhoneId = workPhoneId;
    return this;
  }

   /**
   * Get workPhoneId
   * @return workPhoneId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getWorkPhoneId() {
    return workPhoneId;
  }


  public void setWorkPhoneId(UUID workPhoneId) {
    
    
    
    this.workPhoneId = workPhoneId;
  }


  public Contact homePhoneId(UUID homePhoneId) {
    
    
    
    
    this.homePhoneId = homePhoneId;
    return this;
  }

   /**
   * Get homePhoneId
   * @return homePhoneId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getHomePhoneId() {
    return homePhoneId;
  }


  public void setHomePhoneId(UUID homePhoneId) {
    
    
    
    this.homePhoneId = homePhoneId;
  }


  public Contact otherPhoneId(UUID otherPhoneId) {
    
    
    
    
    this.otherPhoneId = otherPhoneId;
    return this;
  }

   /**
   * Get otherPhoneId
   * @return otherPhoneId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public UUID getOtherPhoneId() {
    return otherPhoneId;
  }


  public void setOtherPhoneId(UUID otherPhoneId) {
    
    
    
    this.otherPhoneId = otherPhoneId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Contact instance itself
   */
  public Contact putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Contact contact = (Contact) o;
    return Objects.equals(this.city, contact.city) &&
        Objects.equals(this.countryCode, contact.countryCode) &&
        Objects.equals(this.county, contact.county) &&
        Objects.equals(this.addressIsDifferentFromEmployee, contact.addressIsDifferentFromEmployee) &&
        Objects.equals(this.addressLine1, contact.addressLine1) &&
        Objects.equals(this.addressLine2, contact.addressLine2) &&
        Objects.equals(this.state, contact.state) &&
        Objects.equals(this.zipCode, contact.zipCode) &&
        Objects.equals(this.cobraExport, contact.cobraExport) &&
        Objects.equals(this.cobraIsActive, contact.cobraIsActive) &&
        Objects.equals(this.cobraReason, contact.cobraReason) &&
        Objects.equals(this.cobraStatus, contact.cobraStatus) &&
        Objects.equals(this.cobraStatusDate, contact.cobraStatusDate) &&
        Objects.equals(this.dateOfBirth, contact.dateOfBirth) &&
        Objects.equals(this.dateOfCOBRAEvent, contact.dateOfCOBRAEvent) &&
        Objects.equals(this.dateOfCOBRALetter, contact.dateOfCOBRALetter) &&
        Objects.equals(this.employeeId, contact.employeeId) &&
        Objects.equals(this.gender, contact.gender) &&
        Objects.equals(this.importId, contact.importId) &&
        Objects.equals(this.isBeneficiary, contact.isBeneficiary) &&
        Objects.equals(this.isDependent, contact.isDependent) &&
        Objects.equals(this.isDisabled, contact.isDisabled) &&
        Objects.equals(this.isEmergencyContact, contact.isEmergencyContact) &&
        Objects.equals(this.isSmoker, contact.isSmoker) &&
        Objects.equals(this.isStudent, contact.isStudent) &&
        Objects.equals(this.marriageDate, contact.marriageDate) &&
        Objects.equals(this.firstName, contact.firstName) &&
        Objects.equals(this.formerName, contact.formerName) &&
        Objects.equals(this.lastName, contact.lastName) &&
        Objects.equals(this.middleName, contact.middleName) &&
        Objects.equals(this.nameSuffix, contact.nameSuffix) &&
        Objects.equals(this.occupation, contact.occupation) &&
        Objects.equals(this.otherInsurance, contact.otherInsurance) &&
        Objects.equals(this.homePhoneCountry, contact.homePhoneCountry) &&
        Objects.equals(this.homePhoneNumber, contact.homePhoneNumber) &&
        Objects.equals(this.otherPhoneNumber, contact.otherPhoneNumber) &&
        Objects.equals(this.otherPhoneType, contact.otherPhoneType) &&
        Objects.equals(this.preferredPhoneNumber, contact.preferredPhoneNumber) &&
        Objects.equals(this.relationshipCode, contact.relationshipCode) &&
        Objects.equals(this.relationshipDescription, contact.relationshipDescription) &&
        Objects.equals(this.ssn, contact.ssn) &&
        Objects.equals(this.contactId, contact.contactId) &&
        Objects.equals(this.userDefinedField01, contact.userDefinedField01) &&
        Objects.equals(this.workPhoneExtension, contact.workPhoneExtension) &&
        Objects.equals(this.workPhoneNumber, contact.workPhoneNumber) &&
        Objects.equals(this.cobraNotes, contact.cobraNotes) &&
        Objects.equals(this.notes, contact.notes) &&
        Objects.equals(this.isActive, contact.isActive) &&
        Objects.equals(this.statusAsOfDate, contact.statusAsOfDate) &&
        Objects.equals(this.deathDate, contact.deathDate) &&
        Objects.equals(this.divorceDate, contact.divorceDate) &&
        Objects.equals(this.emailAddress, contact.emailAddress) &&
        Objects.equals(this.otherPhoneCountryCode, contact.otherPhoneCountryCode) &&
        Objects.equals(this.healthCareId, contact.healthCareId) &&
        Objects.equals(this.nationalId, contact.nationalId) &&
        Objects.equals(this.nationalIdExpirationDate, contact.nationalIdExpirationDate) &&
        Objects.equals(this.personID, contact.personID) &&
        Objects.equals(this.addressID, contact.addressID) &&
        Objects.equals(this.workPhoneId, contact.workPhoneId) &&
        Objects.equals(this.homePhoneId, contact.homePhoneId) &&
        Objects.equals(this.otherPhoneId, contact.otherPhoneId)&&
        Objects.equals(this.additionalProperties, contact.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, countryCode, county, addressIsDifferentFromEmployee, addressLine1, addressLine2, state, zipCode, cobraExport, cobraIsActive, cobraReason, cobraStatus, cobraStatusDate, dateOfBirth, dateOfCOBRAEvent, dateOfCOBRALetter, employeeId, gender, importId, isBeneficiary, isDependent, isDisabled, isEmergencyContact, isSmoker, isStudent, marriageDate, firstName, formerName, lastName, middleName, nameSuffix, occupation, otherInsurance, homePhoneCountry, homePhoneNumber, otherPhoneNumber, otherPhoneType, preferredPhoneNumber, relationshipCode, relationshipDescription, ssn, contactId, userDefinedField01, workPhoneExtension, workPhoneNumber, cobraNotes, notes, isActive, statusAsOfDate, deathDate, divorceDate, emailAddress, otherPhoneCountryCode, healthCareId, nationalId, nationalIdExpirationDate, personID, addressID, workPhoneId, homePhoneId, otherPhoneId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Contact {\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("    addressIsDifferentFromEmployee: ").append(toIndentedString(addressIsDifferentFromEmployee)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("    cobraExport: ").append(toIndentedString(cobraExport)).append("\n");
    sb.append("    cobraIsActive: ").append(toIndentedString(cobraIsActive)).append("\n");
    sb.append("    cobraReason: ").append(toIndentedString(cobraReason)).append("\n");
    sb.append("    cobraStatus: ").append(toIndentedString(cobraStatus)).append("\n");
    sb.append("    cobraStatusDate: ").append(toIndentedString(cobraStatusDate)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    dateOfCOBRAEvent: ").append(toIndentedString(dateOfCOBRAEvent)).append("\n");
    sb.append("    dateOfCOBRALetter: ").append(toIndentedString(dateOfCOBRALetter)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    importId: ").append(toIndentedString(importId)).append("\n");
    sb.append("    isBeneficiary: ").append(toIndentedString(isBeneficiary)).append("\n");
    sb.append("    isDependent: ").append(toIndentedString(isDependent)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    isEmergencyContact: ").append(toIndentedString(isEmergencyContact)).append("\n");
    sb.append("    isSmoker: ").append(toIndentedString(isSmoker)).append("\n");
    sb.append("    isStudent: ").append(toIndentedString(isStudent)).append("\n");
    sb.append("    marriageDate: ").append(toIndentedString(marriageDate)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    formerName: ").append(toIndentedString(formerName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    nameSuffix: ").append(toIndentedString(nameSuffix)).append("\n");
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    otherInsurance: ").append(toIndentedString(otherInsurance)).append("\n");
    sb.append("    homePhoneCountry: ").append(toIndentedString(homePhoneCountry)).append("\n");
    sb.append("    homePhoneNumber: ").append(toIndentedString(homePhoneNumber)).append("\n");
    sb.append("    otherPhoneNumber: ").append(toIndentedString(otherPhoneNumber)).append("\n");
    sb.append("    otherPhoneType: ").append(toIndentedString(otherPhoneType)).append("\n");
    sb.append("    preferredPhoneNumber: ").append(toIndentedString(preferredPhoneNumber)).append("\n");
    sb.append("    relationshipCode: ").append(toIndentedString(relationshipCode)).append("\n");
    sb.append("    relationshipDescription: ").append(toIndentedString(relationshipDescription)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    userDefinedField01: ").append(toIndentedString(userDefinedField01)).append("\n");
    sb.append("    workPhoneExtension: ").append(toIndentedString(workPhoneExtension)).append("\n");
    sb.append("    workPhoneNumber: ").append(toIndentedString(workPhoneNumber)).append("\n");
    sb.append("    cobraNotes: ").append(toIndentedString(cobraNotes)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    statusAsOfDate: ").append(toIndentedString(statusAsOfDate)).append("\n");
    sb.append("    deathDate: ").append(toIndentedString(deathDate)).append("\n");
    sb.append("    divorceDate: ").append(toIndentedString(divorceDate)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    otherPhoneCountryCode: ").append(toIndentedString(otherPhoneCountryCode)).append("\n");
    sb.append("    healthCareId: ").append(toIndentedString(healthCareId)).append("\n");
    sb.append("    nationalId: ").append(toIndentedString(nationalId)).append("\n");
    sb.append("    nationalIdExpirationDate: ").append(toIndentedString(nationalIdExpirationDate)).append("\n");
    sb.append("    personID: ").append(toIndentedString(personID)).append("\n");
    sb.append("    addressID: ").append(toIndentedString(addressID)).append("\n");
    sb.append("    workPhoneId: ").append(toIndentedString(workPhoneId)).append("\n");
    sb.append("    homePhoneId: ").append(toIndentedString(homePhoneId)).append("\n");
    sb.append("    otherPhoneId: ").append(toIndentedString(otherPhoneId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("city");
    openapiFields.add("countryCode");
    openapiFields.add("county");
    openapiFields.add("addressIsDifferentFromEmployee");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("state");
    openapiFields.add("zipCode");
    openapiFields.add("cobraExport");
    openapiFields.add("cobraIsActive");
    openapiFields.add("cobraReason");
    openapiFields.add("cobraStatus");
    openapiFields.add("cobraStatusDate");
    openapiFields.add("dateOfBirth");
    openapiFields.add("dateOfCOBRAEvent");
    openapiFields.add("dateOfCOBRALetter");
    openapiFields.add("employeeId");
    openapiFields.add("gender");
    openapiFields.add("importId");
    openapiFields.add("isBeneficiary");
    openapiFields.add("isDependent");
    openapiFields.add("isDisabled");
    openapiFields.add("isEmergencyContact");
    openapiFields.add("isSmoker");
    openapiFields.add("isStudent");
    openapiFields.add("marriageDate");
    openapiFields.add("firstName");
    openapiFields.add("formerName");
    openapiFields.add("lastName");
    openapiFields.add("middleName");
    openapiFields.add("nameSuffix");
    openapiFields.add("occupation");
    openapiFields.add("otherInsurance");
    openapiFields.add("homePhoneCountry");
    openapiFields.add("homePhoneNumber");
    openapiFields.add("otherPhoneNumber");
    openapiFields.add("otherPhoneType");
    openapiFields.add("preferredPhoneNumber");
    openapiFields.add("relationshipCode");
    openapiFields.add("relationshipDescription");
    openapiFields.add("ssn");
    openapiFields.add("contactId");
    openapiFields.add("userDefinedField01");
    openapiFields.add("workPhoneExtension");
    openapiFields.add("workPhoneNumber");
    openapiFields.add("cobraNotes");
    openapiFields.add("notes");
    openapiFields.add("isActive");
    openapiFields.add("statusAsOfDate");
    openapiFields.add("deathDate");
    openapiFields.add("divorceDate");
    openapiFields.add("emailAddress");
    openapiFields.add("otherPhoneCountryCode");
    openapiFields.add("healthCareId");
    openapiFields.add("nationalId");
    openapiFields.add("nationalIdExpirationDate");
    openapiFields.add("personID");
    openapiFields.add("addressID");
    openapiFields.add("workPhoneId");
    openapiFields.add("homePhoneId");
    openapiFields.add("otherPhoneId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Contact
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Contact.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Contact is not found in the empty JSON string", Contact.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("county") != null && !jsonObj.get("county").isJsonNull()) && !jsonObj.get("county").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `county` to be a primitive type in the JSON string but got `%s`", jsonObj.get("county").toString()));
      }
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("zipCode") != null && !jsonObj.get("zipCode").isJsonNull()) && !jsonObj.get("zipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zipCode").toString()));
      }
      if ((jsonObj.get("cobraReason") != null && !jsonObj.get("cobraReason").isJsonNull()) && !jsonObj.get("cobraReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cobraReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cobraReason").toString()));
      }
      if ((jsonObj.get("cobraStatus") != null && !jsonObj.get("cobraStatus").isJsonNull()) && !jsonObj.get("cobraStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cobraStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cobraStatus").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("importId") != null && !jsonObj.get("importId").isJsonNull()) && !jsonObj.get("importId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `importId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("importId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("formerName") != null && !jsonObj.get("formerName").isJsonNull()) && !jsonObj.get("formerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formerName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if ((jsonObj.get("nameSuffix") != null && !jsonObj.get("nameSuffix").isJsonNull()) && !jsonObj.get("nameSuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nameSuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nameSuffix").toString()));
      }
      if ((jsonObj.get("occupation") != null && !jsonObj.get("occupation").isJsonNull()) && !jsonObj.get("occupation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `occupation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("occupation").toString()));
      }
      if ((jsonObj.get("otherInsurance") != null && !jsonObj.get("otherInsurance").isJsonNull()) && !jsonObj.get("otherInsurance").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherInsurance` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherInsurance").toString()));
      }
      if ((jsonObj.get("homePhoneCountry") != null && !jsonObj.get("homePhoneCountry").isJsonNull()) && !jsonObj.get("homePhoneCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhoneCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhoneCountry").toString()));
      }
      if ((jsonObj.get("homePhoneNumber") != null && !jsonObj.get("homePhoneNumber").isJsonNull()) && !jsonObj.get("homePhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhoneNumber").toString()));
      }
      if ((jsonObj.get("otherPhoneNumber") != null && !jsonObj.get("otherPhoneNumber").isJsonNull()) && !jsonObj.get("otherPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherPhoneNumber").toString()));
      }
      if ((jsonObj.get("otherPhoneType") != null && !jsonObj.get("otherPhoneType").isJsonNull()) && !jsonObj.get("otherPhoneType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherPhoneType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherPhoneType").toString()));
      }
      if ((jsonObj.get("preferredPhoneNumber") != null && !jsonObj.get("preferredPhoneNumber").isJsonNull()) && !jsonObj.get("preferredPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredPhoneNumber").toString()));
      }
      if ((jsonObj.get("relationshipCode") != null && !jsonObj.get("relationshipCode").isJsonNull()) && !jsonObj.get("relationshipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relationshipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relationshipCode").toString()));
      }
      if ((jsonObj.get("relationshipDescription") != null && !jsonObj.get("relationshipDescription").isJsonNull()) && !jsonObj.get("relationshipDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `relationshipDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("relationshipDescription").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("contactId") != null && !jsonObj.get("contactId").isJsonNull()) && !jsonObj.get("contactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactId").toString()));
      }
      if ((jsonObj.get("userDefinedField01") != null && !jsonObj.get("userDefinedField01").isJsonNull()) && !jsonObj.get("userDefinedField01").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDefinedField01` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDefinedField01").toString()));
      }
      if ((jsonObj.get("workPhoneExtension") != null && !jsonObj.get("workPhoneExtension").isJsonNull()) && !jsonObj.get("workPhoneExtension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneExtension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneExtension").toString()));
      }
      if ((jsonObj.get("workPhoneNumber") != null && !jsonObj.get("workPhoneNumber").isJsonNull()) && !jsonObj.get("workPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneNumber").toString()));
      }
      if ((jsonObj.get("cobraNotes") != null && !jsonObj.get("cobraNotes").isJsonNull()) && !jsonObj.get("cobraNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cobraNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cobraNotes").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("emailAddress") != null && !jsonObj.get("emailAddress").isJsonNull()) && !jsonObj.get("emailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailAddress").toString()));
      }
      if ((jsonObj.get("otherPhoneCountryCode") != null && !jsonObj.get("otherPhoneCountryCode").isJsonNull()) && !jsonObj.get("otherPhoneCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherPhoneCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherPhoneCountryCode").toString()));
      }
      if ((jsonObj.get("healthCareId") != null && !jsonObj.get("healthCareId").isJsonNull()) && !jsonObj.get("healthCareId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthCareId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthCareId").toString()));
      }
      if ((jsonObj.get("nationalId") != null && !jsonObj.get("nationalId").isJsonNull()) && !jsonObj.get("nationalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationalId").toString()));
      }
      if ((jsonObj.get("personID") != null && !jsonObj.get("personID").isJsonNull()) && !jsonObj.get("personID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personID").toString()));
      }
      if ((jsonObj.get("addressID") != null && !jsonObj.get("addressID").isJsonNull()) && !jsonObj.get("addressID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressID").toString()));
      }
      if ((jsonObj.get("workPhoneId") != null && !jsonObj.get("workPhoneId").isJsonNull()) && !jsonObj.get("workPhoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneId").toString()));
      }
      if ((jsonObj.get("homePhoneId") != null && !jsonObj.get("homePhoneId").isJsonNull()) && !jsonObj.get("homePhoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhoneId").toString()));
      }
      if ((jsonObj.get("otherPhoneId") != null && !jsonObj.get("otherPhoneId").isJsonNull()) && !jsonObj.get("otherPhoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherPhoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherPhoneId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Contact.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Contact' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Contact> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Contact.class));

       return (TypeAdapter<T>) new TypeAdapter<Contact>() {
           @Override
           public void write(JsonWriter out, Contact value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Contact read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Contact instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Contact given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Contact
  * @throws IOException if the JSON string is invalid with respect to Contact
  */
  public static Contact fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Contact.class);
  }

 /**
  * Convert an instance of Contact to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

