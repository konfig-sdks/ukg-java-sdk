/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * OrgLevels
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class OrgLevels {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_BUDGET_GROUP = "budgetGroup";
  @SerializedName(SERIALIZED_NAME_BUDGET_GROUP)
  private String budgetGroup;

  public static final String SERIALIZED_NAME_CODE = "code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CURRENT_YEAR_BUDGET_F_T_E = "currentYearBudgetFTE";
  @SerializedName(SERIALIZED_NAME_CURRENT_YEAR_BUDGET_F_T_E)
  private Double currentYearBudgetFTE;

  public static final String SERIALIZED_NAME_CURRENT_YEAR_BUDGET_SALARY = "currentYearBudgetSalary";
  @SerializedName(SERIALIZED_NAME_CURRENT_YEAR_BUDGET_SALARY)
  private Double currentYearBudgetSalary;

  public static final String SERIALIZED_NAME_GL_SEGMENT = "glSegment";
  @SerializedName(SERIALIZED_NAME_GL_SEGMENT)
  private String glSegment;

  public static final String SERIALIZED_NAME_LAST_YEAR_BUDGET_F_T_E = "lastYearBudgetFTE";
  @SerializedName(SERIALIZED_NAME_LAST_YEAR_BUDGET_F_T_E)
  private Double lastYearBudgetFTE;

  public static final String SERIALIZED_NAME_LAST_YEAR_BUDGET_SALARY = "lastYearBudgetSalary";
  @SerializedName(SERIALIZED_NAME_LAST_YEAR_BUDGET_SALARY)
  private Double lastYearBudgetSalary;

  public static final String SERIALIZED_NAME_LEVEL = "level";
  @SerializedName(SERIALIZED_NAME_LEVEL)
  private Double level;

  public static final String SERIALIZED_NAME_LEVEL_DESCRIPTION = "levelDescription";
  @SerializedName(SERIALIZED_NAME_LEVEL_DESCRIPTION)
  private String levelDescription;

  public static final String SERIALIZED_NAME_REPORTING_CATEGORY = "reportingCategory";
  @SerializedName(SERIALIZED_NAME_REPORTING_CATEGORY)
  private String reportingCategory;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public OrgLevels() {
  }

  public OrgLevels description(String description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Organization Level Description.
   * @return description
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Organization Level Description.")

  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    
    
    
    this.description = description;
  }


  public OrgLevels budgetGroup(String budgetGroup) {
    
    
    
    
    this.budgetGroup = budgetGroup;
    return this;
  }

   /**
   * Organizational budget group.
   * @return budgetGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Organizational budget group.")

  public String getBudgetGroup() {
    return budgetGroup;
  }


  public void setBudgetGroup(String budgetGroup) {
    
    
    
    this.budgetGroup = budgetGroup;
  }


  public OrgLevels code(String code) {
    
    
    
    
    this.code = code;
    return this;
  }

   /**
   * Organization Code, one half of the unique identifier.
   * @return code
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Organization Code, one half of the unique identifier.")

  public String getCode() {
    return code;
  }


  public void setCode(String code) {
    
    
    
    this.code = code;
  }


  public OrgLevels currentYearBudgetFTE(Double currentYearBudgetFTE) {
    
    
    
    
    this.currentYearBudgetFTE = currentYearBudgetFTE;
    return this;
  }

   /**
   * Current year to date budget for full time employee.
   * @return currentYearBudgetFTE
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current year to date budget for full time employee.")

  public Double getCurrentYearBudgetFTE() {
    return currentYearBudgetFTE;
  }


  public void setCurrentYearBudgetFTE(Double currentYearBudgetFTE) {
    
    
    
    this.currentYearBudgetFTE = currentYearBudgetFTE;
  }


  public OrgLevels currentYearBudgetSalary(Double currentYearBudgetSalary) {
    
    
    
    
    this.currentYearBudgetSalary = currentYearBudgetSalary;
    return this;
  }

   /**
   * Current year to date budget for salary.
   * @return currentYearBudgetSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Current year to date budget for salary.")

  public Double getCurrentYearBudgetSalary() {
    return currentYearBudgetSalary;
  }


  public void setCurrentYearBudgetSalary(Double currentYearBudgetSalary) {
    
    
    
    this.currentYearBudgetSalary = currentYearBudgetSalary;
  }


  public OrgLevels glSegment(String glSegment) {
    
    
    if (glSegment != null && glSegment.length() < 1) {
      throw new IllegalArgumentException("Invalid value for glSegment. Length must be greater than or equal to 1.");
    }
    
    this.glSegment = glSegment;
    return this;
  }

   /**
   * General Ledger Segment. Alpha-numeric and special characters allowed.
   * @return glSegment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "General Ledger Segment. Alpha-numeric and special characters allowed.")

  public String getGlSegment() {
    return glSegment;
  }


  public void setGlSegment(String glSegment) {
    
    
    if (glSegment != null && glSegment.length() < 1) {
      throw new IllegalArgumentException("Invalid value for glSegment. Length must be greater than or equal to 1.");
    }
    this.glSegment = glSegment;
  }


  public OrgLevels lastYearBudgetFTE(Double lastYearBudgetFTE) {
    
    
    
    
    this.lastYearBudgetFTE = lastYearBudgetFTE;
    return this;
  }

  public OrgLevels lastYearBudgetFTE(Integer lastYearBudgetFTE) {
    
    
    
    
    this.lastYearBudgetFTE = lastYearBudgetFTE.doubleValue();
    return this;
  }

   /**
   * Last year Budget for full time employee.
   * @return lastYearBudgetFTE
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last year Budget for full time employee.")

  public Double getLastYearBudgetFTE() {
    return lastYearBudgetFTE;
  }


  public void setLastYearBudgetFTE(Double lastYearBudgetFTE) {
    
    
    
    this.lastYearBudgetFTE = lastYearBudgetFTE;
  }


  public OrgLevels lastYearBudgetSalary(Double lastYearBudgetSalary) {
    
    
    
    
    this.lastYearBudgetSalary = lastYearBudgetSalary;
    return this;
  }

  public OrgLevels lastYearBudgetSalary(Integer lastYearBudgetSalary) {
    
    
    
    
    this.lastYearBudgetSalary = lastYearBudgetSalary.doubleValue();
    return this;
  }

   /**
   * Last year Budget salary.
   * @return lastYearBudgetSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Last year Budget salary.")

  public Double getLastYearBudgetSalary() {
    return lastYearBudgetSalary;
  }


  public void setLastYearBudgetSalary(Double lastYearBudgetSalary) {
    
    
    
    this.lastYearBudgetSalary = lastYearBudgetSalary;
  }


  public OrgLevels level(Double level) {
    
    
    
    
    this.level = level;
    return this;
  }

  public OrgLevels level(Integer level) {
    
    
    
    
    this.level = level.doubleValue();
    return this;
  }

   /**
   * Organazation Level, one half of unique identifier. Cannot be updated.
   * @return level
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "Organazation Level, one half of unique identifier. Cannot be updated.")

  public Double getLevel() {
    return level;
  }


  public void setLevel(Double level) {
    
    
    
    this.level = level;
  }


  public OrgLevels levelDescription(String levelDescription) {
    
    
    
    
    this.levelDescription = levelDescription;
    return this;
  }

   /**
   * Organization description. Cannot be updated.
   * @return levelDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Organization description. Cannot be updated.")

  public String getLevelDescription() {
    return levelDescription;
  }


  public void setLevelDescription(String levelDescription) {
    
    
    
    this.levelDescription = levelDescription;
  }


  public OrgLevels reportingCategory(String reportingCategory) {
    
    
    
    
    this.reportingCategory = reportingCategory;
    return this;
  }

   /**
   * The reporting category code.
   * @return reportingCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The reporting category code.")

  public String getReportingCategory() {
    return reportingCategory;
  }


  public void setReportingCategory(String reportingCategory) {
    
    
    
    this.reportingCategory = reportingCategory;
  }


  public OrgLevels isActive(Boolean isActive) {
    
    
    
    
    this.isActive = isActive;
    return this;
  }

   /**
   * The organization level status.
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The organization level status.")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    
    
    
    this.isActive = isActive;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the OrgLevels instance itself
   */
  public OrgLevels putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgLevels orgLevels = (OrgLevels) o;
    return Objects.equals(this.description, orgLevels.description) &&
        Objects.equals(this.budgetGroup, orgLevels.budgetGroup) &&
        Objects.equals(this.code, orgLevels.code) &&
        Objects.equals(this.currentYearBudgetFTE, orgLevels.currentYearBudgetFTE) &&
        Objects.equals(this.currentYearBudgetSalary, orgLevels.currentYearBudgetSalary) &&
        Objects.equals(this.glSegment, orgLevels.glSegment) &&
        Objects.equals(this.lastYearBudgetFTE, orgLevels.lastYearBudgetFTE) &&
        Objects.equals(this.lastYearBudgetSalary, orgLevels.lastYearBudgetSalary) &&
        Objects.equals(this.level, orgLevels.level) &&
        Objects.equals(this.levelDescription, orgLevels.levelDescription) &&
        Objects.equals(this.reportingCategory, orgLevels.reportingCategory) &&
        Objects.equals(this.isActive, orgLevels.isActive)&&
        Objects.equals(this.additionalProperties, orgLevels.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, budgetGroup, code, currentYearBudgetFTE, currentYearBudgetSalary, glSegment, lastYearBudgetFTE, lastYearBudgetSalary, level, levelDescription, reportingCategory, isActive, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgLevels {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    budgetGroup: ").append(toIndentedString(budgetGroup)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    currentYearBudgetFTE: ").append(toIndentedString(currentYearBudgetFTE)).append("\n");
    sb.append("    currentYearBudgetSalary: ").append(toIndentedString(currentYearBudgetSalary)).append("\n");
    sb.append("    glSegment: ").append(toIndentedString(glSegment)).append("\n");
    sb.append("    lastYearBudgetFTE: ").append(toIndentedString(lastYearBudgetFTE)).append("\n");
    sb.append("    lastYearBudgetSalary: ").append(toIndentedString(lastYearBudgetSalary)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    levelDescription: ").append(toIndentedString(levelDescription)).append("\n");
    sb.append("    reportingCategory: ").append(toIndentedString(reportingCategory)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("budgetGroup");
    openapiFields.add("code");
    openapiFields.add("currentYearBudgetFTE");
    openapiFields.add("currentYearBudgetSalary");
    openapiFields.add("glSegment");
    openapiFields.add("lastYearBudgetFTE");
    openapiFields.add("lastYearBudgetSalary");
    openapiFields.add("level");
    openapiFields.add("levelDescription");
    openapiFields.add("reportingCategory");
    openapiFields.add("isActive");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("description");
    openapiRequiredFields.add("code");
    openapiRequiredFields.add("level");
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OrgLevels
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OrgLevels.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrgLevels is not found in the empty JSON string", OrgLevels.openapiRequiredFields.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrgLevels.openapiRequiredFields) {
        if (jsonObj.get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonObj.toString()));
        }
      }
      if (!jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if ((jsonObj.get("budgetGroup") != null && !jsonObj.get("budgetGroup").isJsonNull()) && !jsonObj.get("budgetGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `budgetGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("budgetGroup").toString()));
      }
      if (!jsonObj.get("code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("code").toString()));
      }
      if ((jsonObj.get("glSegment") != null && !jsonObj.get("glSegment").isJsonNull()) && !jsonObj.get("glSegment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `glSegment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("glSegment").toString()));
      }
      if ((jsonObj.get("levelDescription") != null && !jsonObj.get("levelDescription").isJsonNull()) && !jsonObj.get("levelDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `levelDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("levelDescription").toString()));
      }
      if ((jsonObj.get("reportingCategory") != null && !jsonObj.get("reportingCategory").isJsonNull()) && !jsonObj.get("reportingCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportingCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportingCategory").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrgLevels.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrgLevels' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrgLevels> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrgLevels.class));

       return (TypeAdapter<T>) new TypeAdapter<OrgLevels>() {
           @Override
           public void write(JsonWriter out, OrgLevels value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public OrgLevels read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             OrgLevels instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OrgLevels given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OrgLevels
  * @throws IOException if the JSON string is invalid with respect to OrgLevels
  */
  public static OrgLevels fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrgLevels.class);
  }

 /**
  * Convert an instance of OrgLevels to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

