/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * UserProfileDetails
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class UserProfileDetails {
  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_PERSON_ID = "personId";
  @SerializedName(SERIALIZED_NAME_PERSON_ID)
  private String personId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_WORK_PHONE = "workPhone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private String workPhone;

  public static final String SERIALIZED_NAME_USER_STATUS = "userStatus";
  @SerializedName(SERIALIZED_NAME_USER_STATUS)
  private String userStatus;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_USER_NAME = "userName";
  @SerializedName(SERIALIZED_NAME_USER_NAME)
  private String userName;

  public static final String SERIALIZED_NAME_ROLE_ID = "roleId";
  @SerializedName(SERIALIZED_NAME_ROLE_ID)
  private Integer roleId;

  public static final String SERIALIZED_NAME_ROLE_NAME = "roleName";
  @SerializedName(SERIALIZED_NAME_ROLE_NAME)
  private String roleName;

  public static final String SERIALIZED_NAME_ROLE_DESCRIPTION = "roleDescription";
  @SerializedName(SERIALIZED_NAME_ROLE_DESCRIPTION)
  private String roleDescription;

  public static final String SERIALIZED_NAME_INTEGRATION_USER_KEY = "integrationUserKey";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_USER_KEY)
  private String integrationUserKey;

  public static final String SERIALIZED_NAME_FILTER_COMPANY_ID = "filterCompanyId";
  @SerializedName(SERIALIZED_NAME_FILTER_COMPANY_ID)
  private String filterCompanyId;

  public static final String SERIALIZED_NAME_FILTER_DEDUCTION_GROUP_CODE = "filterDeductionGroupCode";
  @SerializedName(SERIALIZED_NAME_FILTER_DEDUCTION_GROUP_CODE)
  private String filterDeductionGroupCode;

  public static final String SERIALIZED_NAME_FILTER_EMPLOYEE_TYPE = "filterEmployeeType";
  @SerializedName(SERIALIZED_NAME_FILTER_EMPLOYEE_TYPE)
  private String filterEmployeeType;

  public static final String SERIALIZED_NAME_FILTER_STATUS = "filterStatus";
  @SerializedName(SERIALIZED_NAME_FILTER_STATUS)
  private String filterStatus;

  public static final String SERIALIZED_NAME_FILTER_FULL_TIME_OR_PART_TIME = "filterFullTimeOrPartTime";
  @SerializedName(SERIALIZED_NAME_FILTER_FULL_TIME_OR_PART_TIME)
  private String filterFullTimeOrPartTime;

  public static final String SERIALIZED_NAME_FILTER_JOB_CODE = "filterJobCode";
  @SerializedName(SERIALIZED_NAME_FILTER_JOB_CODE)
  private String filterJobCode;

  public static final String SERIALIZED_NAME_FILTER_LOCATION_CODE = "filterLocationCode";
  @SerializedName(SERIALIZED_NAME_FILTER_LOCATION_CODE)
  private String filterLocationCode;

  public static final String SERIALIZED_NAME_FILTER_ORGANIZATION_LEVEL1 = "filterOrganizationLevel1";
  @SerializedName(SERIALIZED_NAME_FILTER_ORGANIZATION_LEVEL1)
  private String filterOrganizationLevel1;

  public static final String SERIALIZED_NAME_FILTER_ORGANIZATION_LEVEL2 = "filterOrganizationLevel2";
  @SerializedName(SERIALIZED_NAME_FILTER_ORGANIZATION_LEVEL2)
  private String filterOrganizationLevel2;

  public static final String SERIALIZED_NAME_FILTER_ORGANIZATION_LEVEL3 = "filterOrganizationLevel3";
  @SerializedName(SERIALIZED_NAME_FILTER_ORGANIZATION_LEVEL3)
  private String filterOrganizationLevel3;

  public static final String SERIALIZED_NAME_FILTER_ORGANIZATION_LEVEL4 = "filterOrganizationLevel4";
  @SerializedName(SERIALIZED_NAME_FILTER_ORGANIZATION_LEVEL4)
  private String filterOrganizationLevel4;

  public static final String SERIALIZED_NAME_FILTER_PAY_GROUP_CODE = "filterPayGroupCode";
  @SerializedName(SERIALIZED_NAME_FILTER_PAY_GROUP_CODE)
  private String filterPayGroupCode;

  public static final String SERIALIZED_NAME_FILTER_PROJECT_CODE = "filterProjectCode";
  @SerializedName(SERIALIZED_NAME_FILTER_PROJECT_CODE)
  private String filterProjectCode;

  public static final String SERIALIZED_NAME_FILTER_SALARY_OR_HOURLY = "filterSalaryOrHourly";
  @SerializedName(SERIALIZED_NAME_FILTER_SALARY_OR_HOURLY)
  private String filterSalaryOrHourly;

  public static final String SERIALIZED_NAME_FILTER_SHIFT_CODE = "filterShiftCode";
  @SerializedName(SERIALIZED_NAME_FILTER_SHIFT_CODE)
  private String filterShiftCode;

  public static final String SERIALIZED_NAME_FILTER_SUPERVISOR_I_D = "filterSupervisorID";
  @SerializedName(SERIALIZED_NAME_FILTER_SUPERVISOR_I_D)
  private String filterSupervisorID;

  public static final String SERIALIZED_NAME_FILTER_TAX_CALCULATION_GROUP_I_D = "filterTaxCalculationGroupID";
  @SerializedName(SERIALIZED_NAME_FILTER_TAX_CALCULATION_GROUP_I_D)
  private String filterTaxCalculationGroupID;

  public static final String SERIALIZED_NAME_MASTER_COMPANY = "masterCompany";
  @SerializedName(SERIALIZED_NAME_MASTER_COMPANY)
  private String masterCompany;

  public static final String SERIALIZED_NAME_MASTER_COMPANY_ID = "masterCompanyId";
  @SerializedName(SERIALIZED_NAME_MASTER_COMPANY_ID)
  private String masterCompanyId;

  public static final String SERIALIZED_NAME_HOME_COMPANY = "homeCompany";
  @SerializedName(SERIALIZED_NAME_HOME_COMPANY)
  private String homeCompany;

  public static final String SERIALIZED_NAME_HOME_COMPANY_ID = "homeCompanyId";
  @SerializedName(SERIALIZED_NAME_HOME_COMPANY_ID)
  private String homeCompanyId;

  public UserProfileDetails() {
  }

  public UserProfileDetails employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public UserProfileDetails companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public UserProfileDetails firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public UserProfileDetails lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public UserProfileDetails personId(String personId) {
    
    
    
    
    this.personId = personId;
    return this;
  }

   /**
   * Get personId
   * @return personId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public String getPersonId() {
    return personId;
  }


  public void setPersonId(String personId) {
    
    
    
    this.personId = personId;
  }


  public UserProfileDetails email(String email) {
    
    
    
    
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    
    
    
    this.email = email;
  }


  public UserProfileDetails workPhone(String workPhone) {
    
    
    
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * Get workPhone
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(String workPhone) {
    
    
    
    this.workPhone = workPhone;
  }


  public UserProfileDetails userStatus(String userStatus) {
    
    
    
    
    this.userStatus = userStatus;
    return this;
  }

   /**
   * Get userStatus
   * @return userStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserStatus() {
    return userStatus;
  }


  public void setUserStatus(String userStatus) {
    
    
    
    this.userStatus = userStatus;
  }


  public UserProfileDetails userId(Integer userId) {
    
    
    
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getUserId() {
    return userId;
  }


  public void setUserId(Integer userId) {
    
    
    
    this.userId = userId;
  }


  public UserProfileDetails userName(String userName) {
    
    
    
    
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserName() {
    return userName;
  }


  public void setUserName(String userName) {
    
    
    
    this.userName = userName;
  }


  public UserProfileDetails roleId(Integer roleId) {
    
    
    
    
    this.roleId = roleId;
    return this;
  }

   /**
   * Get roleId
   * @return roleId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getRoleId() {
    return roleId;
  }


  public void setRoleId(Integer roleId) {
    
    
    
    this.roleId = roleId;
  }


  public UserProfileDetails roleName(String roleName) {
    
    
    
    
    this.roleName = roleName;
    return this;
  }

   /**
   * Get roleName
   * @return roleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRoleName() {
    return roleName;
  }


  public void setRoleName(String roleName) {
    
    
    
    this.roleName = roleName;
  }


  public UserProfileDetails roleDescription(String roleDescription) {
    
    
    
    
    this.roleDescription = roleDescription;
    return this;
  }

   /**
   * Get roleDescription
   * @return roleDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRoleDescription() {
    return roleDescription;
  }


  public void setRoleDescription(String roleDescription) {
    
    
    
    this.roleDescription = roleDescription;
  }


  public UserProfileDetails integrationUserKey(String integrationUserKey) {
    
    
    
    
    this.integrationUserKey = integrationUserKey;
    return this;
  }

   /**
   * Get integrationUserKey
   * @return integrationUserKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")

  public String getIntegrationUserKey() {
    return integrationUserKey;
  }


  public void setIntegrationUserKey(String integrationUserKey) {
    
    
    
    this.integrationUserKey = integrationUserKey;
  }


  public UserProfileDetails filterCompanyId(String filterCompanyId) {
    
    
    
    
    this.filterCompanyId = filterCompanyId;
    return this;
  }

   /**
   * Get filterCompanyId
   * @return filterCompanyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterCompanyId() {
    return filterCompanyId;
  }


  public void setFilterCompanyId(String filterCompanyId) {
    
    
    
    this.filterCompanyId = filterCompanyId;
  }


  public UserProfileDetails filterDeductionGroupCode(String filterDeductionGroupCode) {
    
    
    
    
    this.filterDeductionGroupCode = filterDeductionGroupCode;
    return this;
  }

   /**
   * Get filterDeductionGroupCode
   * @return filterDeductionGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterDeductionGroupCode() {
    return filterDeductionGroupCode;
  }


  public void setFilterDeductionGroupCode(String filterDeductionGroupCode) {
    
    
    
    this.filterDeductionGroupCode = filterDeductionGroupCode;
  }


  public UserProfileDetails filterEmployeeType(String filterEmployeeType) {
    
    
    
    
    this.filterEmployeeType = filterEmployeeType;
    return this;
  }

   /**
   * Get filterEmployeeType
   * @return filterEmployeeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterEmployeeType() {
    return filterEmployeeType;
  }


  public void setFilterEmployeeType(String filterEmployeeType) {
    
    
    
    this.filterEmployeeType = filterEmployeeType;
  }


  public UserProfileDetails filterStatus(String filterStatus) {
    
    
    
    
    this.filterStatus = filterStatus;
    return this;
  }

   /**
   * Get filterStatus
   * @return filterStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterStatus() {
    return filterStatus;
  }


  public void setFilterStatus(String filterStatus) {
    
    
    
    this.filterStatus = filterStatus;
  }


  public UserProfileDetails filterFullTimeOrPartTime(String filterFullTimeOrPartTime) {
    
    
    
    
    this.filterFullTimeOrPartTime = filterFullTimeOrPartTime;
    return this;
  }

   /**
   * Get filterFullTimeOrPartTime
   * @return filterFullTimeOrPartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterFullTimeOrPartTime() {
    return filterFullTimeOrPartTime;
  }


  public void setFilterFullTimeOrPartTime(String filterFullTimeOrPartTime) {
    
    
    
    this.filterFullTimeOrPartTime = filterFullTimeOrPartTime;
  }


  public UserProfileDetails filterJobCode(String filterJobCode) {
    
    
    
    
    this.filterJobCode = filterJobCode;
    return this;
  }

   /**
   * Get filterJobCode
   * @return filterJobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterJobCode() {
    return filterJobCode;
  }


  public void setFilterJobCode(String filterJobCode) {
    
    
    
    this.filterJobCode = filterJobCode;
  }


  public UserProfileDetails filterLocationCode(String filterLocationCode) {
    
    
    
    
    this.filterLocationCode = filterLocationCode;
    return this;
  }

   /**
   * Get filterLocationCode
   * @return filterLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterLocationCode() {
    return filterLocationCode;
  }


  public void setFilterLocationCode(String filterLocationCode) {
    
    
    
    this.filterLocationCode = filterLocationCode;
  }


  public UserProfileDetails filterOrganizationLevel1(String filterOrganizationLevel1) {
    
    
    
    
    this.filterOrganizationLevel1 = filterOrganizationLevel1;
    return this;
  }

   /**
   * Get filterOrganizationLevel1
   * @return filterOrganizationLevel1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterOrganizationLevel1() {
    return filterOrganizationLevel1;
  }


  public void setFilterOrganizationLevel1(String filterOrganizationLevel1) {
    
    
    
    this.filterOrganizationLevel1 = filterOrganizationLevel1;
  }


  public UserProfileDetails filterOrganizationLevel2(String filterOrganizationLevel2) {
    
    
    
    
    this.filterOrganizationLevel2 = filterOrganizationLevel2;
    return this;
  }

   /**
   * Get filterOrganizationLevel2
   * @return filterOrganizationLevel2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterOrganizationLevel2() {
    return filterOrganizationLevel2;
  }


  public void setFilterOrganizationLevel2(String filterOrganizationLevel2) {
    
    
    
    this.filterOrganizationLevel2 = filterOrganizationLevel2;
  }


  public UserProfileDetails filterOrganizationLevel3(String filterOrganizationLevel3) {
    
    
    
    
    this.filterOrganizationLevel3 = filterOrganizationLevel3;
    return this;
  }

   /**
   * Get filterOrganizationLevel3
   * @return filterOrganizationLevel3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterOrganizationLevel3() {
    return filterOrganizationLevel3;
  }


  public void setFilterOrganizationLevel3(String filterOrganizationLevel3) {
    
    
    
    this.filterOrganizationLevel3 = filterOrganizationLevel3;
  }


  public UserProfileDetails filterOrganizationLevel4(String filterOrganizationLevel4) {
    
    
    
    
    this.filterOrganizationLevel4 = filterOrganizationLevel4;
    return this;
  }

   /**
   * Get filterOrganizationLevel4
   * @return filterOrganizationLevel4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterOrganizationLevel4() {
    return filterOrganizationLevel4;
  }


  public void setFilterOrganizationLevel4(String filterOrganizationLevel4) {
    
    
    
    this.filterOrganizationLevel4 = filterOrganizationLevel4;
  }


  public UserProfileDetails filterPayGroupCode(String filterPayGroupCode) {
    
    
    
    
    this.filterPayGroupCode = filterPayGroupCode;
    return this;
  }

   /**
   * Get filterPayGroupCode
   * @return filterPayGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterPayGroupCode() {
    return filterPayGroupCode;
  }


  public void setFilterPayGroupCode(String filterPayGroupCode) {
    
    
    
    this.filterPayGroupCode = filterPayGroupCode;
  }


  public UserProfileDetails filterProjectCode(String filterProjectCode) {
    
    
    
    
    this.filterProjectCode = filterProjectCode;
    return this;
  }

   /**
   * Get filterProjectCode
   * @return filterProjectCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterProjectCode() {
    return filterProjectCode;
  }


  public void setFilterProjectCode(String filterProjectCode) {
    
    
    
    this.filterProjectCode = filterProjectCode;
  }


  public UserProfileDetails filterSalaryOrHourly(String filterSalaryOrHourly) {
    
    
    
    
    this.filterSalaryOrHourly = filterSalaryOrHourly;
    return this;
  }

   /**
   * Get filterSalaryOrHourly
   * @return filterSalaryOrHourly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterSalaryOrHourly() {
    return filterSalaryOrHourly;
  }


  public void setFilterSalaryOrHourly(String filterSalaryOrHourly) {
    
    
    
    this.filterSalaryOrHourly = filterSalaryOrHourly;
  }


  public UserProfileDetails filterShiftCode(String filterShiftCode) {
    
    
    
    
    this.filterShiftCode = filterShiftCode;
    return this;
  }

   /**
   * Get filterShiftCode
   * @return filterShiftCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterShiftCode() {
    return filterShiftCode;
  }


  public void setFilterShiftCode(String filterShiftCode) {
    
    
    
    this.filterShiftCode = filterShiftCode;
  }


  public UserProfileDetails filterSupervisorID(String filterSupervisorID) {
    
    
    
    
    this.filterSupervisorID = filterSupervisorID;
    return this;
  }

   /**
   * Get filterSupervisorID
   * @return filterSupervisorID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterSupervisorID() {
    return filterSupervisorID;
  }


  public void setFilterSupervisorID(String filterSupervisorID) {
    
    
    
    this.filterSupervisorID = filterSupervisorID;
  }


  public UserProfileDetails filterTaxCalculationGroupID(String filterTaxCalculationGroupID) {
    
    
    
    
    this.filterTaxCalculationGroupID = filterTaxCalculationGroupID;
    return this;
  }

   /**
   * Get filterTaxCalculationGroupID
   * @return filterTaxCalculationGroupID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFilterTaxCalculationGroupID() {
    return filterTaxCalculationGroupID;
  }


  public void setFilterTaxCalculationGroupID(String filterTaxCalculationGroupID) {
    
    
    
    this.filterTaxCalculationGroupID = filterTaxCalculationGroupID;
  }


  public UserProfileDetails masterCompany(String masterCompany) {
    
    
    
    
    this.masterCompany = masterCompany;
    return this;
  }

   /**
   * Get masterCompany
   * @return masterCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMasterCompany() {
    return masterCompany;
  }


  public void setMasterCompany(String masterCompany) {
    
    
    
    this.masterCompany = masterCompany;
  }


  public UserProfileDetails masterCompanyId(String masterCompanyId) {
    
    
    
    
    this.masterCompanyId = masterCompanyId;
    return this;
  }

   /**
   * Get masterCompanyId
   * @return masterCompanyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMasterCompanyId() {
    return masterCompanyId;
  }


  public void setMasterCompanyId(String masterCompanyId) {
    
    
    
    this.masterCompanyId = masterCompanyId;
  }


  public UserProfileDetails homeCompany(String homeCompany) {
    
    
    
    
    this.homeCompany = homeCompany;
    return this;
  }

   /**
   * Get homeCompany
   * @return homeCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomeCompany() {
    return homeCompany;
  }


  public void setHomeCompany(String homeCompany) {
    
    
    
    this.homeCompany = homeCompany;
  }


  public UserProfileDetails homeCompanyId(String homeCompanyId) {
    
    
    
    
    this.homeCompanyId = homeCompanyId;
    return this;
  }

   /**
   * Get homeCompanyId
   * @return homeCompanyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomeCompanyId() {
    return homeCompanyId;
  }


  public void setHomeCompanyId(String homeCompanyId) {
    
    
    
    this.homeCompanyId = homeCompanyId;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the UserProfileDetails instance itself
   */
  public UserProfileDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UserProfileDetails userProfileDetails = (UserProfileDetails) o;
    return Objects.equals(this.employeeId, userProfileDetails.employeeId) &&
        Objects.equals(this.companyId, userProfileDetails.companyId) &&
        Objects.equals(this.firstName, userProfileDetails.firstName) &&
        Objects.equals(this.lastName, userProfileDetails.lastName) &&
        Objects.equals(this.personId, userProfileDetails.personId) &&
        Objects.equals(this.email, userProfileDetails.email) &&
        Objects.equals(this.workPhone, userProfileDetails.workPhone) &&
        Objects.equals(this.userStatus, userProfileDetails.userStatus) &&
        Objects.equals(this.userId, userProfileDetails.userId) &&
        Objects.equals(this.userName, userProfileDetails.userName) &&
        Objects.equals(this.roleId, userProfileDetails.roleId) &&
        Objects.equals(this.roleName, userProfileDetails.roleName) &&
        Objects.equals(this.roleDescription, userProfileDetails.roleDescription) &&
        Objects.equals(this.integrationUserKey, userProfileDetails.integrationUserKey) &&
        Objects.equals(this.filterCompanyId, userProfileDetails.filterCompanyId) &&
        Objects.equals(this.filterDeductionGroupCode, userProfileDetails.filterDeductionGroupCode) &&
        Objects.equals(this.filterEmployeeType, userProfileDetails.filterEmployeeType) &&
        Objects.equals(this.filterStatus, userProfileDetails.filterStatus) &&
        Objects.equals(this.filterFullTimeOrPartTime, userProfileDetails.filterFullTimeOrPartTime) &&
        Objects.equals(this.filterJobCode, userProfileDetails.filterJobCode) &&
        Objects.equals(this.filterLocationCode, userProfileDetails.filterLocationCode) &&
        Objects.equals(this.filterOrganizationLevel1, userProfileDetails.filterOrganizationLevel1) &&
        Objects.equals(this.filterOrganizationLevel2, userProfileDetails.filterOrganizationLevel2) &&
        Objects.equals(this.filterOrganizationLevel3, userProfileDetails.filterOrganizationLevel3) &&
        Objects.equals(this.filterOrganizationLevel4, userProfileDetails.filterOrganizationLevel4) &&
        Objects.equals(this.filterPayGroupCode, userProfileDetails.filterPayGroupCode) &&
        Objects.equals(this.filterProjectCode, userProfileDetails.filterProjectCode) &&
        Objects.equals(this.filterSalaryOrHourly, userProfileDetails.filterSalaryOrHourly) &&
        Objects.equals(this.filterShiftCode, userProfileDetails.filterShiftCode) &&
        Objects.equals(this.filterSupervisorID, userProfileDetails.filterSupervisorID) &&
        Objects.equals(this.filterTaxCalculationGroupID, userProfileDetails.filterTaxCalculationGroupID) &&
        Objects.equals(this.masterCompany, userProfileDetails.masterCompany) &&
        Objects.equals(this.masterCompanyId, userProfileDetails.masterCompanyId) &&
        Objects.equals(this.homeCompany, userProfileDetails.homeCompany) &&
        Objects.equals(this.homeCompanyId, userProfileDetails.homeCompanyId)&&
        Objects.equals(this.additionalProperties, userProfileDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeId, companyId, firstName, lastName, personId, email, workPhone, userStatus, userId, userName, roleId, roleName, roleDescription, integrationUserKey, filterCompanyId, filterDeductionGroupCode, filterEmployeeType, filterStatus, filterFullTimeOrPartTime, filterJobCode, filterLocationCode, filterOrganizationLevel1, filterOrganizationLevel2, filterOrganizationLevel3, filterOrganizationLevel4, filterPayGroupCode, filterProjectCode, filterSalaryOrHourly, filterShiftCode, filterSupervisorID, filterTaxCalculationGroupID, masterCompany, masterCompanyId, homeCompany, homeCompanyId, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UserProfileDetails {\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("    userStatus: ").append(toIndentedString(userStatus)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    roleId: ").append(toIndentedString(roleId)).append("\n");
    sb.append("    roleName: ").append(toIndentedString(roleName)).append("\n");
    sb.append("    roleDescription: ").append(toIndentedString(roleDescription)).append("\n");
    sb.append("    integrationUserKey: ").append(toIndentedString(integrationUserKey)).append("\n");
    sb.append("    filterCompanyId: ").append(toIndentedString(filterCompanyId)).append("\n");
    sb.append("    filterDeductionGroupCode: ").append(toIndentedString(filterDeductionGroupCode)).append("\n");
    sb.append("    filterEmployeeType: ").append(toIndentedString(filterEmployeeType)).append("\n");
    sb.append("    filterStatus: ").append(toIndentedString(filterStatus)).append("\n");
    sb.append("    filterFullTimeOrPartTime: ").append(toIndentedString(filterFullTimeOrPartTime)).append("\n");
    sb.append("    filterJobCode: ").append(toIndentedString(filterJobCode)).append("\n");
    sb.append("    filterLocationCode: ").append(toIndentedString(filterLocationCode)).append("\n");
    sb.append("    filterOrganizationLevel1: ").append(toIndentedString(filterOrganizationLevel1)).append("\n");
    sb.append("    filterOrganizationLevel2: ").append(toIndentedString(filterOrganizationLevel2)).append("\n");
    sb.append("    filterOrganizationLevel3: ").append(toIndentedString(filterOrganizationLevel3)).append("\n");
    sb.append("    filterOrganizationLevel4: ").append(toIndentedString(filterOrganizationLevel4)).append("\n");
    sb.append("    filterPayGroupCode: ").append(toIndentedString(filterPayGroupCode)).append("\n");
    sb.append("    filterProjectCode: ").append(toIndentedString(filterProjectCode)).append("\n");
    sb.append("    filterSalaryOrHourly: ").append(toIndentedString(filterSalaryOrHourly)).append("\n");
    sb.append("    filterShiftCode: ").append(toIndentedString(filterShiftCode)).append("\n");
    sb.append("    filterSupervisorID: ").append(toIndentedString(filterSupervisorID)).append("\n");
    sb.append("    filterTaxCalculationGroupID: ").append(toIndentedString(filterTaxCalculationGroupID)).append("\n");
    sb.append("    masterCompany: ").append(toIndentedString(masterCompany)).append("\n");
    sb.append("    masterCompanyId: ").append(toIndentedString(masterCompanyId)).append("\n");
    sb.append("    homeCompany: ").append(toIndentedString(homeCompany)).append("\n");
    sb.append("    homeCompanyId: ").append(toIndentedString(homeCompanyId)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("employeeId");
    openapiFields.add("companyId");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("personId");
    openapiFields.add("email");
    openapiFields.add("workPhone");
    openapiFields.add("userStatus");
    openapiFields.add("userId");
    openapiFields.add("userName");
    openapiFields.add("roleId");
    openapiFields.add("roleName");
    openapiFields.add("roleDescription");
    openapiFields.add("integrationUserKey");
    openapiFields.add("filterCompanyId");
    openapiFields.add("filterDeductionGroupCode");
    openapiFields.add("filterEmployeeType");
    openapiFields.add("filterStatus");
    openapiFields.add("filterFullTimeOrPartTime");
    openapiFields.add("filterJobCode");
    openapiFields.add("filterLocationCode");
    openapiFields.add("filterOrganizationLevel1");
    openapiFields.add("filterOrganizationLevel2");
    openapiFields.add("filterOrganizationLevel3");
    openapiFields.add("filterOrganizationLevel4");
    openapiFields.add("filterPayGroupCode");
    openapiFields.add("filterProjectCode");
    openapiFields.add("filterSalaryOrHourly");
    openapiFields.add("filterShiftCode");
    openapiFields.add("filterSupervisorID");
    openapiFields.add("filterTaxCalculationGroupID");
    openapiFields.add("masterCompany");
    openapiFields.add("masterCompanyId");
    openapiFields.add("homeCompany");
    openapiFields.add("homeCompanyId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to UserProfileDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!UserProfileDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UserProfileDetails is not found in the empty JSON string", UserProfileDetails.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("personId") != null && !jsonObj.get("personId").isJsonNull()) && !jsonObj.get("personId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personId").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("workPhone") != null && !jsonObj.get("workPhone").isJsonNull()) && !jsonObj.get("workPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone").toString()));
      }
      if ((jsonObj.get("userStatus") != null && !jsonObj.get("userStatus").isJsonNull()) && !jsonObj.get("userStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userStatus").toString()));
      }
      if ((jsonObj.get("userName") != null && !jsonObj.get("userName").isJsonNull()) && !jsonObj.get("userName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userName").toString()));
      }
      if ((jsonObj.get("roleName") != null && !jsonObj.get("roleName").isJsonNull()) && !jsonObj.get("roleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roleName").toString()));
      }
      if ((jsonObj.get("roleDescription") != null && !jsonObj.get("roleDescription").isJsonNull()) && !jsonObj.get("roleDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `roleDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("roleDescription").toString()));
      }
      if ((jsonObj.get("integrationUserKey") != null && !jsonObj.get("integrationUserKey").isJsonNull()) && !jsonObj.get("integrationUserKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integrationUserKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integrationUserKey").toString()));
      }
      if ((jsonObj.get("filterCompanyId") != null && !jsonObj.get("filterCompanyId").isJsonNull()) && !jsonObj.get("filterCompanyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterCompanyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterCompanyId").toString()));
      }
      if ((jsonObj.get("filterDeductionGroupCode") != null && !jsonObj.get("filterDeductionGroupCode").isJsonNull()) && !jsonObj.get("filterDeductionGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterDeductionGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterDeductionGroupCode").toString()));
      }
      if ((jsonObj.get("filterEmployeeType") != null && !jsonObj.get("filterEmployeeType").isJsonNull()) && !jsonObj.get("filterEmployeeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterEmployeeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterEmployeeType").toString()));
      }
      if ((jsonObj.get("filterStatus") != null && !jsonObj.get("filterStatus").isJsonNull()) && !jsonObj.get("filterStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterStatus").toString()));
      }
      if ((jsonObj.get("filterFullTimeOrPartTime") != null && !jsonObj.get("filterFullTimeOrPartTime").isJsonNull()) && !jsonObj.get("filterFullTimeOrPartTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterFullTimeOrPartTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterFullTimeOrPartTime").toString()));
      }
      if ((jsonObj.get("filterJobCode") != null && !jsonObj.get("filterJobCode").isJsonNull()) && !jsonObj.get("filterJobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterJobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterJobCode").toString()));
      }
      if ((jsonObj.get("filterLocationCode") != null && !jsonObj.get("filterLocationCode").isJsonNull()) && !jsonObj.get("filterLocationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterLocationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterLocationCode").toString()));
      }
      if ((jsonObj.get("filterOrganizationLevel1") != null && !jsonObj.get("filterOrganizationLevel1").isJsonNull()) && !jsonObj.get("filterOrganizationLevel1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterOrganizationLevel1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterOrganizationLevel1").toString()));
      }
      if ((jsonObj.get("filterOrganizationLevel2") != null && !jsonObj.get("filterOrganizationLevel2").isJsonNull()) && !jsonObj.get("filterOrganizationLevel2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterOrganizationLevel2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterOrganizationLevel2").toString()));
      }
      if ((jsonObj.get("filterOrganizationLevel3") != null && !jsonObj.get("filterOrganizationLevel3").isJsonNull()) && !jsonObj.get("filterOrganizationLevel3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterOrganizationLevel3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterOrganizationLevel3").toString()));
      }
      if ((jsonObj.get("filterOrganizationLevel4") != null && !jsonObj.get("filterOrganizationLevel4").isJsonNull()) && !jsonObj.get("filterOrganizationLevel4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterOrganizationLevel4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterOrganizationLevel4").toString()));
      }
      if ((jsonObj.get("filterPayGroupCode") != null && !jsonObj.get("filterPayGroupCode").isJsonNull()) && !jsonObj.get("filterPayGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterPayGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterPayGroupCode").toString()));
      }
      if ((jsonObj.get("filterProjectCode") != null && !jsonObj.get("filterProjectCode").isJsonNull()) && !jsonObj.get("filterProjectCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterProjectCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterProjectCode").toString()));
      }
      if ((jsonObj.get("filterSalaryOrHourly") != null && !jsonObj.get("filterSalaryOrHourly").isJsonNull()) && !jsonObj.get("filterSalaryOrHourly").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterSalaryOrHourly` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterSalaryOrHourly").toString()));
      }
      if ((jsonObj.get("filterShiftCode") != null && !jsonObj.get("filterShiftCode").isJsonNull()) && !jsonObj.get("filterShiftCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterShiftCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterShiftCode").toString()));
      }
      if ((jsonObj.get("filterSupervisorID") != null && !jsonObj.get("filterSupervisorID").isJsonNull()) && !jsonObj.get("filterSupervisorID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterSupervisorID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterSupervisorID").toString()));
      }
      if ((jsonObj.get("filterTaxCalculationGroupID") != null && !jsonObj.get("filterTaxCalculationGroupID").isJsonNull()) && !jsonObj.get("filterTaxCalculationGroupID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `filterTaxCalculationGroupID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("filterTaxCalculationGroupID").toString()));
      }
      if ((jsonObj.get("masterCompany") != null && !jsonObj.get("masterCompany").isJsonNull()) && !jsonObj.get("masterCompany").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `masterCompany` to be a primitive type in the JSON string but got `%s`", jsonObj.get("masterCompany").toString()));
      }
      if ((jsonObj.get("masterCompanyId") != null && !jsonObj.get("masterCompanyId").isJsonNull()) && !jsonObj.get("masterCompanyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `masterCompanyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("masterCompanyId").toString()));
      }
      if ((jsonObj.get("homeCompany") != null && !jsonObj.get("homeCompany").isJsonNull()) && !jsonObj.get("homeCompany").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeCompany` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeCompany").toString()));
      }
      if ((jsonObj.get("homeCompanyId") != null && !jsonObj.get("homeCompanyId").isJsonNull()) && !jsonObj.get("homeCompanyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homeCompanyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homeCompanyId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UserProfileDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UserProfileDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UserProfileDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UserProfileDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<UserProfileDetails>() {
           @Override
           public void write(JsonWriter out, UserProfileDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public UserProfileDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             UserProfileDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UserProfileDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UserProfileDetails
  * @throws IOException if the JSON string is invalid with respect to UserProfileDetails
  */
  public static UserProfileDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UserProfileDetails.class);
  }

 /**
  * Convert an instance of UserProfileDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

