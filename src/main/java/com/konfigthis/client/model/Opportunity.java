/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EducationCriteria;
import com.konfigthis.client.model.JobBoards;
import com.konfigthis.client.model.Links;
import com.konfigthis.client.model.Locations;
import com.konfigthis.client.model.OpportunityCompany;
import com.konfigthis.client.model.OpportunityCompenasation;
import com.konfigthis.client.model.OpportunityCompenasationCurrency;
import com.konfigthis.client.model.OpportunityDedaultLocale;
import com.konfigthis.client.model.OpportunityDescription;
import com.konfigthis.client.model.OpportunityFullTimeEquivalent;
import com.konfigthis.client.model.OpportunityHeadCount;
import com.konfigthis.client.model.OpportunityIncumbent;
import com.konfigthis.client.model.OpportunityJobFamily;
import com.konfigthis.client.model.OpportunityRecruitingProcess;
import com.konfigthis.client.model.OrgUnitGroups;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * The section that contains details of an opportunity associated with the candidate’s application
 */
@ApiModel(description = "The section that contains details of an opportunity associated with the candidate’s application")@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class Opportunity {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private Object title;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private OpportunityDescription description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private Object updatedAt = null;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Object createdAt = null;

  public static final String SERIALIZED_NAME_REQUISITION_NUMBER = "requisition_number";
  @SerializedName(SERIALIZED_NAME_REQUISITION_NUMBER)
  private Object requisitionNumber = null;

  public static final String SERIALIZED_NAME_DEDAULT_LOCALE = "dedault_locale";
  @SerializedName(SERIALIZED_NAME_DEDAULT_LOCALE)
  private OpportunityDedaultLocale dedaultLocale;

  public static final String SERIALIZED_NAME_COMPENASATION = "compenasation";
  @SerializedName(SERIALIZED_NAME_COMPENASATION)
  private OpportunityCompenasation compenasation;

  public static final String SERIALIZED_NAME_JOB = "job";
  @SerializedName(SERIALIZED_NAME_JOB)
  private OpportunityCompenasationCurrency job;

  public static final String SERIALIZED_NAME_JOB_FAMILY = "job_family";
  @SerializedName(SERIALIZED_NAME_JOB_FAMILY)
  private OpportunityJobFamily jobFamily;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private List<Locations> locations = null;

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private OpportunityCompany company;

  public static final String SERIALIZED_NAME_RECRUITER = "recruiter";
  @SerializedName(SERIALIZED_NAME_RECRUITER)
  private Object recruiter;

  public static final String SERIALIZED_NAME_HIRING_MANAGER = "hiring_manager";
  @SerializedName(SERIALIZED_NAME_HIRING_MANAGER)
  private Object hiringManager = null;

  public static final String SERIALIZED_NAME_ONBOARDING_OWNER = "onboarding_owner";
  @SerializedName(SERIALIZED_NAME_ONBOARDING_OWNER)
  private Object onboardingOwner = null;

  public static final String SERIALIZED_NAME_RECRUITING_PROCESS = "recruiting_process";
  @SerializedName(SERIALIZED_NAME_RECRUITING_PROCESS)
  private OpportunityRecruitingProcess recruitingProcess;

  public static final String SERIALIZED_NAME_JOB_BOARDS = "job_boards";
  @SerializedName(SERIALIZED_NAME_JOB_BOARDS)
  private List<JobBoards> jobBoards = null;

  public static final String SERIALIZED_NAME_PUBLISHED_DATE = "published_date";
  @SerializedName(SERIALIZED_NAME_PUBLISHED_DATE)
  private Object publishedDate = null;

  public static final String SERIALIZED_NAME_CLOSED_DATE = "closed_date";
  @SerializedName(SERIALIZED_NAME_CLOSED_DATE)
  private Object closedDate = null;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private Object status = null;

  public static final String SERIALIZED_NAME_IS_FEATURED = "is_featured";
  @SerializedName(SERIALIZED_NAME_IS_FEATURED)
  private Object isFeatured = null;

  public static final String SERIALIZED_NAME_IS_SHARED_WITH_EVERYONE = "is_shared_with_everyone";
  @SerializedName(SERIALIZED_NAME_IS_SHARED_WITH_EVERYONE)
  private Object isSharedWithEveryone = null;

  public static final String SERIALIZED_NAME_INTERNAL_NOTES = "internal_notes";
  @SerializedName(SERIALIZED_NAME_INTERNAL_NOTES)
  private Object internalNotes = null;

  public static final String SERIALIZED_NAME_SKILL_CRITERIA = "skill_criteria";
  @SerializedName(SERIALIZED_NAME_SKILL_CRITERIA)
  private List<Object> skillCriteria = null;

  public static final String SERIALIZED_NAME_WORK_EXPERIENCE_CRITERIA = "work_experience_criteria";
  @SerializedName(SERIALIZED_NAME_WORK_EXPERIENCE_CRITERIA)
  private List<Object> workExperienceCriteria = null;

  public static final String SERIALIZED_NAME_EDUCATION_CRITERIA = "education_criteria";
  @SerializedName(SERIALIZED_NAME_EDUCATION_CRITERIA)
  private List<EducationCriteria> educationCriteria = null;

  public static final String SERIALIZED_NAME_LICENSE_CRITERIA = "license_criteria";
  @SerializedName(SERIALIZED_NAME_LICENSE_CRITERIA)
  private List<Object> licenseCriteria = null;

  public static final String SERIALIZED_NAME_BEHAVIOR_CRITERIA = "behavior_criteria";
  @SerializedName(SERIALIZED_NAME_BEHAVIOR_CRITERIA)
  private List<Object> behaviorCriteria = null;

  public static final String SERIALIZED_NAME_MOTIVATION_CRITERIA = "motivation_criteria";
  @SerializedName(SERIALIZED_NAME_MOTIVATION_CRITERIA)
  private List<Object> motivationCriteria = null;

  public static final String SERIALIZED_NAME_IS_CONTINUOUS_OPENING = "is_continuous_opening";
  @SerializedName(SERIALIZED_NAME_IS_CONTINUOUS_OPENING)
  private Boolean isContinuousOpening;

  public static final String SERIALIZED_NAME_FULL_TIME_EQUIVALENT = "full_time_equivalent";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_EQUIVALENT)
  private OpportunityFullTimeEquivalent fullTimeEquivalent;

  public static final String SERIALIZED_NAME_HEAD_COUNT = "head_count";
  @SerializedName(SERIALIZED_NAME_HEAD_COUNT)
  private OpportunityHeadCount headCount;

  public static final String SERIALIZED_NAME_HOURS_PER_WEEK = "hours_per_week";
  @SerializedName(SERIALIZED_NAME_HOURS_PER_WEEK)
  private Object hoursPerWeek = null;

  public static final String SERIALIZED_NAME_HOURS_PER_SHIFT = "hours_per_shift";
  @SerializedName(SERIALIZED_NAME_HOURS_PER_SHIFT)
  private Object hoursPerShift = null;

  public static final String SERIALIZED_NAME_STAFFING_PLAN_IMPACT = "staffing_plan_impact";
  @SerializedName(SERIALIZED_NAME_STAFFING_PLAN_IMPACT)
  private Object staffingPlanImpact = null;

  public static final String SERIALIZED_NAME_TARGET_START_DATE = "target_start_date";
  @SerializedName(SERIALIZED_NAME_TARGET_START_DATE)
  private Object targetStartDate = null;

  public static final String SERIALIZED_NAME_INCUMBENT = "incumbent";
  @SerializedName(SERIALIZED_NAME_INCUMBENT)
  private OpportunityIncumbent incumbent;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Object priority = null;

  public static final String SERIALIZED_NAME_IS_BUDGETED = "is_budgeted";
  @SerializedName(SERIALIZED_NAME_IS_BUDGETED)
  private Object isBudgeted = null;

  public static final String SERIALIZED_NAME_OPENING_REASON = "opening_reason";
  @SerializedName(SERIALIZED_NAME_OPENING_REASON)
  private Object openingReason = null;

  public static final String SERIALIZED_NAME_JUSTIFICATION_COMMENTS = "justification_comments";
  @SerializedName(SERIALIZED_NAME_JUSTIFICATION_COMMENTS)
  private List<Object> justificationComments = null;

  public static final String SERIALIZED_NAME_ORG_UNIT_GROUPS = "org_unit_groups";
  @SerializedName(SERIALIZED_NAME_ORG_UNIT_GROUPS)
  private List<OrgUnitGroups> orgUnitGroups = null;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private List<Links> links = null;

  public Opportunity() {
  }

  public Opportunity title(Object title) {
    
    
    
    
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTitle() {
    return title;
  }


  public void setTitle(Object title) {
    
    
    
    this.title = title;
  }


  public Opportunity description(OpportunityDescription description) {
    
    
    
    
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityDescription getDescription() {
    return description;
  }


  public void setDescription(OpportunityDescription description) {
    
    
    
    this.description = description;
  }


  public Opportunity id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * The id of the opportunity associated with the candidate application.
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The id of the opportunity associated with the candidate application.")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public Opportunity updatedAt(Object updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(Object updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }


  public Opportunity createdAt(Object createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(Object createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public Opportunity requisitionNumber(Object requisitionNumber) {
    
    
    
    
    this.requisitionNumber = requisitionNumber;
    return this;
  }

   /**
   * Get requisitionNumber
   * @return requisitionNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getRequisitionNumber() {
    return requisitionNumber;
  }


  public void setRequisitionNumber(Object requisitionNumber) {
    
    
    
    this.requisitionNumber = requisitionNumber;
  }


  public Opportunity dedaultLocale(OpportunityDedaultLocale dedaultLocale) {
    
    
    
    
    this.dedaultLocale = dedaultLocale;
    return this;
  }

   /**
   * Get dedaultLocale
   * @return dedaultLocale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityDedaultLocale getDedaultLocale() {
    return dedaultLocale;
  }


  public void setDedaultLocale(OpportunityDedaultLocale dedaultLocale) {
    
    
    
    this.dedaultLocale = dedaultLocale;
  }


  public Opportunity compenasation(OpportunityCompenasation compenasation) {
    
    
    
    
    this.compenasation = compenasation;
    return this;
  }

   /**
   * Get compenasation
   * @return compenasation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityCompenasation getCompenasation() {
    return compenasation;
  }


  public void setCompenasation(OpportunityCompenasation compenasation) {
    
    
    
    this.compenasation = compenasation;
  }


  public Opportunity job(OpportunityCompenasationCurrency job) {
    
    
    
    
    this.job = job;
    return this;
  }

   /**
   * Get job
   * @return job
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityCompenasationCurrency getJob() {
    return job;
  }


  public void setJob(OpportunityCompenasationCurrency job) {
    
    
    
    this.job = job;
  }


  public Opportunity jobFamily(OpportunityJobFamily jobFamily) {
    
    
    
    
    this.jobFamily = jobFamily;
    return this;
  }

   /**
   * Get jobFamily
   * @return jobFamily
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityJobFamily getJobFamily() {
    return jobFamily;
  }


  public void setJobFamily(OpportunityJobFamily jobFamily) {
    
    
    
    this.jobFamily = jobFamily;
  }


  public Opportunity locations(List<Locations> locations) {
    
    
    
    
    this.locations = locations;
    return this;
  }

  public Opportunity addLocationsItem(Locations locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

   /**
   * Get locations
   * @return locations
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Locations> getLocations() {
    return locations;
  }


  public void setLocations(List<Locations> locations) {
    
    
    
    this.locations = locations;
  }


  public Opportunity company(OpportunityCompany company) {
    
    
    
    
    this.company = company;
    return this;
  }

   /**
   * Get company
   * @return company
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityCompany getCompany() {
    return company;
  }


  public void setCompany(OpportunityCompany company) {
    
    
    
    this.company = company;
  }


  public Opportunity recruiter(Object recruiter) {
    
    
    
    
    this.recruiter = recruiter;
    return this;
  }

   /**
   * Get recruiter
   * @return recruiter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getRecruiter() {
    return recruiter;
  }


  public void setRecruiter(Object recruiter) {
    
    
    
    this.recruiter = recruiter;
  }


  public Opportunity hiringManager(Object hiringManager) {
    
    
    
    
    this.hiringManager = hiringManager;
    return this;
  }

   /**
   * Get hiringManager
   * @return hiringManager
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHiringManager() {
    return hiringManager;
  }


  public void setHiringManager(Object hiringManager) {
    
    
    
    this.hiringManager = hiringManager;
  }


  public Opportunity onboardingOwner(Object onboardingOwner) {
    
    
    
    
    this.onboardingOwner = onboardingOwner;
    return this;
  }

   /**
   * Get onboardingOwner
   * @return onboardingOwner
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOnboardingOwner() {
    return onboardingOwner;
  }


  public void setOnboardingOwner(Object onboardingOwner) {
    
    
    
    this.onboardingOwner = onboardingOwner;
  }


  public Opportunity recruitingProcess(OpportunityRecruitingProcess recruitingProcess) {
    
    
    
    
    this.recruitingProcess = recruitingProcess;
    return this;
  }

   /**
   * Get recruitingProcess
   * @return recruitingProcess
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityRecruitingProcess getRecruitingProcess() {
    return recruitingProcess;
  }


  public void setRecruitingProcess(OpportunityRecruitingProcess recruitingProcess) {
    
    
    
    this.recruitingProcess = recruitingProcess;
  }


  public Opportunity jobBoards(List<JobBoards> jobBoards) {
    
    
    
    
    this.jobBoards = jobBoards;
    return this;
  }

  public Opportunity addJobBoardsItem(JobBoards jobBoardsItem) {
    if (this.jobBoards == null) {
      this.jobBoards = new ArrayList<>();
    }
    this.jobBoards.add(jobBoardsItem);
    return this;
  }

   /**
   * Get jobBoards
   * @return jobBoards
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<JobBoards> getJobBoards() {
    return jobBoards;
  }


  public void setJobBoards(List<JobBoards> jobBoards) {
    
    
    
    this.jobBoards = jobBoards;
  }


  public Opportunity publishedDate(Object publishedDate) {
    
    
    
    
    this.publishedDate = publishedDate;
    return this;
  }

   /**
   * Get publishedDate
   * @return publishedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPublishedDate() {
    return publishedDate;
  }


  public void setPublishedDate(Object publishedDate) {
    
    
    
    this.publishedDate = publishedDate;
  }


  public Opportunity closedDate(Object closedDate) {
    
    
    
    
    this.closedDate = closedDate;
    return this;
  }

   /**
   * Get closedDate
   * @return closedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getClosedDate() {
    return closedDate;
  }


  public void setClosedDate(Object closedDate) {
    
    
    
    this.closedDate = closedDate;
  }


  public Opportunity status(Object status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getStatus() {
    return status;
  }


  public void setStatus(Object status) {
    
    
    
    this.status = status;
  }


  public Opportunity isFeatured(Object isFeatured) {
    
    
    
    
    this.isFeatured = isFeatured;
    return this;
  }

   /**
   * Get isFeatured
   * @return isFeatured
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getIsFeatured() {
    return isFeatured;
  }


  public void setIsFeatured(Object isFeatured) {
    
    
    
    this.isFeatured = isFeatured;
  }


  public Opportunity isSharedWithEveryone(Object isSharedWithEveryone) {
    
    
    
    
    this.isSharedWithEveryone = isSharedWithEveryone;
    return this;
  }

   /**
   * Get isSharedWithEveryone
   * @return isSharedWithEveryone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getIsSharedWithEveryone() {
    return isSharedWithEveryone;
  }


  public void setIsSharedWithEveryone(Object isSharedWithEveryone) {
    
    
    
    this.isSharedWithEveryone = isSharedWithEveryone;
  }


  public Opportunity internalNotes(Object internalNotes) {
    
    
    
    
    this.internalNotes = internalNotes;
    return this;
  }

   /**
   * Get internalNotes
   * @return internalNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getInternalNotes() {
    return internalNotes;
  }


  public void setInternalNotes(Object internalNotes) {
    
    
    
    this.internalNotes = internalNotes;
  }


  public Opportunity skillCriteria(List<Object> skillCriteria) {
    
    
    
    
    this.skillCriteria = skillCriteria;
    return this;
  }

  public Opportunity addSkillCriteriaItem(Object skillCriteriaItem) {
    if (this.skillCriteria == null) {
      this.skillCriteria = new ArrayList<>();
    }
    this.skillCriteria.add(skillCriteriaItem);
    return this;
  }

   /**
   * Get skillCriteria
   * @return skillCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getSkillCriteria() {
    return skillCriteria;
  }


  public void setSkillCriteria(List<Object> skillCriteria) {
    
    
    
    this.skillCriteria = skillCriteria;
  }


  public Opportunity workExperienceCriteria(List<Object> workExperienceCriteria) {
    
    
    
    
    this.workExperienceCriteria = workExperienceCriteria;
    return this;
  }

  public Opportunity addWorkExperienceCriteriaItem(Object workExperienceCriteriaItem) {
    if (this.workExperienceCriteria == null) {
      this.workExperienceCriteria = new ArrayList<>();
    }
    this.workExperienceCriteria.add(workExperienceCriteriaItem);
    return this;
  }

   /**
   * Get workExperienceCriteria
   * @return workExperienceCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getWorkExperienceCriteria() {
    return workExperienceCriteria;
  }


  public void setWorkExperienceCriteria(List<Object> workExperienceCriteria) {
    
    
    
    this.workExperienceCriteria = workExperienceCriteria;
  }


  public Opportunity educationCriteria(List<EducationCriteria> educationCriteria) {
    
    
    
    
    this.educationCriteria = educationCriteria;
    return this;
  }

  public Opportunity addEducationCriteriaItem(EducationCriteria educationCriteriaItem) {
    if (this.educationCriteria == null) {
      this.educationCriteria = new ArrayList<>();
    }
    this.educationCriteria.add(educationCriteriaItem);
    return this;
  }

   /**
   * Get educationCriteria
   * @return educationCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EducationCriteria> getEducationCriteria() {
    return educationCriteria;
  }


  public void setEducationCriteria(List<EducationCriteria> educationCriteria) {
    
    
    
    this.educationCriteria = educationCriteria;
  }


  public Opportunity licenseCriteria(List<Object> licenseCriteria) {
    
    
    
    
    this.licenseCriteria = licenseCriteria;
    return this;
  }

  public Opportunity addLicenseCriteriaItem(Object licenseCriteriaItem) {
    if (this.licenseCriteria == null) {
      this.licenseCriteria = new ArrayList<>();
    }
    this.licenseCriteria.add(licenseCriteriaItem);
    return this;
  }

   /**
   * Get licenseCriteria
   * @return licenseCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getLicenseCriteria() {
    return licenseCriteria;
  }


  public void setLicenseCriteria(List<Object> licenseCriteria) {
    
    
    
    this.licenseCriteria = licenseCriteria;
  }


  public Opportunity behaviorCriteria(List<Object> behaviorCriteria) {
    
    
    
    
    this.behaviorCriteria = behaviorCriteria;
    return this;
  }

  public Opportunity addBehaviorCriteriaItem(Object behaviorCriteriaItem) {
    if (this.behaviorCriteria == null) {
      this.behaviorCriteria = new ArrayList<>();
    }
    this.behaviorCriteria.add(behaviorCriteriaItem);
    return this;
  }

   /**
   * Get behaviorCriteria
   * @return behaviorCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getBehaviorCriteria() {
    return behaviorCriteria;
  }


  public void setBehaviorCriteria(List<Object> behaviorCriteria) {
    
    
    
    this.behaviorCriteria = behaviorCriteria;
  }


  public Opportunity motivationCriteria(List<Object> motivationCriteria) {
    
    
    
    
    this.motivationCriteria = motivationCriteria;
    return this;
  }

  public Opportunity addMotivationCriteriaItem(Object motivationCriteriaItem) {
    if (this.motivationCriteria == null) {
      this.motivationCriteria = new ArrayList<>();
    }
    this.motivationCriteria.add(motivationCriteriaItem);
    return this;
  }

   /**
   * Get motivationCriteria
   * @return motivationCriteria
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getMotivationCriteria() {
    return motivationCriteria;
  }


  public void setMotivationCriteria(List<Object> motivationCriteria) {
    
    
    
    this.motivationCriteria = motivationCriteria;
  }


  public Opportunity isContinuousOpening(Boolean isContinuousOpening) {
    
    
    
    
    this.isContinuousOpening = isContinuousOpening;
    return this;
  }

   /**
   * Get isContinuousOpening
   * @return isContinuousOpening
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsContinuousOpening() {
    return isContinuousOpening;
  }


  public void setIsContinuousOpening(Boolean isContinuousOpening) {
    
    
    
    this.isContinuousOpening = isContinuousOpening;
  }


  public Opportunity fullTimeEquivalent(OpportunityFullTimeEquivalent fullTimeEquivalent) {
    
    
    
    
    this.fullTimeEquivalent = fullTimeEquivalent;
    return this;
  }

   /**
   * Get fullTimeEquivalent
   * @return fullTimeEquivalent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityFullTimeEquivalent getFullTimeEquivalent() {
    return fullTimeEquivalent;
  }


  public void setFullTimeEquivalent(OpportunityFullTimeEquivalent fullTimeEquivalent) {
    
    
    
    this.fullTimeEquivalent = fullTimeEquivalent;
  }


  public Opportunity headCount(OpportunityHeadCount headCount) {
    
    
    
    
    this.headCount = headCount;
    return this;
  }

   /**
   * Get headCount
   * @return headCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityHeadCount getHeadCount() {
    return headCount;
  }


  public void setHeadCount(OpportunityHeadCount headCount) {
    
    
    
    this.headCount = headCount;
  }


  public Opportunity hoursPerWeek(Object hoursPerWeek) {
    
    
    
    
    this.hoursPerWeek = hoursPerWeek;
    return this;
  }

   /**
   * Get hoursPerWeek
   * @return hoursPerWeek
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHoursPerWeek() {
    return hoursPerWeek;
  }


  public void setHoursPerWeek(Object hoursPerWeek) {
    
    
    
    this.hoursPerWeek = hoursPerWeek;
  }


  public Opportunity hoursPerShift(Object hoursPerShift) {
    
    
    
    
    this.hoursPerShift = hoursPerShift;
    return this;
  }

   /**
   * Get hoursPerShift
   * @return hoursPerShift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getHoursPerShift() {
    return hoursPerShift;
  }


  public void setHoursPerShift(Object hoursPerShift) {
    
    
    
    this.hoursPerShift = hoursPerShift;
  }


  public Opportunity staffingPlanImpact(Object staffingPlanImpact) {
    
    
    
    
    this.staffingPlanImpact = staffingPlanImpact;
    return this;
  }

   /**
   * Get staffingPlanImpact
   * @return staffingPlanImpact
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getStaffingPlanImpact() {
    return staffingPlanImpact;
  }


  public void setStaffingPlanImpact(Object staffingPlanImpact) {
    
    
    
    this.staffingPlanImpact = staffingPlanImpact;
  }


  public Opportunity targetStartDate(Object targetStartDate) {
    
    
    
    
    this.targetStartDate = targetStartDate;
    return this;
  }

   /**
   * Get targetStartDate
   * @return targetStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getTargetStartDate() {
    return targetStartDate;
  }


  public void setTargetStartDate(Object targetStartDate) {
    
    
    
    this.targetStartDate = targetStartDate;
  }


  public Opportunity incumbent(OpportunityIncumbent incumbent) {
    
    
    
    
    this.incumbent = incumbent;
    return this;
  }

   /**
   * Get incumbent
   * @return incumbent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpportunityIncumbent getIncumbent() {
    return incumbent;
  }


  public void setIncumbent(OpportunityIncumbent incumbent) {
    
    
    
    this.incumbent = incumbent;
  }


  public Opportunity priority(Object priority) {
    
    
    
    
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getPriority() {
    return priority;
  }


  public void setPriority(Object priority) {
    
    
    
    this.priority = priority;
  }


  public Opportunity isBudgeted(Object isBudgeted) {
    
    
    
    
    this.isBudgeted = isBudgeted;
    return this;
  }

   /**
   * Get isBudgeted
   * @return isBudgeted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getIsBudgeted() {
    return isBudgeted;
  }


  public void setIsBudgeted(Object isBudgeted) {
    
    
    
    this.isBudgeted = isBudgeted;
  }


  public Opportunity openingReason(Object openingReason) {
    
    
    
    
    this.openingReason = openingReason;
    return this;
  }

   /**
   * Get openingReason
   * @return openingReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Object getOpeningReason() {
    return openingReason;
  }


  public void setOpeningReason(Object openingReason) {
    
    
    
    this.openingReason = openingReason;
  }


  public Opportunity justificationComments(List<Object> justificationComments) {
    
    
    
    
    this.justificationComments = justificationComments;
    return this;
  }

  public Opportunity addJustificationCommentsItem(Object justificationCommentsItem) {
    if (this.justificationComments == null) {
      this.justificationComments = new ArrayList<>();
    }
    this.justificationComments.add(justificationCommentsItem);
    return this;
  }

   /**
   * Get justificationComments
   * @return justificationComments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Object> getJustificationComments() {
    return justificationComments;
  }


  public void setJustificationComments(List<Object> justificationComments) {
    
    
    
    this.justificationComments = justificationComments;
  }


  public Opportunity orgUnitGroups(List<OrgUnitGroups> orgUnitGroups) {
    
    
    
    
    this.orgUnitGroups = orgUnitGroups;
    return this;
  }

  public Opportunity addOrgUnitGroupsItem(OrgUnitGroups orgUnitGroupsItem) {
    if (this.orgUnitGroups == null) {
      this.orgUnitGroups = new ArrayList<>();
    }
    this.orgUnitGroups.add(orgUnitGroupsItem);
    return this;
  }

   /**
   * Get orgUnitGroups
   * @return orgUnitGroups
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<OrgUnitGroups> getOrgUnitGroups() {
    return orgUnitGroups;
  }


  public void setOrgUnitGroups(List<OrgUnitGroups> orgUnitGroups) {
    
    
    
    this.orgUnitGroups = orgUnitGroups;
  }


  public Opportunity links(List<Links> links) {
    
    
    
    
    this.links = links;
    return this;
  }

  public Opportunity addLinksItem(Links linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<Links> getLinks() {
    return links;
  }


  public void setLinks(List<Links> links) {
    
    
    
    this.links = links;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the Opportunity instance itself
   */
  public Opportunity putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Opportunity opportunity = (Opportunity) o;
    return Objects.equals(this.title, opportunity.title) &&
        Objects.equals(this.description, opportunity.description) &&
        Objects.equals(this.id, opportunity.id) &&
        Objects.equals(this.updatedAt, opportunity.updatedAt) &&
        Objects.equals(this.createdAt, opportunity.createdAt) &&
        Objects.equals(this.requisitionNumber, opportunity.requisitionNumber) &&
        Objects.equals(this.dedaultLocale, opportunity.dedaultLocale) &&
        Objects.equals(this.compenasation, opportunity.compenasation) &&
        Objects.equals(this.job, opportunity.job) &&
        Objects.equals(this.jobFamily, opportunity.jobFamily) &&
        Objects.equals(this.locations, opportunity.locations) &&
        Objects.equals(this.company, opportunity.company) &&
        Objects.equals(this.recruiter, opportunity.recruiter) &&
        Objects.equals(this.hiringManager, opportunity.hiringManager) &&
        Objects.equals(this.onboardingOwner, opportunity.onboardingOwner) &&
        Objects.equals(this.recruitingProcess, opportunity.recruitingProcess) &&
        Objects.equals(this.jobBoards, opportunity.jobBoards) &&
        Objects.equals(this.publishedDate, opportunity.publishedDate) &&
        Objects.equals(this.closedDate, opportunity.closedDate) &&
        Objects.equals(this.status, opportunity.status) &&
        Objects.equals(this.isFeatured, opportunity.isFeatured) &&
        Objects.equals(this.isSharedWithEveryone, opportunity.isSharedWithEveryone) &&
        Objects.equals(this.internalNotes, opportunity.internalNotes) &&
        Objects.equals(this.skillCriteria, opportunity.skillCriteria) &&
        Objects.equals(this.workExperienceCriteria, opportunity.workExperienceCriteria) &&
        Objects.equals(this.educationCriteria, opportunity.educationCriteria) &&
        Objects.equals(this.licenseCriteria, opportunity.licenseCriteria) &&
        Objects.equals(this.behaviorCriteria, opportunity.behaviorCriteria) &&
        Objects.equals(this.motivationCriteria, opportunity.motivationCriteria) &&
        Objects.equals(this.isContinuousOpening, opportunity.isContinuousOpening) &&
        Objects.equals(this.fullTimeEquivalent, opportunity.fullTimeEquivalent) &&
        Objects.equals(this.headCount, opportunity.headCount) &&
        Objects.equals(this.hoursPerWeek, opportunity.hoursPerWeek) &&
        Objects.equals(this.hoursPerShift, opportunity.hoursPerShift) &&
        Objects.equals(this.staffingPlanImpact, opportunity.staffingPlanImpact) &&
        Objects.equals(this.targetStartDate, opportunity.targetStartDate) &&
        Objects.equals(this.incumbent, opportunity.incumbent) &&
        Objects.equals(this.priority, opportunity.priority) &&
        Objects.equals(this.isBudgeted, opportunity.isBudgeted) &&
        Objects.equals(this.openingReason, opportunity.openingReason) &&
        Objects.equals(this.justificationComments, opportunity.justificationComments) &&
        Objects.equals(this.orgUnitGroups, opportunity.orgUnitGroups) &&
        Objects.equals(this.links, opportunity.links)&&
        Objects.equals(this.additionalProperties, opportunity.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, description, id, updatedAt, createdAt, requisitionNumber, dedaultLocale, compenasation, job, jobFamily, locations, company, recruiter, hiringManager, onboardingOwner, recruitingProcess, jobBoards, publishedDate, closedDate, status, isFeatured, isSharedWithEveryone, internalNotes, skillCriteria, workExperienceCriteria, educationCriteria, licenseCriteria, behaviorCriteria, motivationCriteria, isContinuousOpening, fullTimeEquivalent, headCount, hoursPerWeek, hoursPerShift, staffingPlanImpact, targetStartDate, incumbent, priority, isBudgeted, openingReason, justificationComments, orgUnitGroups, links, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Opportunity {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    requisitionNumber: ").append(toIndentedString(requisitionNumber)).append("\n");
    sb.append("    dedaultLocale: ").append(toIndentedString(dedaultLocale)).append("\n");
    sb.append("    compenasation: ").append(toIndentedString(compenasation)).append("\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    jobFamily: ").append(toIndentedString(jobFamily)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    recruiter: ").append(toIndentedString(recruiter)).append("\n");
    sb.append("    hiringManager: ").append(toIndentedString(hiringManager)).append("\n");
    sb.append("    onboardingOwner: ").append(toIndentedString(onboardingOwner)).append("\n");
    sb.append("    recruitingProcess: ").append(toIndentedString(recruitingProcess)).append("\n");
    sb.append("    jobBoards: ").append(toIndentedString(jobBoards)).append("\n");
    sb.append("    publishedDate: ").append(toIndentedString(publishedDate)).append("\n");
    sb.append("    closedDate: ").append(toIndentedString(closedDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    isFeatured: ").append(toIndentedString(isFeatured)).append("\n");
    sb.append("    isSharedWithEveryone: ").append(toIndentedString(isSharedWithEveryone)).append("\n");
    sb.append("    internalNotes: ").append(toIndentedString(internalNotes)).append("\n");
    sb.append("    skillCriteria: ").append(toIndentedString(skillCriteria)).append("\n");
    sb.append("    workExperienceCriteria: ").append(toIndentedString(workExperienceCriteria)).append("\n");
    sb.append("    educationCriteria: ").append(toIndentedString(educationCriteria)).append("\n");
    sb.append("    licenseCriteria: ").append(toIndentedString(licenseCriteria)).append("\n");
    sb.append("    behaviorCriteria: ").append(toIndentedString(behaviorCriteria)).append("\n");
    sb.append("    motivationCriteria: ").append(toIndentedString(motivationCriteria)).append("\n");
    sb.append("    isContinuousOpening: ").append(toIndentedString(isContinuousOpening)).append("\n");
    sb.append("    fullTimeEquivalent: ").append(toIndentedString(fullTimeEquivalent)).append("\n");
    sb.append("    headCount: ").append(toIndentedString(headCount)).append("\n");
    sb.append("    hoursPerWeek: ").append(toIndentedString(hoursPerWeek)).append("\n");
    sb.append("    hoursPerShift: ").append(toIndentedString(hoursPerShift)).append("\n");
    sb.append("    staffingPlanImpact: ").append(toIndentedString(staffingPlanImpact)).append("\n");
    sb.append("    targetStartDate: ").append(toIndentedString(targetStartDate)).append("\n");
    sb.append("    incumbent: ").append(toIndentedString(incumbent)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    isBudgeted: ").append(toIndentedString(isBudgeted)).append("\n");
    sb.append("    openingReason: ").append(toIndentedString(openingReason)).append("\n");
    sb.append("    justificationComments: ").append(toIndentedString(justificationComments)).append("\n");
    sb.append("    orgUnitGroups: ").append(toIndentedString(orgUnitGroups)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("updated_at");
    openapiFields.add("created_at");
    openapiFields.add("requisition_number");
    openapiFields.add("dedault_locale");
    openapiFields.add("compenasation");
    openapiFields.add("job");
    openapiFields.add("job_family");
    openapiFields.add("locations");
    openapiFields.add("company");
    openapiFields.add("recruiter");
    openapiFields.add("hiring_manager");
    openapiFields.add("onboarding_owner");
    openapiFields.add("recruiting_process");
    openapiFields.add("job_boards");
    openapiFields.add("published_date");
    openapiFields.add("closed_date");
    openapiFields.add("status");
    openapiFields.add("is_featured");
    openapiFields.add("is_shared_with_everyone");
    openapiFields.add("internal_notes");
    openapiFields.add("skill_criteria");
    openapiFields.add("work_experience_criteria");
    openapiFields.add("education_criteria");
    openapiFields.add("license_criteria");
    openapiFields.add("behavior_criteria");
    openapiFields.add("motivation_criteria");
    openapiFields.add("is_continuous_opening");
    openapiFields.add("full_time_equivalent");
    openapiFields.add("head_count");
    openapiFields.add("hours_per_week");
    openapiFields.add("hours_per_shift");
    openapiFields.add("staffing_plan_impact");
    openapiFields.add("target_start_date");
    openapiFields.add("incumbent");
    openapiFields.add("priority");
    openapiFields.add("is_budgeted");
    openapiFields.add("opening_reason");
    openapiFields.add("justification_comments");
    openapiFields.add("org_unit_groups");
    openapiFields.add("links");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to Opportunity
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!Opportunity.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Opportunity is not found in the empty JSON string", Opportunity.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        OpportunityDescription.validateJsonObject(jsonObj.getAsJsonObject("description"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `dedault_locale`
      if (jsonObj.get("dedault_locale") != null && !jsonObj.get("dedault_locale").isJsonNull()) {
        OpportunityDedaultLocale.validateJsonObject(jsonObj.getAsJsonObject("dedault_locale"));
      }
      // validate the optional field `compenasation`
      if (jsonObj.get("compenasation") != null && !jsonObj.get("compenasation").isJsonNull()) {
        OpportunityCompenasation.validateJsonObject(jsonObj.getAsJsonObject("compenasation"));
      }
      // validate the optional field `job`
      if (jsonObj.get("job") != null && !jsonObj.get("job").isJsonNull()) {
        OpportunityCompenasationCurrency.validateJsonObject(jsonObj.getAsJsonObject("job"));
      }
      // validate the optional field `job_family`
      if (jsonObj.get("job_family") != null && !jsonObj.get("job_family").isJsonNull()) {
        OpportunityJobFamily.validateJsonObject(jsonObj.getAsJsonObject("job_family"));
      }
      if (jsonObj.get("locations") != null && !jsonObj.get("locations").isJsonNull()) {
        JsonArray jsonArraylocations = jsonObj.getAsJsonArray("locations");
        if (jsonArraylocations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("locations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `locations` to be an array in the JSON string but got `%s`", jsonObj.get("locations").toString()));
          }

          // validate the optional field `locations` (array)
          for (int i = 0; i < jsonArraylocations.size(); i++) {
            Locations.validateJsonObject(jsonArraylocations.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `company`
      if (jsonObj.get("company") != null && !jsonObj.get("company").isJsonNull()) {
        OpportunityCompany.validateJsonObject(jsonObj.getAsJsonObject("company"));
      }
      // validate the optional field `recruiting_process`
      if (jsonObj.get("recruiting_process") != null && !jsonObj.get("recruiting_process").isJsonNull()) {
        OpportunityRecruitingProcess.validateJsonObject(jsonObj.getAsJsonObject("recruiting_process"));
      }
      if (jsonObj.get("job_boards") != null && !jsonObj.get("job_boards").isJsonNull()) {
        JsonArray jsonArrayjobBoards = jsonObj.getAsJsonArray("job_boards");
        if (jsonArrayjobBoards != null) {
          // ensure the json data is an array
          if (!jsonObj.get("job_boards").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `job_boards` to be an array in the JSON string but got `%s`", jsonObj.get("job_boards").toString()));
          }

          // validate the optional field `job_boards` (array)
          for (int i = 0; i < jsonArrayjobBoards.size(); i++) {
            JobBoards.validateJsonObject(jsonArrayjobBoards.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("skill_criteria") != null && !jsonObj.get("skill_criteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `skill_criteria` to be an array in the JSON string but got `%s`", jsonObj.get("skill_criteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("work_experience_criteria") != null && !jsonObj.get("work_experience_criteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_experience_criteria` to be an array in the JSON string but got `%s`", jsonObj.get("work_experience_criteria").toString()));
      }
      if (jsonObj.get("education_criteria") != null && !jsonObj.get("education_criteria").isJsonNull()) {
        JsonArray jsonArrayeducationCriteria = jsonObj.getAsJsonArray("education_criteria");
        if (jsonArrayeducationCriteria != null) {
          // ensure the json data is an array
          if (!jsonObj.get("education_criteria").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `education_criteria` to be an array in the JSON string but got `%s`", jsonObj.get("education_criteria").toString()));
          }

          // validate the optional field `education_criteria` (array)
          for (int i = 0; i < jsonArrayeducationCriteria.size(); i++) {
            EducationCriteria.validateJsonObject(jsonArrayeducationCriteria.get(i).getAsJsonObject());
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("license_criteria") != null && !jsonObj.get("license_criteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `license_criteria` to be an array in the JSON string but got `%s`", jsonObj.get("license_criteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("behavior_criteria") != null && !jsonObj.get("behavior_criteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `behavior_criteria` to be an array in the JSON string but got `%s`", jsonObj.get("behavior_criteria").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("motivation_criteria") != null && !jsonObj.get("motivation_criteria").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `motivation_criteria` to be an array in the JSON string but got `%s`", jsonObj.get("motivation_criteria").toString()));
      }
      // validate the optional field `full_time_equivalent`
      if (jsonObj.get("full_time_equivalent") != null && !jsonObj.get("full_time_equivalent").isJsonNull()) {
        OpportunityFullTimeEquivalent.validateJsonObject(jsonObj.getAsJsonObject("full_time_equivalent"));
      }
      // validate the optional field `head_count`
      if (jsonObj.get("head_count") != null && !jsonObj.get("head_count").isJsonNull()) {
        OpportunityHeadCount.validateJsonObject(jsonObj.getAsJsonObject("head_count"));
      }
      // validate the optional field `incumbent`
      if (jsonObj.get("incumbent") != null && !jsonObj.get("incumbent").isJsonNull()) {
        OpportunityIncumbent.validateJsonObject(jsonObj.getAsJsonObject("incumbent"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("justification_comments") != null && !jsonObj.get("justification_comments").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `justification_comments` to be an array in the JSON string but got `%s`", jsonObj.get("justification_comments").toString()));
      }
      if (jsonObj.get("org_unit_groups") != null && !jsonObj.get("org_unit_groups").isJsonNull()) {
        JsonArray jsonArrayorgUnitGroups = jsonObj.getAsJsonArray("org_unit_groups");
        if (jsonArrayorgUnitGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("org_unit_groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `org_unit_groups` to be an array in the JSON string but got `%s`", jsonObj.get("org_unit_groups").toString()));
          }

          // validate the optional field `org_unit_groups` (array)
          for (int i = 0; i < jsonArrayorgUnitGroups.size(); i++) {
            OrgUnitGroups.validateJsonObject(jsonArrayorgUnitGroups.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("links") != null && !jsonObj.get("links").isJsonNull()) {
        JsonArray jsonArraylinks = jsonObj.getAsJsonArray("links");
        if (jsonArraylinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("links").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `links` to be an array in the JSON string but got `%s`", jsonObj.get("links").toString()));
          }

          // validate the optional field `links` (array)
          for (int i = 0; i < jsonArraylinks.size(); i++) {
            Links.validateJsonObject(jsonArraylinks.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Opportunity.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Opportunity' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Opportunity> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Opportunity.class));

       return (TypeAdapter<T>) new TypeAdapter<Opportunity>() {
           @Override
           public void write(JsonWriter out, Opportunity value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public Opportunity read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             Opportunity instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of Opportunity given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of Opportunity
  * @throws IOException if the JSON string is invalid with respect to Opportunity
  */
  public static Opportunity fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Opportunity.class);
  }

 /**
  * Convert an instance of Opportunity to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

