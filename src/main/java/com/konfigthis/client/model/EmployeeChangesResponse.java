/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeeChangesResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeChangesResponse {
  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_PREFERRED_NAME = "preferredName";
  @SerializedName(SERIALIZED_NAME_PREFERRED_NAME)
  private String preferredName;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private Double employeeNumber;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_PERSON_ID = "personId";
  @SerializedName(SERIALIZED_NAME_PERSON_ID)
  private String personId;

  public static final String SERIALIZED_NAME_USER_INTEGRATION_KEY = "userIntegrationKey";
  @SerializedName(SERIALIZED_NAME_USER_INTEGRATION_KEY)
  private String userIntegrationKey;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_SUPERVISOR_ID = "supervisorId";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_ID)
  private String supervisorId;

  public static final String SERIALIZED_NAME_SALARY_OR_HOURLY = "salaryOrHourly";
  @SerializedName(SERIALIZED_NAME_SALARY_OR_HOURLY)
  private String salaryOrHourly;

  public static final String SERIALIZED_NAME_FULL_TIME_OR_PART_TIME = "fullTimeOrPartTime";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_OR_PART_TIME)
  private String fullTimeOrPartTime;

  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_WORK_LOCATION = "workLocation";
  @SerializedName(SERIALIZED_NAME_WORK_LOCATION)
  private String workLocation;

  public static final String SERIALIZED_NAME_JOB_CODE = "jobCode";
  @SerializedName(SERIALIZED_NAME_JOB_CODE)
  private String jobCode;

  public static final String SERIALIZED_NAME_PROJECT_CODE = "projectCode";
  @SerializedName(SERIALIZED_NAME_PROJECT_CODE)
  private String projectCode;

  public static final String SERIALIZED_NAME_ORG_LEVEL1_CODE = "orgLevel1Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL1_CODE)
  private String orgLevel1Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL2_CODE = "orgLevel2Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL2_CODE)
  private String orgLevel2Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL3_CODE = "orgLevel3Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL3_CODE)
  private String orgLevel3Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL4_CODE = "orgLevel4Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL4_CODE)
  private String orgLevel4Code;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_WORK_PHONE = "workPhone";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE)
  private String workPhone;

  public static final String SERIALIZED_NAME_HOME_PHONE = "homePhone";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE)
  private String homePhone;

  public static final String SERIALIZED_NAME_EMPLOYEE_ADDRESS1 = "employeeAddress1";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ADDRESS1)
  private String employeeAddress1;

  public static final String SERIALIZED_NAME_EMPLOYEE_ADDRESS2 = "employeeAddress2";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ADDRESS2)
  private String employeeAddress2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zipCode";
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private String zipCode;

  public static final String SERIALIZED_NAME_TERMINATION_DATE = "terminationDate";
  @SerializedName(SERIALIZED_NAME_TERMINATION_DATE)
  private String terminationDate;

  public static final String SERIALIZED_NAME_HIRE_DATE = "hireDate";
  @SerializedName(SERIALIZED_NAME_HIRE_DATE)
  private String hireDate;

  public static final String SERIALIZED_NAME_SUPERVISOR_NAME = "supervisorName";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_NAME)
  private String supervisorName;

  public static final String SERIALIZED_NAME_PREFIX = "prefix";
  @SerializedName(SERIALIZED_NAME_PREFIX)
  private String prefix;

  public static final String SERIALIZED_NAME_SUFFIX = "suffix";
  @SerializedName(SERIALIZED_NAME_SUFFIX)
  private String suffix;

  public static final String SERIALIZED_NAME_ALTERNATE_EMAIL_ADDRESS = "alternateEmailAddress";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_EMAIL_ADDRESS)
  private String alternateEmailAddress;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_EMPLOYEE_STATUS = "employeeStatus";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_STATUS)
  private String employeeStatus;

  public static final String SERIALIZED_NAME_EMPLOYEE_TYPE = "employeeType";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TYPE)
  private String employeeType;

  public static final String SERIALIZED_NAME_EMPL_STATUS_START_DATE = "emplStatusStartDate";
  @SerializedName(SERIALIZED_NAME_EMPL_STATUS_START_DATE)
  private String emplStatusStartDate;

  public static final String SERIALIZED_NAME_DATE_IN_JOB = "dateInJob";
  @SerializedName(SERIALIZED_NAME_DATE_IN_JOB)
  private String dateInJob;

  public static final String SERIALIZED_NAME_DATE_OF_LAST_HIRE = "dateOfLastHire";
  @SerializedName(SERIALIZED_NAME_DATE_OF_LAST_HIRE)
  private String dateOfLastHire;

  public static final String SERIALIZED_NAME_JOB_GROUP_CODE = "jobGroupCode";
  @SerializedName(SERIALIZED_NAME_JOB_GROUP_CODE)
  private String jobGroupCode;

  public static final String SERIALIZED_NAME_ALTERNATE_JOB_TITLE = "alternateJobTitle";
  @SerializedName(SERIALIZED_NAME_ALTERNATE_JOB_TITLE)
  private String alternateJobTitle;

  public EmployeeChangesResponse() {
  }

  public EmployeeChangesResponse firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Employee First Name
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee First Name")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public EmployeeChangesResponse lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Employee Last Name
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Last Name")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public EmployeeChangesResponse preferredName(String preferredName) {
    
    
    
    
    this.preferredName = preferredName;
    return this;
  }

   /**
   * Employee Preferred Name
   * @return preferredName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Preferred Name")

  public String getPreferredName() {
    return preferredName;
  }


  public void setPreferredName(String preferredName) {
    
    
    
    this.preferredName = preferredName;
  }


  public EmployeeChangesResponse emailAddress(String emailAddress) {
    
    
    
    
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Employee Email Address
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Email Address")

  public String getEmailAddress() {
    return emailAddress;
  }


  public void setEmailAddress(String emailAddress) {
    
    
    
    this.emailAddress = emailAddress;
  }


  public EmployeeChangesResponse countryCode(String countryCode) {
    
    
    
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Employee Country Code
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Country Code")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    
    
    
    this.countryCode = countryCode;
  }


  public EmployeeChangesResponse languageCode(String languageCode) {
    
    
    
    
    this.languageCode = languageCode;
    return this;
  }

   /**
   * Employee Language Code
   * @return languageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Language Code")

  public String getLanguageCode() {
    return languageCode;
  }


  public void setLanguageCode(String languageCode) {
    
    
    
    this.languageCode = languageCode;
  }


  public EmployeeChangesResponse employeeNumber(Double employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

  public EmployeeChangesResponse employeeNumber(Integer employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber.doubleValue();
    return this;
  }

   /**
   * Employee Number
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Number")

  public Double getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(Double employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public EmployeeChangesResponse employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Employee Identifier
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Identifier")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EmployeeChangesResponse personId(String personId) {
    
    
    
    
    this.personId = personId;
    return this;
  }

   /**
   * Employee Person Identifier
   * @return personId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Person Identifier")

  public String getPersonId() {
    return personId;
  }


  public void setPersonId(String personId) {
    
    
    
    this.personId = personId;
  }


  public EmployeeChangesResponse userIntegrationKey(String userIntegrationKey) {
    
    
    
    
    this.userIntegrationKey = userIntegrationKey;
    return this;
  }

   /**
   * User Integration Key
   * @return userIntegrationKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "User Integration Key")

  public String getUserIntegrationKey() {
    return userIntegrationKey;
  }


  public void setUserIntegrationKey(String userIntegrationKey) {
    
    
    
    this.userIntegrationKey = userIntegrationKey;
  }


  public EmployeeChangesResponse companyName(String companyName) {
    
    
    
    
    this.companyName = companyName;
    return this;
  }

   /**
   * Employee Company Name
   * @return companyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Company Name")

  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    
    
    
    this.companyName = companyName;
  }


  public EmployeeChangesResponse companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Employee Company Identifier
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Company Identifier")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmployeeChangesResponse supervisorId(String supervisorId) {
    
    
    
    
    this.supervisorId = supervisorId;
    return this;
  }

   /**
   * Employee Surpervisor Identifier
   * @return supervisorId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Surpervisor Identifier")

  public String getSupervisorId() {
    return supervisorId;
  }


  public void setSupervisorId(String supervisorId) {
    
    
    
    this.supervisorId = supervisorId;
  }


  public EmployeeChangesResponse salaryOrHourly(String salaryOrHourly) {
    
    
    
    
    this.salaryOrHourly = salaryOrHourly;
    return this;
  }

   /**
   * Employee Hourly Salary
   * @return salaryOrHourly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Hourly Salary")

  public String getSalaryOrHourly() {
    return salaryOrHourly;
  }


  public void setSalaryOrHourly(String salaryOrHourly) {
    
    
    
    this.salaryOrHourly = salaryOrHourly;
  }


  public EmployeeChangesResponse fullTimeOrPartTime(String fullTimeOrPartTime) {
    
    
    
    
    this.fullTimeOrPartTime = fullTimeOrPartTime;
    return this;
  }

   /**
   * Full/Part Time Identifier
   * @return fullTimeOrPartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Full/Part Time Identifier")

  public String getFullTimeOrPartTime() {
    return fullTimeOrPartTime;
  }


  public void setFullTimeOrPartTime(String fullTimeOrPartTime) {
    
    
    
    this.fullTimeOrPartTime = fullTimeOrPartTime;
  }


  public EmployeeChangesResponse isActive(Boolean isActive) {
    
    
    
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Employee Active Flag
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Active Flag")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    
    
    
    this.isActive = isActive;
  }


  public EmployeeChangesResponse workLocation(String workLocation) {
    
    
    
    
    this.workLocation = workLocation;
    return this;
  }

   /**
   * Employee Work Location
   * @return workLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Work Location")

  public String getWorkLocation() {
    return workLocation;
  }


  public void setWorkLocation(String workLocation) {
    
    
    
    this.workLocation = workLocation;
  }


  public EmployeeChangesResponse jobCode(String jobCode) {
    
    
    
    
    this.jobCode = jobCode;
    return this;
  }

   /**
   * Employee Job Code
   * @return jobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Job Code")

  public String getJobCode() {
    return jobCode;
  }


  public void setJobCode(String jobCode) {
    
    
    
    this.jobCode = jobCode;
  }


  public EmployeeChangesResponse projectCode(String projectCode) {
    
    
    
    
    this.projectCode = projectCode;
    return this;
  }

   /**
   * Employee Project Code
   * @return projectCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Project Code")

  public String getProjectCode() {
    return projectCode;
  }


  public void setProjectCode(String projectCode) {
    
    
    
    this.projectCode = projectCode;
  }


  public EmployeeChangesResponse orgLevel1Code(String orgLevel1Code) {
    
    
    
    
    this.orgLevel1Code = orgLevel1Code;
    return this;
  }

   /**
   * Employee Orginizational Level 1
   * @return orgLevel1Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Orginizational Level 1")

  public String getOrgLevel1Code() {
    return orgLevel1Code;
  }


  public void setOrgLevel1Code(String orgLevel1Code) {
    
    
    
    this.orgLevel1Code = orgLevel1Code;
  }


  public EmployeeChangesResponse orgLevel2Code(String orgLevel2Code) {
    
    
    
    
    this.orgLevel2Code = orgLevel2Code;
    return this;
  }

   /**
   * Employee Orginizational Level 2
   * @return orgLevel2Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Orginizational Level 2")

  public String getOrgLevel2Code() {
    return orgLevel2Code;
  }


  public void setOrgLevel2Code(String orgLevel2Code) {
    
    
    
    this.orgLevel2Code = orgLevel2Code;
  }


  public EmployeeChangesResponse orgLevel3Code(String orgLevel3Code) {
    
    
    
    
    this.orgLevel3Code = orgLevel3Code;
    return this;
  }

   /**
   * Employee Orginizational Level 3
   * @return orgLevel3Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Orginizational Level 3")

  public String getOrgLevel3Code() {
    return orgLevel3Code;
  }


  public void setOrgLevel3Code(String orgLevel3Code) {
    
    
    
    this.orgLevel3Code = orgLevel3Code;
  }


  public EmployeeChangesResponse orgLevel4Code(String orgLevel4Code) {
    
    
    
    
    this.orgLevel4Code = orgLevel4Code;
    return this;
  }

   /**
   * Employee Orginizational Level 4
   * @return orgLevel4Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Orginizational Level 4")

  public String getOrgLevel4Code() {
    return orgLevel4Code;
  }


  public void setOrgLevel4Code(String orgLevel4Code) {
    
    
    
    this.orgLevel4Code = orgLevel4Code;
  }


  public EmployeeChangesResponse middleName(String middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Employee Middle Name
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Middle Name")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    
    
    
    this.middleName = middleName;
  }


  public EmployeeChangesResponse workPhone(String workPhone) {
    
    
    
    
    this.workPhone = workPhone;
    return this;
  }

   /**
   * Employee Work Phone
   * @return workPhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Work Phone")

  public String getWorkPhone() {
    return workPhone;
  }


  public void setWorkPhone(String workPhone) {
    
    
    
    this.workPhone = workPhone;
  }


  public EmployeeChangesResponse homePhone(String homePhone) {
    
    
    
    
    this.homePhone = homePhone;
    return this;
  }

   /**
   * Employee Home Phone
   * @return homePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Home Phone")

  public String getHomePhone() {
    return homePhone;
  }


  public void setHomePhone(String homePhone) {
    
    
    
    this.homePhone = homePhone;
  }


  public EmployeeChangesResponse employeeAddress1(String employeeAddress1) {
    
    
    
    
    this.employeeAddress1 = employeeAddress1;
    return this;
  }

   /**
   * Employee Address 1
   * @return employeeAddress1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Address 1")

  public String getEmployeeAddress1() {
    return employeeAddress1;
  }


  public void setEmployeeAddress1(String employeeAddress1) {
    
    
    
    this.employeeAddress1 = employeeAddress1;
  }


  public EmployeeChangesResponse employeeAddress2(String employeeAddress2) {
    
    
    
    
    this.employeeAddress2 = employeeAddress2;
    return this;
  }

   /**
   * Employee Address 2
   * @return employeeAddress2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Address 2")

  public String getEmployeeAddress2() {
    return employeeAddress2;
  }


  public void setEmployeeAddress2(String employeeAddress2) {
    
    
    
    this.employeeAddress2 = employeeAddress2;
  }


  public EmployeeChangesResponse city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Employee City
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee City")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public EmployeeChangesResponse state(String state) {
    
    
    
    
    this.state = state;
    return this;
  }

   /**
   * Employee State
   * @return state
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee State")

  public String getState() {
    return state;
  }


  public void setState(String state) {
    
    
    
    this.state = state;
  }


  public EmployeeChangesResponse zipCode(String zipCode) {
    
    
    
    
    this.zipCode = zipCode;
    return this;
  }

   /**
   * Employee Zip Code
   * @return zipCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Zip Code")

  public String getZipCode() {
    return zipCode;
  }


  public void setZipCode(String zipCode) {
    
    
    
    this.zipCode = zipCode;
  }


  public EmployeeChangesResponse terminationDate(String terminationDate) {
    
    
    
    
    this.terminationDate = terminationDate;
    return this;
  }

   /**
   * Employee Termination Date
   * @return terminationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Termination Date")

  public String getTerminationDate() {
    return terminationDate;
  }


  public void setTerminationDate(String terminationDate) {
    
    
    
    this.terminationDate = terminationDate;
  }


  public EmployeeChangesResponse hireDate(String hireDate) {
    
    
    
    
    this.hireDate = hireDate;
    return this;
  }

   /**
   * Employee Hire Date
   * @return hireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Hire Date")

  public String getHireDate() {
    return hireDate;
  }


  public void setHireDate(String hireDate) {
    
    
    
    this.hireDate = hireDate;
  }


  public EmployeeChangesResponse supervisorName(String supervisorName) {
    
    
    
    
    this.supervisorName = supervisorName;
    return this;
  }

   /**
   * Employee Supervisor Name
   * @return supervisorName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Supervisor Name")

  public String getSupervisorName() {
    return supervisorName;
  }


  public void setSupervisorName(String supervisorName) {
    
    
    
    this.supervisorName = supervisorName;
  }


  public EmployeeChangesResponse prefix(String prefix) {
    
    
    
    
    this.prefix = prefix;
    return this;
  }

   /**
   * Employee Name Prefix
   * @return prefix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Name Prefix")

  public String getPrefix() {
    return prefix;
  }


  public void setPrefix(String prefix) {
    
    
    
    this.prefix = prefix;
  }


  public EmployeeChangesResponse suffix(String suffix) {
    
    
    
    
    this.suffix = suffix;
    return this;
  }

   /**
   * Employee Name Suffix
   * @return suffix
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Name Suffix")

  public String getSuffix() {
    return suffix;
  }


  public void setSuffix(String suffix) {
    
    
    
    this.suffix = suffix;
  }


  public EmployeeChangesResponse alternateEmailAddress(String alternateEmailAddress) {
    
    
    
    
    this.alternateEmailAddress = alternateEmailAddress;
    return this;
  }

   /**
   * Employee Alternative Email Address
   * @return alternateEmailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Alternative Email Address")

  public String getAlternateEmailAddress() {
    return alternateEmailAddress;
  }


  public void setAlternateEmailAddress(String alternateEmailAddress) {
    
    
    
    this.alternateEmailAddress = alternateEmailAddress;
  }


  public EmployeeChangesResponse gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Employee Gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Gender")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public EmployeeChangesResponse employeeStatus(String employeeStatus) {
    
    
    
    
    this.employeeStatus = employeeStatus;
    return this;
  }

   /**
   * Employee Employment Status
   * @return employeeStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Employment Status")

  public String getEmployeeStatus() {
    return employeeStatus;
  }


  public void setEmployeeStatus(String employeeStatus) {
    
    
    
    this.employeeStatus = employeeStatus;
  }


  public EmployeeChangesResponse employeeType(String employeeType) {
    
    
    
    
    this.employeeType = employeeType;
    return this;
  }

   /**
   * Employee Type
   * @return employeeType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Type")

  public String getEmployeeType() {
    return employeeType;
  }


  public void setEmployeeType(String employeeType) {
    
    
    
    this.employeeType = employeeType;
  }


  public EmployeeChangesResponse emplStatusStartDate(String emplStatusStartDate) {
    
    
    
    
    this.emplStatusStartDate = emplStatusStartDate;
    return this;
  }

   /**
   * Employment Status Start Date
   * @return emplStatusStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employment Status Start Date")

  public String getEmplStatusStartDate() {
    return emplStatusStartDate;
  }


  public void setEmplStatusStartDate(String emplStatusStartDate) {
    
    
    
    this.emplStatusStartDate = emplStatusStartDate;
  }


  public EmployeeChangesResponse dateInJob(String dateInJob) {
    
    
    
    
    this.dateInJob = dateInJob;
    return this;
  }

   /**
   * Date Employee Started Current Job
   * @return dateInJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date Employee Started Current Job")

  public String getDateInJob() {
    return dateInJob;
  }


  public void setDateInJob(String dateInJob) {
    
    
    
    this.dateInJob = dateInJob;
  }


  public EmployeeChangesResponse dateOfLastHire(String dateOfLastHire) {
    
    
    
    
    this.dateOfLastHire = dateOfLastHire;
    return this;
  }

   /**
   * Date Employee Last Hired
   * @return dateOfLastHire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Date Employee Last Hired")

  public String getDateOfLastHire() {
    return dateOfLastHire;
  }


  public void setDateOfLastHire(String dateOfLastHire) {
    
    
    
    this.dateOfLastHire = dateOfLastHire;
  }


  public EmployeeChangesResponse jobGroupCode(String jobGroupCode) {
    
    
    
    
    this.jobGroupCode = jobGroupCode;
    return this;
  }

   /**
   * Employee Job Group Code
   * @return jobGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Employee Job Group Code")

  public String getJobGroupCode() {
    return jobGroupCode;
  }


  public void setJobGroupCode(String jobGroupCode) {
    
    
    
    this.jobGroupCode = jobGroupCode;
  }


  public EmployeeChangesResponse alternateJobTitle(String alternateJobTitle) {
    
    
    
    
    this.alternateJobTitle = alternateJobTitle;
    return this;
  }

   /**
   * Alternate Job Title for Employee
   * @return alternateJobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Alternate Job Title for Employee")

  public String getAlternateJobTitle() {
    return alternateJobTitle;
  }


  public void setAlternateJobTitle(String alternateJobTitle) {
    
    
    
    this.alternateJobTitle = alternateJobTitle;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeChangesResponse instance itself
   */
  public EmployeeChangesResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeChangesResponse employeeChangesResponse = (EmployeeChangesResponse) o;
    return Objects.equals(this.firstName, employeeChangesResponse.firstName) &&
        Objects.equals(this.lastName, employeeChangesResponse.lastName) &&
        Objects.equals(this.preferredName, employeeChangesResponse.preferredName) &&
        Objects.equals(this.emailAddress, employeeChangesResponse.emailAddress) &&
        Objects.equals(this.countryCode, employeeChangesResponse.countryCode) &&
        Objects.equals(this.languageCode, employeeChangesResponse.languageCode) &&
        Objects.equals(this.employeeNumber, employeeChangesResponse.employeeNumber) &&
        Objects.equals(this.employeeId, employeeChangesResponse.employeeId) &&
        Objects.equals(this.personId, employeeChangesResponse.personId) &&
        Objects.equals(this.userIntegrationKey, employeeChangesResponse.userIntegrationKey) &&
        Objects.equals(this.companyName, employeeChangesResponse.companyName) &&
        Objects.equals(this.companyId, employeeChangesResponse.companyId) &&
        Objects.equals(this.supervisorId, employeeChangesResponse.supervisorId) &&
        Objects.equals(this.salaryOrHourly, employeeChangesResponse.salaryOrHourly) &&
        Objects.equals(this.fullTimeOrPartTime, employeeChangesResponse.fullTimeOrPartTime) &&
        Objects.equals(this.isActive, employeeChangesResponse.isActive) &&
        Objects.equals(this.workLocation, employeeChangesResponse.workLocation) &&
        Objects.equals(this.jobCode, employeeChangesResponse.jobCode) &&
        Objects.equals(this.projectCode, employeeChangesResponse.projectCode) &&
        Objects.equals(this.orgLevel1Code, employeeChangesResponse.orgLevel1Code) &&
        Objects.equals(this.orgLevel2Code, employeeChangesResponse.orgLevel2Code) &&
        Objects.equals(this.orgLevel3Code, employeeChangesResponse.orgLevel3Code) &&
        Objects.equals(this.orgLevel4Code, employeeChangesResponse.orgLevel4Code) &&
        Objects.equals(this.middleName, employeeChangesResponse.middleName) &&
        Objects.equals(this.workPhone, employeeChangesResponse.workPhone) &&
        Objects.equals(this.homePhone, employeeChangesResponse.homePhone) &&
        Objects.equals(this.employeeAddress1, employeeChangesResponse.employeeAddress1) &&
        Objects.equals(this.employeeAddress2, employeeChangesResponse.employeeAddress2) &&
        Objects.equals(this.city, employeeChangesResponse.city) &&
        Objects.equals(this.state, employeeChangesResponse.state) &&
        Objects.equals(this.zipCode, employeeChangesResponse.zipCode) &&
        Objects.equals(this.terminationDate, employeeChangesResponse.terminationDate) &&
        Objects.equals(this.hireDate, employeeChangesResponse.hireDate) &&
        Objects.equals(this.supervisorName, employeeChangesResponse.supervisorName) &&
        Objects.equals(this.prefix, employeeChangesResponse.prefix) &&
        Objects.equals(this.suffix, employeeChangesResponse.suffix) &&
        Objects.equals(this.alternateEmailAddress, employeeChangesResponse.alternateEmailAddress) &&
        Objects.equals(this.gender, employeeChangesResponse.gender) &&
        Objects.equals(this.employeeStatus, employeeChangesResponse.employeeStatus) &&
        Objects.equals(this.employeeType, employeeChangesResponse.employeeType) &&
        Objects.equals(this.emplStatusStartDate, employeeChangesResponse.emplStatusStartDate) &&
        Objects.equals(this.dateInJob, employeeChangesResponse.dateInJob) &&
        Objects.equals(this.dateOfLastHire, employeeChangesResponse.dateOfLastHire) &&
        Objects.equals(this.jobGroupCode, employeeChangesResponse.jobGroupCode) &&
        Objects.equals(this.alternateJobTitle, employeeChangesResponse.alternateJobTitle)&&
        Objects.equals(this.additionalProperties, employeeChangesResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(firstName, lastName, preferredName, emailAddress, countryCode, languageCode, employeeNumber, employeeId, personId, userIntegrationKey, companyName, companyId, supervisorId, salaryOrHourly, fullTimeOrPartTime, isActive, workLocation, jobCode, projectCode, orgLevel1Code, orgLevel2Code, orgLevel3Code, orgLevel4Code, middleName, workPhone, homePhone, employeeAddress1, employeeAddress2, city, state, zipCode, terminationDate, hireDate, supervisorName, prefix, suffix, alternateEmailAddress, gender, employeeStatus, employeeType, emplStatusStartDate, dateInJob, dateOfLastHire, jobGroupCode, alternateJobTitle, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeChangesResponse {\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    preferredName: ").append(toIndentedString(preferredName)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    userIntegrationKey: ").append(toIndentedString(userIntegrationKey)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    supervisorId: ").append(toIndentedString(supervisorId)).append("\n");
    sb.append("    salaryOrHourly: ").append(toIndentedString(salaryOrHourly)).append("\n");
    sb.append("    fullTimeOrPartTime: ").append(toIndentedString(fullTimeOrPartTime)).append("\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    workLocation: ").append(toIndentedString(workLocation)).append("\n");
    sb.append("    jobCode: ").append(toIndentedString(jobCode)).append("\n");
    sb.append("    projectCode: ").append(toIndentedString(projectCode)).append("\n");
    sb.append("    orgLevel1Code: ").append(toIndentedString(orgLevel1Code)).append("\n");
    sb.append("    orgLevel2Code: ").append(toIndentedString(orgLevel2Code)).append("\n");
    sb.append("    orgLevel3Code: ").append(toIndentedString(orgLevel3Code)).append("\n");
    sb.append("    orgLevel4Code: ").append(toIndentedString(orgLevel4Code)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    workPhone: ").append(toIndentedString(workPhone)).append("\n");
    sb.append("    homePhone: ").append(toIndentedString(homePhone)).append("\n");
    sb.append("    employeeAddress1: ").append(toIndentedString(employeeAddress1)).append("\n");
    sb.append("    employeeAddress2: ").append(toIndentedString(employeeAddress2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("    terminationDate: ").append(toIndentedString(terminationDate)).append("\n");
    sb.append("    hireDate: ").append(toIndentedString(hireDate)).append("\n");
    sb.append("    supervisorName: ").append(toIndentedString(supervisorName)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("    suffix: ").append(toIndentedString(suffix)).append("\n");
    sb.append("    alternateEmailAddress: ").append(toIndentedString(alternateEmailAddress)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    employeeStatus: ").append(toIndentedString(employeeStatus)).append("\n");
    sb.append("    employeeType: ").append(toIndentedString(employeeType)).append("\n");
    sb.append("    emplStatusStartDate: ").append(toIndentedString(emplStatusStartDate)).append("\n");
    sb.append("    dateInJob: ").append(toIndentedString(dateInJob)).append("\n");
    sb.append("    dateOfLastHire: ").append(toIndentedString(dateOfLastHire)).append("\n");
    sb.append("    jobGroupCode: ").append(toIndentedString(jobGroupCode)).append("\n");
    sb.append("    alternateJobTitle: ").append(toIndentedString(alternateJobTitle)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("preferredName");
    openapiFields.add("emailAddress");
    openapiFields.add("countryCode");
    openapiFields.add("languageCode");
    openapiFields.add("employeeNumber");
    openapiFields.add("employeeId");
    openapiFields.add("personId");
    openapiFields.add("userIntegrationKey");
    openapiFields.add("companyName");
    openapiFields.add("companyId");
    openapiFields.add("supervisorId");
    openapiFields.add("salaryOrHourly");
    openapiFields.add("fullTimeOrPartTime");
    openapiFields.add("isActive");
    openapiFields.add("workLocation");
    openapiFields.add("jobCode");
    openapiFields.add("projectCode");
    openapiFields.add("orgLevel1Code");
    openapiFields.add("orgLevel2Code");
    openapiFields.add("orgLevel3Code");
    openapiFields.add("orgLevel4Code");
    openapiFields.add("middleName");
    openapiFields.add("workPhone");
    openapiFields.add("homePhone");
    openapiFields.add("employeeAddress1");
    openapiFields.add("employeeAddress2");
    openapiFields.add("city");
    openapiFields.add("state");
    openapiFields.add("zipCode");
    openapiFields.add("terminationDate");
    openapiFields.add("hireDate");
    openapiFields.add("supervisorName");
    openapiFields.add("prefix");
    openapiFields.add("suffix");
    openapiFields.add("alternateEmailAddress");
    openapiFields.add("gender");
    openapiFields.add("employeeStatus");
    openapiFields.add("employeeType");
    openapiFields.add("emplStatusStartDate");
    openapiFields.add("dateInJob");
    openapiFields.add("dateOfLastHire");
    openapiFields.add("jobGroupCode");
    openapiFields.add("alternateJobTitle");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeChangesResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeChangesResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeChangesResponse is not found in the empty JSON string", EmployeeChangesResponse.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("preferredName") != null && !jsonObj.get("preferredName").isJsonNull()) && !jsonObj.get("preferredName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredName").toString()));
      }
      if ((jsonObj.get("emailAddress") != null && !jsonObj.get("emailAddress").isJsonNull()) && !jsonObj.get("emailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailAddress").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("personId") != null && !jsonObj.get("personId").isJsonNull()) && !jsonObj.get("personId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personId").toString()));
      }
      if ((jsonObj.get("userIntegrationKey") != null && !jsonObj.get("userIntegrationKey").isJsonNull()) && !jsonObj.get("userIntegrationKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userIntegrationKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userIntegrationKey").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("supervisorId") != null && !jsonObj.get("supervisorId").isJsonNull()) && !jsonObj.get("supervisorId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorId").toString()));
      }
      if ((jsonObj.get("salaryOrHourly") != null && !jsonObj.get("salaryOrHourly").isJsonNull()) && !jsonObj.get("salaryOrHourly").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salaryOrHourly` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salaryOrHourly").toString()));
      }
      if ((jsonObj.get("fullTimeOrPartTime") != null && !jsonObj.get("fullTimeOrPartTime").isJsonNull()) && !jsonObj.get("fullTimeOrPartTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullTimeOrPartTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullTimeOrPartTime").toString()));
      }
      if ((jsonObj.get("workLocation") != null && !jsonObj.get("workLocation").isJsonNull()) && !jsonObj.get("workLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workLocation").toString()));
      }
      if ((jsonObj.get("jobCode") != null && !jsonObj.get("jobCode").isJsonNull()) && !jsonObj.get("jobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobCode").toString()));
      }
      if ((jsonObj.get("projectCode") != null && !jsonObj.get("projectCode").isJsonNull()) && !jsonObj.get("projectCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `projectCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("projectCode").toString()));
      }
      if ((jsonObj.get("orgLevel1Code") != null && !jsonObj.get("orgLevel1Code").isJsonNull()) && !jsonObj.get("orgLevel1Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel1Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel1Code").toString()));
      }
      if ((jsonObj.get("orgLevel2Code") != null && !jsonObj.get("orgLevel2Code").isJsonNull()) && !jsonObj.get("orgLevel2Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel2Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel2Code").toString()));
      }
      if ((jsonObj.get("orgLevel3Code") != null && !jsonObj.get("orgLevel3Code").isJsonNull()) && !jsonObj.get("orgLevel3Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel3Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel3Code").toString()));
      }
      if ((jsonObj.get("orgLevel4Code") != null && !jsonObj.get("orgLevel4Code").isJsonNull()) && !jsonObj.get("orgLevel4Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel4Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel4Code").toString()));
      }
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if ((jsonObj.get("workPhone") != null && !jsonObj.get("workPhone").isJsonNull()) && !jsonObj.get("workPhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhone").toString()));
      }
      if ((jsonObj.get("homePhone") != null && !jsonObj.get("homePhone").isJsonNull()) && !jsonObj.get("homePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhone").toString()));
      }
      if ((jsonObj.get("employeeAddress1") != null && !jsonObj.get("employeeAddress1").isJsonNull()) && !jsonObj.get("employeeAddress1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeAddress1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeAddress1").toString()));
      }
      if ((jsonObj.get("employeeAddress2") != null && !jsonObj.get("employeeAddress2").isJsonNull()) && !jsonObj.get("employeeAddress2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeAddress2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeAddress2").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("zipCode") != null && !jsonObj.get("zipCode").isJsonNull()) && !jsonObj.get("zipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zipCode").toString()));
      }
      if ((jsonObj.get("terminationDate") != null && !jsonObj.get("terminationDate").isJsonNull()) && !jsonObj.get("terminationDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `terminationDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("terminationDate").toString()));
      }
      if ((jsonObj.get("hireDate") != null && !jsonObj.get("hireDate").isJsonNull()) && !jsonObj.get("hireDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hireDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hireDate").toString()));
      }
      if ((jsonObj.get("supervisorName") != null && !jsonObj.get("supervisorName").isJsonNull()) && !jsonObj.get("supervisorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorName").toString()));
      }
      if ((jsonObj.get("prefix") != null && !jsonObj.get("prefix").isJsonNull()) && !jsonObj.get("prefix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `prefix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("prefix").toString()));
      }
      if ((jsonObj.get("suffix") != null && !jsonObj.get("suffix").isJsonNull()) && !jsonObj.get("suffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suffix").toString()));
      }
      if ((jsonObj.get("alternateEmailAddress") != null && !jsonObj.get("alternateEmailAddress").isJsonNull()) && !jsonObj.get("alternateEmailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternateEmailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternateEmailAddress").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("employeeStatus") != null && !jsonObj.get("employeeStatus").isJsonNull()) && !jsonObj.get("employeeStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeStatus").toString()));
      }
      if ((jsonObj.get("employeeType") != null && !jsonObj.get("employeeType").isJsonNull()) && !jsonObj.get("employeeType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeType").toString()));
      }
      if ((jsonObj.get("emplStatusStartDate") != null && !jsonObj.get("emplStatusStartDate").isJsonNull()) && !jsonObj.get("emplStatusStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emplStatusStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emplStatusStartDate").toString()));
      }
      if ((jsonObj.get("dateInJob") != null && !jsonObj.get("dateInJob").isJsonNull()) && !jsonObj.get("dateInJob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateInJob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateInJob").toString()));
      }
      if ((jsonObj.get("dateOfLastHire") != null && !jsonObj.get("dateOfLastHire").isJsonNull()) && !jsonObj.get("dateOfLastHire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateOfLastHire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateOfLastHire").toString()));
      }
      if ((jsonObj.get("jobGroupCode") != null && !jsonObj.get("jobGroupCode").isJsonNull()) && !jsonObj.get("jobGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobGroupCode").toString()));
      }
      if ((jsonObj.get("alternateJobTitle") != null && !jsonObj.get("alternateJobTitle").isJsonNull()) && !jsonObj.get("alternateJobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alternateJobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alternateJobTitle").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeChangesResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeChangesResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeChangesResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeChangesResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeChangesResponse>() {
           @Override
           public void write(JsonWriter out, EmployeeChangesResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeChangesResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeChangesResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeChangesResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeChangesResponse
  * @throws IOException if the JSON string is invalid with respect to EmployeeChangesResponse
  */
  public static EmployeeChangesResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeChangesResponse.class);
  }

 /**
  * Convert an instance of EmployeeChangesResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

