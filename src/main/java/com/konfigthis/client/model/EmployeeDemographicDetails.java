/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeeDemographicDetails
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeeDemographicDetails {
  public static final String SERIALIZED_NAME_ETHNIC_DESCRIPTION = "ethnicDescription";
  @SerializedName(SERIALIZED_NAME_ETHNIC_DESCRIPTION)
  private String ethnicDescription;

  public static final String SERIALIZED_NAME_ADDITIONAL_NAME1 = "additionalName1";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_NAME1)
  private String additionalName1;

  public static final String SERIALIZED_NAME_ADDITIONAL_NAME2 = "additionalName2";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_NAME2)
  private String additionalName2;

  public static final String SERIALIZED_NAME_ADDRESS_ID = "addressId";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ID)
  private String addressId;

  public static final String SERIALIZED_NAME_ADDRESS_IS_ON_TAX_BOUNDARY = "addressIsOnTaxBoundary";
  @SerializedName(SERIALIZED_NAME_ADDRESS_IS_ON_TAX_BOUNDARY)
  private String addressIsOnTaxBoundary;

  public static final String SERIALIZED_NAME_ADDRESS_LATITUDE = "addressLatitude";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LATITUDE)
  private Double addressLatitude;

  public static final String SERIALIZED_NAME_DISABILITY_TYPE = "disabilityType";
  @SerializedName(SERIALIZED_NAME_DISABILITY_TYPE)
  private String disabilityType;

  public static final String SERIALIZED_NAME_FORMER_NAME = "formerName";
  @SerializedName(SERIALIZED_NAME_FORMER_NAME)
  private String formerName;

  public static final String SERIALIZED_NAME_HEALTH_BLOOD_TYPE = "healthBloodType";
  @SerializedName(SERIALIZED_NAME_HEALTH_BLOOD_TYPE)
  private String healthBloodType;

  public static final String SERIALIZED_NAME_HEALTH_EYES = "healthEyes";
  @SerializedName(SERIALIZED_NAME_HEALTH_EYES)
  private String healthEyes;

  public static final String SERIALIZED_NAME_HEALTH_HAIR = "healthHair";
  @SerializedName(SERIALIZED_NAME_HEALTH_HAIR)
  private String healthHair;

  public static final String SERIALIZED_NAME_HEALTH_HEIGHT_FEET = "healthHeightFeet";
  @SerializedName(SERIALIZED_NAME_HEALTH_HEIGHT_FEET)
  private String healthHeightFeet;

  public static final String SERIALIZED_NAME_HEALTH_HEIGHT_INCHES = "healthHeightInches";
  @SerializedName(SERIALIZED_NAME_HEALTH_HEIGHT_INCHES)
  private String healthHeightInches;

  public static final String SERIALIZED_NAME_HEALTH_LAST_DONATE_DATE = "healthLastDonateDate";
  @SerializedName(SERIALIZED_NAME_HEALTH_LAST_DONATE_DATE)
  private String healthLastDonateDate;

  public static final String SERIALIZED_NAME_HEALTH_WEIGHT = "healthWeight";
  @SerializedName(SERIALIZED_NAME_HEALTH_WEIGHT)
  private Double healthWeight;

  public static final String SERIALIZED_NAME_PREVIOUS_S_S_N = "previousSSN";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_S_S_N)
  private String previousSSN;

  public static final String SERIALIZED_NAME_ORIGIN_COUNTRY = "originCountry";
  @SerializedName(SERIALIZED_NAME_ORIGIN_COUNTRY)
  private String originCountry;

  public static final String SERIALIZED_NAME_ORIGIN_LOCATION = "originLocation";
  @SerializedName(SERIALIZED_NAME_ORIGIN_LOCATION)
  private String originLocation;

  public static final String SERIALIZED_NAME_ADDRESS_SMS = "addressSms";
  @SerializedName(SERIALIZED_NAME_ADDRESS_SMS)
  private String addressSms;

  public static final String SERIALIZED_NAME_HOME_PHONE_IS_PRIVATE = "homePhoneIsPrivate";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_IS_PRIVATE)
  private Boolean homePhoneIsPrivate;

  public static final String SERIALIZED_NAME_LAST_NAME_NOT_SAME_AS_S_S_CARD = "lastNameNotSameAsSSCard";
  @SerializedName(SERIALIZED_NAME_LAST_NAME_NOT_SAME_AS_S_S_CARD)
  private String lastNameNotSameAsSSCard;

  public static final String SERIALIZED_NAME_NATIONALITY1 = "nationality1";
  @SerializedName(SERIALIZED_NAME_NATIONALITY1)
  private String nationality1;

  public static final String SERIALIZED_NAME_NATIONALITY2 = "nationality2";
  @SerializedName(SERIALIZED_NAME_NATIONALITY2)
  private String nationality2;

  public static final String SERIALIZED_NAME_NATIONALITY3 = "nationality3";
  @SerializedName(SERIALIZED_NAME_NATIONALITY3)
  private String nationality3;

  public static final String SERIALIZED_NAME_PERSON_ID = "personId";
  @SerializedName(SERIALIZED_NAME_PERSON_ID)
  private String personId;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_MIDDLE_NAME = "middleName";
  @SerializedName(SERIALIZED_NAME_MIDDLE_NAME)
  private String middleName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_PREFERRED_NAME = "preferredName";
  @SerializedName(SERIALIZED_NAME_PREFERRED_NAME)
  private String preferredName;

  public static final String SERIALIZED_NAME_NAME_PREFIX_CODE = "namePrefixCode";
  @SerializedName(SERIALIZED_NAME_NAME_PREFIX_CODE)
  private String namePrefixCode;

  public static final String SERIALIZED_NAME_NAME_SUFFIX_CODE = "nameSuffixCode";
  @SerializedName(SERIALIZED_NAME_NAME_SUFFIX_CODE)
  private String nameSuffixCode;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "emailAddress";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS_ALTERNATE = "emailAddressAlternate";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS_ALTERNATE)
  private String emailAddressAlternate;

  public static final String SERIALIZED_NAME_HOME_PHONE_I_D = "homePhoneID";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_I_D)
  private String homePhoneID;

  public static final String SERIALIZED_NAME_HOME_PHONE = "homePhone";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE)
  private String homePhone;

  public static final String SERIALIZED_NAME_HOME_PHONE_COUNTRY = "homePhoneCountry";
  @SerializedName(SERIALIZED_NAME_HOME_PHONE_COUNTRY)
  private String homePhoneCountry;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_ADDRESS_LINE2 = "addressLine2";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE2)
  private String addressLine2;

  public static final String SERIALIZED_NAME_ADDRESS_LINE3 = "addressLine3";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE3)
  private String addressLine3;

  public static final String SERIALIZED_NAME_ADDRESS_LINE4 = "addressLine4";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE4)
  private String addressLine4;

  public static final String SERIALIZED_NAME_ADDRESS_CITY = "addressCity";
  @SerializedName(SERIALIZED_NAME_ADDRESS_CITY)
  private String addressCity;

  public static final String SERIALIZED_NAME_ADDRESS_STATE = "addressState";
  @SerializedName(SERIALIZED_NAME_ADDRESS_STATE)
  private String addressState;

  public static final String SERIALIZED_NAME_ADDRESS_ZIP_CODE = "addressZipCode";
  @SerializedName(SERIALIZED_NAME_ADDRESS_ZIP_CODE)
  private String addressZipCode;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTRY = "addressCountry";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTRY)
  private String addressCountry;

  public static final String SERIALIZED_NAME_ADDRESS_COUNTY = "addressCounty";
  @SerializedName(SERIALIZED_NAME_ADDRESS_COUNTY)
  private String addressCounty;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_ETHNIC_ID_CODE = "ethnicIdCode";
  @SerializedName(SERIALIZED_NAME_ETHNIC_ID_CODE)
  private String ethnicIdCode;

  public static final String SERIALIZED_NAME_IS_SMOKER = "isSmoker";
  @SerializedName(SERIALIZED_NAME_IS_SMOKER)
  private Boolean isSmoker;

  public static final String SERIALIZED_NAME_IS_DISABLED = "isDisabled";
  @SerializedName(SERIALIZED_NAME_IS_DISABLED)
  private String isDisabled;

  public static final String SERIALIZED_NAME_MARITAL_STATUS_CODE = "maritalStatusCode";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS_CODE)
  private String maritalStatusCode;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_SSN_IS_SUPPRESSED = "ssnIsSuppressed";
  @SerializedName(SERIALIZED_NAME_SSN_IS_SUPPRESSED)
  private Boolean ssnIsSuppressed;

  public static final String SERIALIZED_NAME_USER_I_D = "userID";
  @SerializedName(SERIALIZED_NAME_USER_I_D)
  private String userID;

  public static final String SERIALIZED_NAME_INTEGRATION_RECORD_ID = "integrationRecordId";
  @SerializedName(SERIALIZED_NAME_INTEGRATION_RECORD_ID)
  private String integrationRecordId;

  public static final String SERIALIZED_NAME_CELL_PHONE_NUMBER = "cellPhoneNumber";
  @SerializedName(SERIALIZED_NAME_CELL_PHONE_NUMBER)
  private String cellPhoneNumber;

  public EmployeeDemographicDetails() {
  }

  public EmployeeDemographicDetails ethnicDescription(String ethnicDescription) {
    
    
    
    
    this.ethnicDescription = ethnicDescription;
    return this;
  }

   /**
   * Get ethnicDescription
   * @return ethnicDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEthnicDescription() {
    return ethnicDescription;
  }


  public void setEthnicDescription(String ethnicDescription) {
    
    
    
    this.ethnicDescription = ethnicDescription;
  }


  public EmployeeDemographicDetails additionalName1(String additionalName1) {
    
    
    
    
    this.additionalName1 = additionalName1;
    return this;
  }

   /**
   * Get additionalName1
   * @return additionalName1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAdditionalName1() {
    return additionalName1;
  }


  public void setAdditionalName1(String additionalName1) {
    
    
    
    this.additionalName1 = additionalName1;
  }


  public EmployeeDemographicDetails additionalName2(String additionalName2) {
    
    
    
    
    this.additionalName2 = additionalName2;
    return this;
  }

   /**
   * Get additionalName2
   * @return additionalName2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAdditionalName2() {
    return additionalName2;
  }


  public void setAdditionalName2(String additionalName2) {
    
    
    
    this.additionalName2 = additionalName2;
  }


  public EmployeeDemographicDetails addressId(String addressId) {
    
    
    
    
    this.addressId = addressId;
    return this;
  }

   /**
   * Get addressId
   * @return addressId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressId() {
    return addressId;
  }


  public void setAddressId(String addressId) {
    
    
    
    this.addressId = addressId;
  }


  public EmployeeDemographicDetails addressIsOnTaxBoundary(String addressIsOnTaxBoundary) {
    
    
    
    
    this.addressIsOnTaxBoundary = addressIsOnTaxBoundary;
    return this;
  }

   /**
   * Get addressIsOnTaxBoundary
   * @return addressIsOnTaxBoundary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressIsOnTaxBoundary() {
    return addressIsOnTaxBoundary;
  }


  public void setAddressIsOnTaxBoundary(String addressIsOnTaxBoundary) {
    
    
    
    this.addressIsOnTaxBoundary = addressIsOnTaxBoundary;
  }


  public EmployeeDemographicDetails addressLatitude(Double addressLatitude) {
    
    
    
    
    this.addressLatitude = addressLatitude;
    return this;
  }

  public EmployeeDemographicDetails addressLatitude(Integer addressLatitude) {
    
    
    
    
    this.addressLatitude = addressLatitude.doubleValue();
    return this;
  }

   /**
   * Get addressLatitude
   * @return addressLatitude
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAddressLatitude() {
    return addressLatitude;
  }


  public void setAddressLatitude(Double addressLatitude) {
    
    
    
    this.addressLatitude = addressLatitude;
  }


  public EmployeeDemographicDetails disabilityType(String disabilityType) {
    
    
    
    
    this.disabilityType = disabilityType;
    return this;
  }

   /**
   * Get disabilityType
   * @return disabilityType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDisabilityType() {
    return disabilityType;
  }


  public void setDisabilityType(String disabilityType) {
    
    
    
    this.disabilityType = disabilityType;
  }


  public EmployeeDemographicDetails formerName(String formerName) {
    
    
    
    
    this.formerName = formerName;
    return this;
  }

   /**
   * Get formerName
   * @return formerName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFormerName() {
    return formerName;
  }


  public void setFormerName(String formerName) {
    
    
    
    this.formerName = formerName;
  }


  public EmployeeDemographicDetails healthBloodType(String healthBloodType) {
    
    
    
    
    this.healthBloodType = healthBloodType;
    return this;
  }

   /**
   * Get healthBloodType
   * @return healthBloodType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthBloodType() {
    return healthBloodType;
  }


  public void setHealthBloodType(String healthBloodType) {
    
    
    
    this.healthBloodType = healthBloodType;
  }


  public EmployeeDemographicDetails healthEyes(String healthEyes) {
    
    
    
    
    this.healthEyes = healthEyes;
    return this;
  }

   /**
   * Get healthEyes
   * @return healthEyes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthEyes() {
    return healthEyes;
  }


  public void setHealthEyes(String healthEyes) {
    
    
    
    this.healthEyes = healthEyes;
  }


  public EmployeeDemographicDetails healthHair(String healthHair) {
    
    
    
    
    this.healthHair = healthHair;
    return this;
  }

   /**
   * Get healthHair
   * @return healthHair
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthHair() {
    return healthHair;
  }


  public void setHealthHair(String healthHair) {
    
    
    
    this.healthHair = healthHair;
  }


  public EmployeeDemographicDetails healthHeightFeet(String healthHeightFeet) {
    
    
    
    
    this.healthHeightFeet = healthHeightFeet;
    return this;
  }

   /**
   * Get healthHeightFeet
   * @return healthHeightFeet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthHeightFeet() {
    return healthHeightFeet;
  }


  public void setHealthHeightFeet(String healthHeightFeet) {
    
    
    
    this.healthHeightFeet = healthHeightFeet;
  }


  public EmployeeDemographicDetails healthHeightInches(String healthHeightInches) {
    
    
    
    
    this.healthHeightInches = healthHeightInches;
    return this;
  }

   /**
   * Get healthHeightInches
   * @return healthHeightInches
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthHeightInches() {
    return healthHeightInches;
  }


  public void setHealthHeightInches(String healthHeightInches) {
    
    
    
    this.healthHeightInches = healthHeightInches;
  }


  public EmployeeDemographicDetails healthLastDonateDate(String healthLastDonateDate) {
    
    
    
    
    this.healthLastDonateDate = healthLastDonateDate;
    return this;
  }

   /**
   * Get healthLastDonateDate
   * @return healthLastDonateDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthLastDonateDate() {
    return healthLastDonateDate;
  }


  public void setHealthLastDonateDate(String healthLastDonateDate) {
    
    
    
    this.healthLastDonateDate = healthLastDonateDate;
  }


  public EmployeeDemographicDetails healthWeight(Double healthWeight) {
    
    
    
    
    this.healthWeight = healthWeight;
    return this;
  }

  public EmployeeDemographicDetails healthWeight(Integer healthWeight) {
    
    
    
    
    this.healthWeight = healthWeight.doubleValue();
    return this;
  }

   /**
   * Get healthWeight
   * @return healthWeight
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHealthWeight() {
    return healthWeight;
  }


  public void setHealthWeight(Double healthWeight) {
    
    
    
    this.healthWeight = healthWeight;
  }


  public EmployeeDemographicDetails previousSSN(String previousSSN) {
    
    
    
    
    this.previousSSN = previousSSN;
    return this;
  }

   /**
   * Get previousSSN
   * @return previousSSN
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPreviousSSN() {
    return previousSSN;
  }


  public void setPreviousSSN(String previousSSN) {
    
    
    
    this.previousSSN = previousSSN;
  }


  public EmployeeDemographicDetails originCountry(String originCountry) {
    
    
    
    
    this.originCountry = originCountry;
    return this;
  }

   /**
   * Get originCountry
   * @return originCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOriginCountry() {
    return originCountry;
  }


  public void setOriginCountry(String originCountry) {
    
    
    
    this.originCountry = originCountry;
  }


  public EmployeeDemographicDetails originLocation(String originLocation) {
    
    
    
    
    this.originLocation = originLocation;
    return this;
  }

   /**
   * Get originLocation
   * @return originLocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOriginLocation() {
    return originLocation;
  }


  public void setOriginLocation(String originLocation) {
    
    
    
    this.originLocation = originLocation;
  }


  public EmployeeDemographicDetails addressSms(String addressSms) {
    
    
    
    
    this.addressSms = addressSms;
    return this;
  }

   /**
   * Get addressSms
   * @return addressSms
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressSms() {
    return addressSms;
  }


  public void setAddressSms(String addressSms) {
    
    
    
    this.addressSms = addressSms;
  }


  public EmployeeDemographicDetails homePhoneIsPrivate(Boolean homePhoneIsPrivate) {
    
    
    
    
    this.homePhoneIsPrivate = homePhoneIsPrivate;
    return this;
  }

   /**
   * Get homePhoneIsPrivate
   * @return homePhoneIsPrivate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHomePhoneIsPrivate() {
    return homePhoneIsPrivate;
  }


  public void setHomePhoneIsPrivate(Boolean homePhoneIsPrivate) {
    
    
    
    this.homePhoneIsPrivate = homePhoneIsPrivate;
  }


  public EmployeeDemographicDetails lastNameNotSameAsSSCard(String lastNameNotSameAsSSCard) {
    
    
    
    
    this.lastNameNotSameAsSSCard = lastNameNotSameAsSSCard;
    return this;
  }

   /**
   * Get lastNameNotSameAsSSCard
   * @return lastNameNotSameAsSSCard
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastNameNotSameAsSSCard() {
    return lastNameNotSameAsSSCard;
  }


  public void setLastNameNotSameAsSSCard(String lastNameNotSameAsSSCard) {
    
    
    
    this.lastNameNotSameAsSSCard = lastNameNotSameAsSSCard;
  }


  public EmployeeDemographicDetails nationality1(String nationality1) {
    
    
    
    
    this.nationality1 = nationality1;
    return this;
  }

   /**
   * Get nationality1
   * @return nationality1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNationality1() {
    return nationality1;
  }


  public void setNationality1(String nationality1) {
    
    
    
    this.nationality1 = nationality1;
  }


  public EmployeeDemographicDetails nationality2(String nationality2) {
    
    
    
    
    this.nationality2 = nationality2;
    return this;
  }

   /**
   * Get nationality2
   * @return nationality2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNationality2() {
    return nationality2;
  }


  public void setNationality2(String nationality2) {
    
    
    
    this.nationality2 = nationality2;
  }


  public EmployeeDemographicDetails nationality3(String nationality3) {
    
    
    
    
    this.nationality3 = nationality3;
    return this;
  }

   /**
   * Get nationality3
   * @return nationality3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNationality3() {
    return nationality3;
  }


  public void setNationality3(String nationality3) {
    
    
    
    this.nationality3 = nationality3;
  }


  public EmployeeDemographicDetails personId(String personId) {
    
    
    
    
    this.personId = personId;
    return this;
  }

   /**
   * Get personId
   * @return personId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPersonId() {
    return personId;
  }


  public void setPersonId(String personId) {
    
    
    
    this.personId = personId;
  }


  public EmployeeDemographicDetails employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EmployeeDemographicDetails companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmployeeDemographicDetails firstName(String firstName) {
    
    
    
    
    this.firstName = firstName;
    return this;
  }

   /**
   * Get firstName
   * @return firstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFirstName() {
    return firstName;
  }


  public void setFirstName(String firstName) {
    
    
    
    this.firstName = firstName;
  }


  public EmployeeDemographicDetails middleName(String middleName) {
    
    
    
    
    this.middleName = middleName;
    return this;
  }

   /**
   * Get middleName
   * @return middleName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMiddleName() {
    return middleName;
  }


  public void setMiddleName(String middleName) {
    
    
    
    this.middleName = middleName;
  }


  public EmployeeDemographicDetails lastName(String lastName) {
    
    
    
    
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLastName() {
    return lastName;
  }


  public void setLastName(String lastName) {
    
    
    
    this.lastName = lastName;
  }


  public EmployeeDemographicDetails preferredName(String preferredName) {
    
    
    
    
    this.preferredName = preferredName;
    return this;
  }

   /**
   * Get preferredName
   * @return preferredName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPreferredName() {
    return preferredName;
  }


  public void setPreferredName(String preferredName) {
    
    
    
    this.preferredName = preferredName;
  }


  public EmployeeDemographicDetails namePrefixCode(String namePrefixCode) {
    
    
    
    
    this.namePrefixCode = namePrefixCode;
    return this;
  }

   /**
   * Get namePrefixCode
   * @return namePrefixCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNamePrefixCode() {
    return namePrefixCode;
  }


  public void setNamePrefixCode(String namePrefixCode) {
    
    
    
    this.namePrefixCode = namePrefixCode;
  }


  public EmployeeDemographicDetails nameSuffixCode(String nameSuffixCode) {
    
    
    
    
    this.nameSuffixCode = nameSuffixCode;
    return this;
  }

   /**
   * Get nameSuffixCode
   * @return nameSuffixCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNameSuffixCode() {
    return nameSuffixCode;
  }


  public void setNameSuffixCode(String nameSuffixCode) {
    
    
    
    this.nameSuffixCode = nameSuffixCode;
  }


  public EmployeeDemographicDetails emailAddress(String emailAddress) {
    
    
    
    
    this.emailAddress = emailAddress;
    return this;
  }

   /**
   * Get emailAddress
   * @return emailAddress
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmailAddress() {
    return emailAddress;
  }


  public void setEmailAddress(String emailAddress) {
    
    
    
    this.emailAddress = emailAddress;
  }


  public EmployeeDemographicDetails emailAddressAlternate(String emailAddressAlternate) {
    
    
    
    
    this.emailAddressAlternate = emailAddressAlternate;
    return this;
  }

   /**
   * Get emailAddressAlternate
   * @return emailAddressAlternate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmailAddressAlternate() {
    return emailAddressAlternate;
  }


  public void setEmailAddressAlternate(String emailAddressAlternate) {
    
    
    
    this.emailAddressAlternate = emailAddressAlternate;
  }


  public EmployeeDemographicDetails homePhoneID(String homePhoneID) {
    
    
    
    
    this.homePhoneID = homePhoneID;
    return this;
  }

   /**
   * Get homePhoneID
   * @return homePhoneID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomePhoneID() {
    return homePhoneID;
  }


  public void setHomePhoneID(String homePhoneID) {
    
    
    
    this.homePhoneID = homePhoneID;
  }


  public EmployeeDemographicDetails homePhone(String homePhone) {
    
    
    
    
    this.homePhone = homePhone;
    return this;
  }

   /**
   * Get homePhone
   * @return homePhone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomePhone() {
    return homePhone;
  }


  public void setHomePhone(String homePhone) {
    
    
    
    this.homePhone = homePhone;
  }


  public EmployeeDemographicDetails homePhoneCountry(String homePhoneCountry) {
    
    
    
    
    this.homePhoneCountry = homePhoneCountry;
    return this;
  }

   /**
   * Get homePhoneCountry
   * @return homePhoneCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHomePhoneCountry() {
    return homePhoneCountry;
  }


  public void setHomePhoneCountry(String homePhoneCountry) {
    
    
    
    this.homePhoneCountry = homePhoneCountry;
  }


  public EmployeeDemographicDetails addressLine1(String addressLine1) {
    
    
    
    
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Get addressLine1
   * @return addressLine1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressLine1() {
    return addressLine1;
  }


  public void setAddressLine1(String addressLine1) {
    
    
    
    this.addressLine1 = addressLine1;
  }


  public EmployeeDemographicDetails addressLine2(String addressLine2) {
    
    
    
    
    this.addressLine2 = addressLine2;
    return this;
  }

   /**
   * Get addressLine2
   * @return addressLine2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressLine2() {
    return addressLine2;
  }


  public void setAddressLine2(String addressLine2) {
    
    
    
    this.addressLine2 = addressLine2;
  }


  public EmployeeDemographicDetails addressLine3(String addressLine3) {
    
    
    
    
    this.addressLine3 = addressLine3;
    return this;
  }

   /**
   * Get addressLine3
   * @return addressLine3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressLine3() {
    return addressLine3;
  }


  public void setAddressLine3(String addressLine3) {
    
    
    
    this.addressLine3 = addressLine3;
  }


  public EmployeeDemographicDetails addressLine4(String addressLine4) {
    
    
    
    
    this.addressLine4 = addressLine4;
    return this;
  }

   /**
   * Get addressLine4
   * @return addressLine4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressLine4() {
    return addressLine4;
  }


  public void setAddressLine4(String addressLine4) {
    
    
    
    this.addressLine4 = addressLine4;
  }


  public EmployeeDemographicDetails addressCity(String addressCity) {
    
    
    
    
    this.addressCity = addressCity;
    return this;
  }

   /**
   * Get addressCity
   * @return addressCity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressCity() {
    return addressCity;
  }


  public void setAddressCity(String addressCity) {
    
    
    
    this.addressCity = addressCity;
  }


  public EmployeeDemographicDetails addressState(String addressState) {
    
    
    
    
    this.addressState = addressState;
    return this;
  }

   /**
   * Get addressState
   * @return addressState
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressState() {
    return addressState;
  }


  public void setAddressState(String addressState) {
    
    
    
    this.addressState = addressState;
  }


  public EmployeeDemographicDetails addressZipCode(String addressZipCode) {
    
    
    
    
    this.addressZipCode = addressZipCode;
    return this;
  }

   /**
   * Get addressZipCode
   * @return addressZipCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressZipCode() {
    return addressZipCode;
  }


  public void setAddressZipCode(String addressZipCode) {
    
    
    
    this.addressZipCode = addressZipCode;
  }


  public EmployeeDemographicDetails addressCountry(String addressCountry) {
    
    
    
    
    this.addressCountry = addressCountry;
    return this;
  }

   /**
   * Get addressCountry
   * @return addressCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressCountry() {
    return addressCountry;
  }


  public void setAddressCountry(String addressCountry) {
    
    
    
    this.addressCountry = addressCountry;
  }


  public EmployeeDemographicDetails addressCounty(String addressCounty) {
    
    
    
    
    this.addressCounty = addressCounty;
    return this;
  }

   /**
   * Get addressCounty
   * @return addressCounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressCounty() {
    return addressCounty;
  }


  public void setAddressCounty(String addressCounty) {
    
    
    
    this.addressCounty = addressCounty;
  }


  public EmployeeDemographicDetails dateOfBirth(String dateOfBirth) {
    
    
    
    
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Get dateOfBirth
   * @return dateOfBirth
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDateOfBirth() {
    return dateOfBirth;
  }


  public void setDateOfBirth(String dateOfBirth) {
    
    
    
    this.dateOfBirth = dateOfBirth;
  }


  public EmployeeDemographicDetails gender(String gender) {
    
    
    
    
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGender() {
    return gender;
  }


  public void setGender(String gender) {
    
    
    
    this.gender = gender;
  }


  public EmployeeDemographicDetails ethnicIdCode(String ethnicIdCode) {
    
    
    
    
    this.ethnicIdCode = ethnicIdCode;
    return this;
  }

   /**
   * Get ethnicIdCode
   * @return ethnicIdCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEthnicIdCode() {
    return ethnicIdCode;
  }


  public void setEthnicIdCode(String ethnicIdCode) {
    
    
    
    this.ethnicIdCode = ethnicIdCode;
  }


  public EmployeeDemographicDetails isSmoker(Boolean isSmoker) {
    
    
    
    
    this.isSmoker = isSmoker;
    return this;
  }

   /**
   * Get isSmoker
   * @return isSmoker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSmoker() {
    return isSmoker;
  }


  public void setIsSmoker(Boolean isSmoker) {
    
    
    
    this.isSmoker = isSmoker;
  }


  public EmployeeDemographicDetails isDisabled(String isDisabled) {
    
    
    
    
    this.isDisabled = isDisabled;
    return this;
  }

   /**
   * Get isDisabled
   * @return isDisabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsDisabled() {
    return isDisabled;
  }


  public void setIsDisabled(String isDisabled) {
    
    
    
    this.isDisabled = isDisabled;
  }


  public EmployeeDemographicDetails maritalStatusCode(String maritalStatusCode) {
    
    
    
    
    this.maritalStatusCode = maritalStatusCode;
    return this;
  }

   /**
   * Get maritalStatusCode
   * @return maritalStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMaritalStatusCode() {
    return maritalStatusCode;
  }


  public void setMaritalStatusCode(String maritalStatusCode) {
    
    
    
    this.maritalStatusCode = maritalStatusCode;
  }


  public EmployeeDemographicDetails ssn(String ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSsn() {
    return ssn;
  }


  public void setSsn(String ssn) {
    
    
    
    this.ssn = ssn;
  }


  public EmployeeDemographicDetails ssnIsSuppressed(Boolean ssnIsSuppressed) {
    
    
    
    
    this.ssnIsSuppressed = ssnIsSuppressed;
    return this;
  }

   /**
   * Get ssnIsSuppressed
   * @return ssnIsSuppressed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getSsnIsSuppressed() {
    return ssnIsSuppressed;
  }


  public void setSsnIsSuppressed(Boolean ssnIsSuppressed) {
    
    
    
    this.ssnIsSuppressed = ssnIsSuppressed;
  }


  public EmployeeDemographicDetails userID(String userID) {
    
    
    
    
    this.userID = userID;
    return this;
  }

   /**
   * Get userID
   * @return userID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserID() {
    return userID;
  }


  public void setUserID(String userID) {
    
    
    
    this.userID = userID;
  }


  public EmployeeDemographicDetails integrationRecordId(String integrationRecordId) {
    
    
    
    
    this.integrationRecordId = integrationRecordId;
    return this;
  }

   /**
   * Get integrationRecordId
   * @return integrationRecordId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIntegrationRecordId() {
    return integrationRecordId;
  }


  public void setIntegrationRecordId(String integrationRecordId) {
    
    
    
    this.integrationRecordId = integrationRecordId;
  }


  public EmployeeDemographicDetails cellPhoneNumber(String cellPhoneNumber) {
    
    
    
    
    this.cellPhoneNumber = cellPhoneNumber;
    return this;
  }

   /**
   * Get cellPhoneNumber
   * @return cellPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCellPhoneNumber() {
    return cellPhoneNumber;
  }


  public void setCellPhoneNumber(String cellPhoneNumber) {
    
    
    
    this.cellPhoneNumber = cellPhoneNumber;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeeDemographicDetails instance itself
   */
  public EmployeeDemographicDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeeDemographicDetails employeeDemographicDetails = (EmployeeDemographicDetails) o;
    return Objects.equals(this.ethnicDescription, employeeDemographicDetails.ethnicDescription) &&
        Objects.equals(this.additionalName1, employeeDemographicDetails.additionalName1) &&
        Objects.equals(this.additionalName2, employeeDemographicDetails.additionalName2) &&
        Objects.equals(this.addressId, employeeDemographicDetails.addressId) &&
        Objects.equals(this.addressIsOnTaxBoundary, employeeDemographicDetails.addressIsOnTaxBoundary) &&
        Objects.equals(this.addressLatitude, employeeDemographicDetails.addressLatitude) &&
        Objects.equals(this.disabilityType, employeeDemographicDetails.disabilityType) &&
        Objects.equals(this.formerName, employeeDemographicDetails.formerName) &&
        Objects.equals(this.healthBloodType, employeeDemographicDetails.healthBloodType) &&
        Objects.equals(this.healthEyes, employeeDemographicDetails.healthEyes) &&
        Objects.equals(this.healthHair, employeeDemographicDetails.healthHair) &&
        Objects.equals(this.healthHeightFeet, employeeDemographicDetails.healthHeightFeet) &&
        Objects.equals(this.healthHeightInches, employeeDemographicDetails.healthHeightInches) &&
        Objects.equals(this.healthLastDonateDate, employeeDemographicDetails.healthLastDonateDate) &&
        Objects.equals(this.healthWeight, employeeDemographicDetails.healthWeight) &&
        Objects.equals(this.previousSSN, employeeDemographicDetails.previousSSN) &&
        Objects.equals(this.originCountry, employeeDemographicDetails.originCountry) &&
        Objects.equals(this.originLocation, employeeDemographicDetails.originLocation) &&
        Objects.equals(this.addressSms, employeeDemographicDetails.addressSms) &&
        Objects.equals(this.homePhoneIsPrivate, employeeDemographicDetails.homePhoneIsPrivate) &&
        Objects.equals(this.lastNameNotSameAsSSCard, employeeDemographicDetails.lastNameNotSameAsSSCard) &&
        Objects.equals(this.nationality1, employeeDemographicDetails.nationality1) &&
        Objects.equals(this.nationality2, employeeDemographicDetails.nationality2) &&
        Objects.equals(this.nationality3, employeeDemographicDetails.nationality3) &&
        Objects.equals(this.personId, employeeDemographicDetails.personId) &&
        Objects.equals(this.employeeId, employeeDemographicDetails.employeeId) &&
        Objects.equals(this.companyId, employeeDemographicDetails.companyId) &&
        Objects.equals(this.firstName, employeeDemographicDetails.firstName) &&
        Objects.equals(this.middleName, employeeDemographicDetails.middleName) &&
        Objects.equals(this.lastName, employeeDemographicDetails.lastName) &&
        Objects.equals(this.preferredName, employeeDemographicDetails.preferredName) &&
        Objects.equals(this.namePrefixCode, employeeDemographicDetails.namePrefixCode) &&
        Objects.equals(this.nameSuffixCode, employeeDemographicDetails.nameSuffixCode) &&
        Objects.equals(this.emailAddress, employeeDemographicDetails.emailAddress) &&
        Objects.equals(this.emailAddressAlternate, employeeDemographicDetails.emailAddressAlternate) &&
        Objects.equals(this.homePhoneID, employeeDemographicDetails.homePhoneID) &&
        Objects.equals(this.homePhone, employeeDemographicDetails.homePhone) &&
        Objects.equals(this.homePhoneCountry, employeeDemographicDetails.homePhoneCountry) &&
        Objects.equals(this.addressLine1, employeeDemographicDetails.addressLine1) &&
        Objects.equals(this.addressLine2, employeeDemographicDetails.addressLine2) &&
        Objects.equals(this.addressLine3, employeeDemographicDetails.addressLine3) &&
        Objects.equals(this.addressLine4, employeeDemographicDetails.addressLine4) &&
        Objects.equals(this.addressCity, employeeDemographicDetails.addressCity) &&
        Objects.equals(this.addressState, employeeDemographicDetails.addressState) &&
        Objects.equals(this.addressZipCode, employeeDemographicDetails.addressZipCode) &&
        Objects.equals(this.addressCountry, employeeDemographicDetails.addressCountry) &&
        Objects.equals(this.addressCounty, employeeDemographicDetails.addressCounty) &&
        Objects.equals(this.dateOfBirth, employeeDemographicDetails.dateOfBirth) &&
        Objects.equals(this.gender, employeeDemographicDetails.gender) &&
        Objects.equals(this.ethnicIdCode, employeeDemographicDetails.ethnicIdCode) &&
        Objects.equals(this.isSmoker, employeeDemographicDetails.isSmoker) &&
        Objects.equals(this.isDisabled, employeeDemographicDetails.isDisabled) &&
        Objects.equals(this.maritalStatusCode, employeeDemographicDetails.maritalStatusCode) &&
        Objects.equals(this.ssn, employeeDemographicDetails.ssn) &&
        Objects.equals(this.ssnIsSuppressed, employeeDemographicDetails.ssnIsSuppressed) &&
        Objects.equals(this.userID, employeeDemographicDetails.userID) &&
        Objects.equals(this.integrationRecordId, employeeDemographicDetails.integrationRecordId) &&
        Objects.equals(this.cellPhoneNumber, employeeDemographicDetails.cellPhoneNumber)&&
        Objects.equals(this.additionalProperties, employeeDemographicDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ethnicDescription, additionalName1, additionalName2, addressId, addressIsOnTaxBoundary, addressLatitude, disabilityType, formerName, healthBloodType, healthEyes, healthHair, healthHeightFeet, healthHeightInches, healthLastDonateDate, healthWeight, previousSSN, originCountry, originLocation, addressSms, homePhoneIsPrivate, lastNameNotSameAsSSCard, nationality1, nationality2, nationality3, personId, employeeId, companyId, firstName, middleName, lastName, preferredName, namePrefixCode, nameSuffixCode, emailAddress, emailAddressAlternate, homePhoneID, homePhone, homePhoneCountry, addressLine1, addressLine2, addressLine3, addressLine4, addressCity, addressState, addressZipCode, addressCountry, addressCounty, dateOfBirth, gender, ethnicIdCode, isSmoker, isDisabled, maritalStatusCode, ssn, ssnIsSuppressed, userID, integrationRecordId, cellPhoneNumber, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeeDemographicDetails {\n");
    sb.append("    ethnicDescription: ").append(toIndentedString(ethnicDescription)).append("\n");
    sb.append("    additionalName1: ").append(toIndentedString(additionalName1)).append("\n");
    sb.append("    additionalName2: ").append(toIndentedString(additionalName2)).append("\n");
    sb.append("    addressId: ").append(toIndentedString(addressId)).append("\n");
    sb.append("    addressIsOnTaxBoundary: ").append(toIndentedString(addressIsOnTaxBoundary)).append("\n");
    sb.append("    addressLatitude: ").append(toIndentedString(addressLatitude)).append("\n");
    sb.append("    disabilityType: ").append(toIndentedString(disabilityType)).append("\n");
    sb.append("    formerName: ").append(toIndentedString(formerName)).append("\n");
    sb.append("    healthBloodType: ").append(toIndentedString(healthBloodType)).append("\n");
    sb.append("    healthEyes: ").append(toIndentedString(healthEyes)).append("\n");
    sb.append("    healthHair: ").append(toIndentedString(healthHair)).append("\n");
    sb.append("    healthHeightFeet: ").append(toIndentedString(healthHeightFeet)).append("\n");
    sb.append("    healthHeightInches: ").append(toIndentedString(healthHeightInches)).append("\n");
    sb.append("    healthLastDonateDate: ").append(toIndentedString(healthLastDonateDate)).append("\n");
    sb.append("    healthWeight: ").append(toIndentedString(healthWeight)).append("\n");
    sb.append("    previousSSN: ").append(toIndentedString(previousSSN)).append("\n");
    sb.append("    originCountry: ").append(toIndentedString(originCountry)).append("\n");
    sb.append("    originLocation: ").append(toIndentedString(originLocation)).append("\n");
    sb.append("    addressSms: ").append(toIndentedString(addressSms)).append("\n");
    sb.append("    homePhoneIsPrivate: ").append(toIndentedString(homePhoneIsPrivate)).append("\n");
    sb.append("    lastNameNotSameAsSSCard: ").append(toIndentedString(lastNameNotSameAsSSCard)).append("\n");
    sb.append("    nationality1: ").append(toIndentedString(nationality1)).append("\n");
    sb.append("    nationality2: ").append(toIndentedString(nationality2)).append("\n");
    sb.append("    nationality3: ").append(toIndentedString(nationality3)).append("\n");
    sb.append("    personId: ").append(toIndentedString(personId)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    middleName: ").append(toIndentedString(middleName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    preferredName: ").append(toIndentedString(preferredName)).append("\n");
    sb.append("    namePrefixCode: ").append(toIndentedString(namePrefixCode)).append("\n");
    sb.append("    nameSuffixCode: ").append(toIndentedString(nameSuffixCode)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    emailAddressAlternate: ").append(toIndentedString(emailAddressAlternate)).append("\n");
    sb.append("    homePhoneID: ").append(toIndentedString(homePhoneID)).append("\n");
    sb.append("    homePhone: ").append(toIndentedString(homePhone)).append("\n");
    sb.append("    homePhoneCountry: ").append(toIndentedString(homePhoneCountry)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    addressLine2: ").append(toIndentedString(addressLine2)).append("\n");
    sb.append("    addressLine3: ").append(toIndentedString(addressLine3)).append("\n");
    sb.append("    addressLine4: ").append(toIndentedString(addressLine4)).append("\n");
    sb.append("    addressCity: ").append(toIndentedString(addressCity)).append("\n");
    sb.append("    addressState: ").append(toIndentedString(addressState)).append("\n");
    sb.append("    addressZipCode: ").append(toIndentedString(addressZipCode)).append("\n");
    sb.append("    addressCountry: ").append(toIndentedString(addressCountry)).append("\n");
    sb.append("    addressCounty: ").append(toIndentedString(addressCounty)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    ethnicIdCode: ").append(toIndentedString(ethnicIdCode)).append("\n");
    sb.append("    isSmoker: ").append(toIndentedString(isSmoker)).append("\n");
    sb.append("    isDisabled: ").append(toIndentedString(isDisabled)).append("\n");
    sb.append("    maritalStatusCode: ").append(toIndentedString(maritalStatusCode)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    ssnIsSuppressed: ").append(toIndentedString(ssnIsSuppressed)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    integrationRecordId: ").append(toIndentedString(integrationRecordId)).append("\n");
    sb.append("    cellPhoneNumber: ").append(toIndentedString(cellPhoneNumber)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ethnicDescription");
    openapiFields.add("additionalName1");
    openapiFields.add("additionalName2");
    openapiFields.add("addressId");
    openapiFields.add("addressIsOnTaxBoundary");
    openapiFields.add("addressLatitude");
    openapiFields.add("disabilityType");
    openapiFields.add("formerName");
    openapiFields.add("healthBloodType");
    openapiFields.add("healthEyes");
    openapiFields.add("healthHair");
    openapiFields.add("healthHeightFeet");
    openapiFields.add("healthHeightInches");
    openapiFields.add("healthLastDonateDate");
    openapiFields.add("healthWeight");
    openapiFields.add("previousSSN");
    openapiFields.add("originCountry");
    openapiFields.add("originLocation");
    openapiFields.add("addressSms");
    openapiFields.add("homePhoneIsPrivate");
    openapiFields.add("lastNameNotSameAsSSCard");
    openapiFields.add("nationality1");
    openapiFields.add("nationality2");
    openapiFields.add("nationality3");
    openapiFields.add("personId");
    openapiFields.add("employeeId");
    openapiFields.add("companyId");
    openapiFields.add("firstName");
    openapiFields.add("middleName");
    openapiFields.add("lastName");
    openapiFields.add("preferredName");
    openapiFields.add("namePrefixCode");
    openapiFields.add("nameSuffixCode");
    openapiFields.add("emailAddress");
    openapiFields.add("emailAddressAlternate");
    openapiFields.add("homePhoneID");
    openapiFields.add("homePhone");
    openapiFields.add("homePhoneCountry");
    openapiFields.add("addressLine1");
    openapiFields.add("addressLine2");
    openapiFields.add("addressLine3");
    openapiFields.add("addressLine4");
    openapiFields.add("addressCity");
    openapiFields.add("addressState");
    openapiFields.add("addressZipCode");
    openapiFields.add("addressCountry");
    openapiFields.add("addressCounty");
    openapiFields.add("dateOfBirth");
    openapiFields.add("gender");
    openapiFields.add("ethnicIdCode");
    openapiFields.add("isSmoker");
    openapiFields.add("isDisabled");
    openapiFields.add("maritalStatusCode");
    openapiFields.add("ssn");
    openapiFields.add("ssnIsSuppressed");
    openapiFields.add("userID");
    openapiFields.add("integrationRecordId");
    openapiFields.add("cellPhoneNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeeDemographicDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeeDemographicDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeeDemographicDetails is not found in the empty JSON string", EmployeeDemographicDetails.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("ethnicDescription") != null && !jsonObj.get("ethnicDescription").isJsonNull()) && !jsonObj.get("ethnicDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ethnicDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ethnicDescription").toString()));
      }
      if ((jsonObj.get("additionalName1") != null && !jsonObj.get("additionalName1").isJsonNull()) && !jsonObj.get("additionalName1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalName1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalName1").toString()));
      }
      if ((jsonObj.get("additionalName2") != null && !jsonObj.get("additionalName2").isJsonNull()) && !jsonObj.get("additionalName2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalName2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalName2").toString()));
      }
      if ((jsonObj.get("addressId") != null && !jsonObj.get("addressId").isJsonNull()) && !jsonObj.get("addressId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressId").toString()));
      }
      if ((jsonObj.get("addressIsOnTaxBoundary") != null && !jsonObj.get("addressIsOnTaxBoundary").isJsonNull()) && !jsonObj.get("addressIsOnTaxBoundary").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressIsOnTaxBoundary` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressIsOnTaxBoundary").toString()));
      }
      if ((jsonObj.get("disabilityType") != null && !jsonObj.get("disabilityType").isJsonNull()) && !jsonObj.get("disabilityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `disabilityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("disabilityType").toString()));
      }
      if ((jsonObj.get("formerName") != null && !jsonObj.get("formerName").isJsonNull()) && !jsonObj.get("formerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `formerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("formerName").toString()));
      }
      if ((jsonObj.get("healthBloodType") != null && !jsonObj.get("healthBloodType").isJsonNull()) && !jsonObj.get("healthBloodType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthBloodType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthBloodType").toString()));
      }
      if ((jsonObj.get("healthEyes") != null && !jsonObj.get("healthEyes").isJsonNull()) && !jsonObj.get("healthEyes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthEyes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthEyes").toString()));
      }
      if ((jsonObj.get("healthHair") != null && !jsonObj.get("healthHair").isJsonNull()) && !jsonObj.get("healthHair").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthHair` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthHair").toString()));
      }
      if ((jsonObj.get("healthHeightFeet") != null && !jsonObj.get("healthHeightFeet").isJsonNull()) && !jsonObj.get("healthHeightFeet").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthHeightFeet` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthHeightFeet").toString()));
      }
      if ((jsonObj.get("healthHeightInches") != null && !jsonObj.get("healthHeightInches").isJsonNull()) && !jsonObj.get("healthHeightInches").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthHeightInches` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthHeightInches").toString()));
      }
      if ((jsonObj.get("healthLastDonateDate") != null && !jsonObj.get("healthLastDonateDate").isJsonNull()) && !jsonObj.get("healthLastDonateDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthLastDonateDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthLastDonateDate").toString()));
      }
      if ((jsonObj.get("previousSSN") != null && !jsonObj.get("previousSSN").isJsonNull()) && !jsonObj.get("previousSSN").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previousSSN` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previousSSN").toString()));
      }
      if ((jsonObj.get("originCountry") != null && !jsonObj.get("originCountry").isJsonNull()) && !jsonObj.get("originCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originCountry").toString()));
      }
      if ((jsonObj.get("originLocation") != null && !jsonObj.get("originLocation").isJsonNull()) && !jsonObj.get("originLocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originLocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originLocation").toString()));
      }
      if ((jsonObj.get("addressSms") != null && !jsonObj.get("addressSms").isJsonNull()) && !jsonObj.get("addressSms").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressSms` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressSms").toString()));
      }
      if ((jsonObj.get("lastNameNotSameAsSSCard") != null && !jsonObj.get("lastNameNotSameAsSSCard").isJsonNull()) && !jsonObj.get("lastNameNotSameAsSSCard").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastNameNotSameAsSSCard` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastNameNotSameAsSSCard").toString()));
      }
      if ((jsonObj.get("nationality1") != null && !jsonObj.get("nationality1").isJsonNull()) && !jsonObj.get("nationality1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality1").toString()));
      }
      if ((jsonObj.get("nationality2") != null && !jsonObj.get("nationality2").isJsonNull()) && !jsonObj.get("nationality2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality2").toString()));
      }
      if ((jsonObj.get("nationality3") != null && !jsonObj.get("nationality3").isJsonNull()) && !jsonObj.get("nationality3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationality3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationality3").toString()));
      }
      if ((jsonObj.get("personId") != null && !jsonObj.get("personId").isJsonNull()) && !jsonObj.get("personId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `personId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("personId").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("middleName") != null && !jsonObj.get("middleName").isJsonNull()) && !jsonObj.get("middleName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `middleName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("middleName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("preferredName") != null && !jsonObj.get("preferredName").isJsonNull()) && !jsonObj.get("preferredName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredName").toString()));
      }
      if ((jsonObj.get("namePrefixCode") != null && !jsonObj.get("namePrefixCode").isJsonNull()) && !jsonObj.get("namePrefixCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `namePrefixCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("namePrefixCode").toString()));
      }
      if ((jsonObj.get("nameSuffixCode") != null && !jsonObj.get("nameSuffixCode").isJsonNull()) && !jsonObj.get("nameSuffixCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nameSuffixCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nameSuffixCode").toString()));
      }
      if ((jsonObj.get("emailAddress") != null && !jsonObj.get("emailAddress").isJsonNull()) && !jsonObj.get("emailAddress").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailAddress` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailAddress").toString()));
      }
      if ((jsonObj.get("emailAddressAlternate") != null && !jsonObj.get("emailAddressAlternate").isJsonNull()) && !jsonObj.get("emailAddressAlternate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailAddressAlternate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailAddressAlternate").toString()));
      }
      if ((jsonObj.get("homePhoneID") != null && !jsonObj.get("homePhoneID").isJsonNull()) && !jsonObj.get("homePhoneID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhoneID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhoneID").toString()));
      }
      if ((jsonObj.get("homePhone") != null && !jsonObj.get("homePhone").isJsonNull()) && !jsonObj.get("homePhone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhone").toString()));
      }
      if ((jsonObj.get("homePhoneCountry") != null && !jsonObj.get("homePhoneCountry").isJsonNull()) && !jsonObj.get("homePhoneCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `homePhoneCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("homePhoneCountry").toString()));
      }
      if ((jsonObj.get("addressLine1") != null && !jsonObj.get("addressLine1").isJsonNull()) && !jsonObj.get("addressLine1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine1").toString()));
      }
      if ((jsonObj.get("addressLine2") != null && !jsonObj.get("addressLine2").isJsonNull()) && !jsonObj.get("addressLine2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine2").toString()));
      }
      if ((jsonObj.get("addressLine3") != null && !jsonObj.get("addressLine3").isJsonNull()) && !jsonObj.get("addressLine3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine3").toString()));
      }
      if ((jsonObj.get("addressLine4") != null && !jsonObj.get("addressLine4").isJsonNull()) && !jsonObj.get("addressLine4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressLine4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressLine4").toString()));
      }
      if ((jsonObj.get("addressCity") != null && !jsonObj.get("addressCity").isJsonNull()) && !jsonObj.get("addressCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCity").toString()));
      }
      if ((jsonObj.get("addressState") != null && !jsonObj.get("addressState").isJsonNull()) && !jsonObj.get("addressState").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressState` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressState").toString()));
      }
      if ((jsonObj.get("addressZipCode") != null && !jsonObj.get("addressZipCode").isJsonNull()) && !jsonObj.get("addressZipCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressZipCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressZipCode").toString()));
      }
      if ((jsonObj.get("addressCountry") != null && !jsonObj.get("addressCountry").isJsonNull()) && !jsonObj.get("addressCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCountry").toString()));
      }
      if ((jsonObj.get("addressCounty") != null && !jsonObj.get("addressCounty").isJsonNull()) && !jsonObj.get("addressCounty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressCounty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressCounty").toString()));
      }
      if ((jsonObj.get("dateOfBirth") != null && !jsonObj.get("dateOfBirth").isJsonNull()) && !jsonObj.get("dateOfBirth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dateOfBirth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dateOfBirth").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("ethnicIdCode") != null && !jsonObj.get("ethnicIdCode").isJsonNull()) && !jsonObj.get("ethnicIdCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ethnicIdCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ethnicIdCode").toString()));
      }
      if ((jsonObj.get("isDisabled") != null && !jsonObj.get("isDisabled").isJsonNull()) && !jsonObj.get("isDisabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isDisabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isDisabled").toString()));
      }
      if ((jsonObj.get("maritalStatusCode") != null && !jsonObj.get("maritalStatusCode").isJsonNull()) && !jsonObj.get("maritalStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `maritalStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("maritalStatusCode").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("userID") != null && !jsonObj.get("userID").isJsonNull()) && !jsonObj.get("userID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userID").toString()));
      }
      if ((jsonObj.get("integrationRecordId") != null && !jsonObj.get("integrationRecordId").isJsonNull()) && !jsonObj.get("integrationRecordId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `integrationRecordId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("integrationRecordId").toString()));
      }
      if ((jsonObj.get("cellPhoneNumber") != null && !jsonObj.get("cellPhoneNumber").isJsonNull()) && !jsonObj.get("cellPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `cellPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("cellPhoneNumber").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeeDemographicDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeeDemographicDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeeDemographicDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeeDemographicDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeeDemographicDetails>() {
           @Override
           public void write(JsonWriter out, EmployeeDemographicDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeeDemographicDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeeDemographicDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeeDemographicDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeeDemographicDetails
  * @throws IOException if the JSON string is invalid with respect to EmployeeDemographicDetails
  */
  public static EmployeeDemographicDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeeDemographicDetails.class);
  }

 /**
  * Convert an instance of EmployeeDemographicDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

