/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PayrollDeductionsHistory
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PayrollDeductionsHistory {
  public static final String SERIALIZED_NAME_ALLOW_PARTIAL_DEDUCTION = "allowPartialDeduction";
  @SerializedName(SERIALIZED_NAME_ALLOW_PARTIAL_DEDUCTION)
  private String allowPartialDeduction;

  public static final String SERIALIZED_NAME_BATCH_I_D = "batchID";
  @SerializedName(SERIALIZED_NAME_BATCH_I_D)
  private String batchID;

  public static final String SERIALIZED_NAME_BENEFIT_AMOUNT = "benefitAmount";
  @SerializedName(SERIALIZED_NAME_BENEFIT_AMOUNT)
  private Double benefitAmount;

  public static final String SERIALIZED_NAME_BENEFIT_OPTION = "benefitOption";
  @SerializedName(SERIALIZED_NAME_BENEFIT_OPTION)
  private String benefitOption;

  public static final String SERIALIZED_NAME_BENEFIT_PROVIDER = "benefitProvider";
  @SerializedName(SERIALIZED_NAME_BENEFIT_PROVIDER)
  private String benefitProvider;

  public static final String SERIALIZED_NAME_CHILD_SUPPORT_TYPE = "childSupportType";
  @SerializedName(SERIALIZED_NAME_CHILD_SUPPORT_TYPE)
  private String childSupportType;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_CHECK_ID = "checkId";
  @SerializedName(SERIALIZED_NAME_CHECK_ID)
  private String checkId;

  public static final String SERIALIZED_NAME_CURRENT_ARREARS_AMOUNT = "currentArrearsAmount";
  @SerializedName(SERIALIZED_NAME_CURRENT_ARREARS_AMOUNT)
  private Double currentArrearsAmount;

  public static final String SERIALIZED_NAME_CUSTOM_AMOUNT1 = "customAmount1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_AMOUNT1)
  private Double customAmount1;

  public static final String SERIALIZED_NAME_CUSTOM_AMOUNT2 = "customAmount2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_AMOUNT2)
  private Double customAmount2;

  public static final String SERIALIZED_NAME_CUSTOM_DATE = "customDate";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATE)
  private OffsetDateTime customDate;

  public static final String SERIALIZED_NAME_DEDUCTION_CALCULATION_BASIS_AMT = "deductionCalculationBasisAmt";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_CALCULATION_BASIS_AMT)
  private Double deductionCalculationBasisAmt;

  public static final String SERIALIZED_NAME_DEDUCTION_CODE = "deductionCode";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_CODE)
  private String deductionCode;

  public static final String SERIALIZED_NAME_DEDUCTION_FOR_BONUS_ONLY = "deductionForBonusOnly";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_FOR_BONUS_ONLY)
  private String deductionForBonusOnly;

  public static final String SERIALIZED_NAME_DEDUCTION_PLAN_TYPE = "deductionPlanType";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_PLAN_TYPE)
  private String deductionPlanType;

  public static final String SERIALIZED_NAME_DEDUCTION_TYPE = "deductionType";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_TYPE)
  private String deductionType;

  public static final String SERIALIZED_NAME_DEFERRED_COMPENSATION_CAP = "deferredCompensationCap";
  @SerializedName(SERIALIZED_NAME_DEFERRED_COMPENSATION_CAP)
  private Double deferredCompensationCap;

  public static final String SERIALIZED_NAME_DEFERRED_COMPENSATION_REGULAR_CAP = "deferredCompensationRegularCap";
  @SerializedName(SERIALIZED_NAME_DEFERRED_COMPENSATION_REGULAR_CAP)
  private Double deferredCompensationRegularCap;

  public static final String SERIALIZED_NAME_DEPENDENT_RECORD_ID = "dependentRecordId";
  @SerializedName(SERIALIZED_NAME_DEPENDENT_RECORD_ID)
  private String dependentRecordId;

  public static final String SERIALIZED_NAME_EMPLOYEE_CALCULATION_RATE_OR_PERCENT = "employeeCalculationRateOrPercent";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_CALCULATION_RATE_OR_PERCENT)
  private Double employeeCalculationRateOrPercent;

  public static final String SERIALIZED_NAME_EMPLOYEE_CALCULAITON_RULE = "employeeCalculaitonRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_CALCULAITON_RULE)
  private String employeeCalculaitonRule;

  public static final String SERIALIZED_NAME_EMPLOYEE_CURRENT_AMOUNT = "employeeCurrentAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_CURRENT_AMOUNT)
  private Double employeeCurrentAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_DEDUCTION_LAST_PAID = "employeeDeductionLastPaid";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_DEDUCTION_LAST_PAID)
  private OffsetDateTime employeeDeductionLastPaid;

  public static final String SERIALIZED_NAME_EMPLOYEE_GOAL_AMOUNT = "employeeGoalAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_GOAL_AMOUNT)
  private Double employeeGoalAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_GOAL_RULE = "employeeGoalRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_GOAL_RULE)
  private String employeeGoalRule;

  public static final String SERIALIZED_NAME_EMPLOYEE_GOAL_TO_DATE_AMOUNT = "employeeGoalToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_GOAL_TO_DATE_AMOUNT)
  private Double employeeGoalToDateAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EMPLOYEE_ORIGINAL_AMOUNT = "employeeOriginalAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ORIGINAL_AMOUNT)
  private Double employeeOriginalAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_EMPLOYER_ANNUAL_CAP_CALCULATION_RULE = "employerAnnualCapCalculationRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_ANNUAL_CAP_CALCULATION_RULE)
  private String employerAnnualCapCalculationRule;

  public static final String SERIALIZED_NAME_EMPLOYER_CALCULATION_RATE_OR_PERCENT = "employerCalculationRateOrPercent";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_CALCULATION_RATE_OR_PERCENT)
  private Double employerCalculationRateOrPercent;

  public static final String SERIALIZED_NAME_EMPLOYER_CALCULATION_RULE = "employerCalculationRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_CALCULATION_RULE)
  private String employerCalculationRule;

  public static final String SERIALIZED_NAME_EMPLOYER_CURRENT_AMOUNT = "employerCurrentAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_CURRENT_AMOUNT)
  private Double employerCurrentAmount;

  public static final String SERIALIZED_NAME_EMPLOYER_PERIOD_CAP_CALCULATION_RULE = "employerPeriodCapCalculationRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_PERIOD_CAP_CALCULATION_RULE)
  private String employerPeriodCapCalculationRule;

  public static final String SERIALIZED_NAME_EXCLUDE_FROM_WORKERS_COMPENSATION = "excludeFromWorkersCompensation";
  @SerializedName(SERIALIZED_NAME_EXCLUDE_FROM_WORKERS_COMPENSATION)
  private String excludeFromWorkersCompensation;

  public static final String SERIALIZED_NAME_GENERAL_LEDGER_EXPENSE_ACCOUNT = "generalLedgerExpenseAccount";
  @SerializedName(SERIALIZED_NAME_GENERAL_LEDGER_EXPENSE_ACCOUNT)
  private String generalLedgerExpenseAccount;

  public static final String SERIALIZED_NAME_GENERAL_LEDGER_PAY_ACCOUNT = "generalLedgerPayAccount";
  @SerializedName(SERIALIZED_NAME_GENERAL_LEDGER_PAY_ACCOUNT)
  private String generalLedgerPayAccount;

  public static final String SERIALIZED_NAME_IS401K = "is401k";
  @SerializedName(SERIALIZED_NAME_IS401K)
  private Boolean is401k;

  public static final String SERIALIZED_NAME_IS403B = "is403b";
  @SerializedName(SERIALIZED_NAME_IS403B)
  private Boolean is403b;

  public static final String SERIALIZED_NAME_IS408K = "is408k";
  @SerializedName(SERIALIZED_NAME_IS408K)
  private Boolean is408k;

  public static final String SERIALIZED_NAME_IS408P = "is408p";
  @SerializedName(SERIALIZED_NAME_IS408P)
  private Boolean is408p;

  public static final String SERIALIZED_NAME_IS457 = "is457";
  @SerializedName(SERIALIZED_NAME_IS457)
  private Boolean is457;

  public static final String SERIALIZED_NAME_IS457B = "is457b";
  @SerializedName(SERIALIZED_NAME_IS457B)
  private Boolean is457b;

  public static final String SERIALIZED_NAME_IS457_F = "is457F";
  @SerializedName(SERIALIZED_NAME_IS457_F)
  private Boolean is457F;

  public static final String SERIALIZED_NAME_IS501_C = "is501C";
  @SerializedName(SERIALIZED_NAME_IS501_C)
  private Boolean is501C;

  public static final String SERIALIZED_NAME_IS_D125 = "isD125";
  @SerializedName(SERIALIZED_NAME_IS_D125)
  private Boolean isD125;

  public static final String SERIALIZED_NAME_IS_DEDUCTION_OFF_SET = "isDeductionOffSet";
  @SerializedName(SERIALIZED_NAME_IS_DEDUCTION_OFF_SET)
  private Boolean isDeductionOffSet;

  public static final String SERIALIZED_NAME_IS_DEFERRED_COMPENSATION = "isDeferredCompensation";
  @SerializedName(SERIALIZED_NAME_IS_DEFERRED_COMPENSATION)
  private Boolean isDeferredCompensation;

  public static final String SERIALIZED_NAME_IS_DEPENDENT_CARE = "isDependentCare";
  @SerializedName(SERIALIZED_NAME_IS_DEPENDENT_CARE)
  private Boolean isDependentCare;

  public static final String SERIALIZED_NAME_IS_HOUSING = "isHousing";
  @SerializedName(SERIALIZED_NAME_IS_HOUSING)
  private Boolean isHousing;

  public static final String SERIALIZED_NAME_IS_NON_QUALIFIED_PLAN = "isNonQualifiedPlan";
  @SerializedName(SERIALIZED_NAME_IS_NON_QUALIFIED_PLAN)
  private Boolean isNonQualifiedPlan;

  public static final String SERIALIZED_NAME_IS_PUBLIC_EMPLOYEE_RETIREMENT = "isPublicEmployeeRetirement";
  @SerializedName(SERIALIZED_NAME_IS_PUBLIC_EMPLOYEE_RETIREMENT)
  private Boolean isPublicEmployeeRetirement;

  public static final String SERIALIZED_NAME_IS_PRORATED = "isProrated";
  @SerializedName(SERIALIZED_NAME_IS_PRORATED)
  private Boolean isProrated;

  public static final String SERIALIZED_NAME_IS_SECTION125 = "isSection125";
  @SerializedName(SERIALIZED_NAME_IS_SECTION125)
  private Boolean isSection125;

  public static final String SERIALIZED_NAME_IS_VOIDED = "isVoided";
  @SerializedName(SERIALIZED_NAME_IS_VOIDED)
  private Boolean isVoided;

  public static final String SERIALIZED_NAME_IS_VOIDING_RECORD = "isVoidingRecord";
  @SerializedName(SERIALIZED_NAME_IS_VOIDING_RECORD)
  private String isVoidingRecord;

  public static final String SERIALIZED_NAME_PAY_DATE = "payDate";
  @SerializedName(SERIALIZED_NAME_PAY_DATE)
  private OffsetDateTime payDate;

  public static final String SERIALIZED_NAME_PAYEE_I_D = "payeeID";
  @SerializedName(SERIALIZED_NAME_PAYEE_I_D)
  private String payeeID;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private String payGroup;

  public static final String SERIALIZED_NAME_PERIOD_CONTROL = "periodControl";
  @SerializedName(SERIALIZED_NAME_PERIOD_CONTROL)
  private String periodControl;

  public static final String SERIALIZED_NAME_RECORD_ID = "recordId";
  @SerializedName(SERIALIZED_NAME_RECORD_ID)
  private Double recordId;

  public static final String SERIALIZED_NAME_TAX_CALCULATION_GROUP_ID = "taxCalculationGroupId";
  @SerializedName(SERIALIZED_NAME_TAX_CALCULATION_GROUP_ID)
  private String taxCalculationGroupId;

  public static final String SERIALIZED_NAME_TAX_CATEGORY = "taxCategory";
  @SerializedName(SERIALIZED_NAME_TAX_CATEGORY)
  private String taxCategory;

  public static final String SERIALIZED_NAME_TIMECLOCK_CODE = "timeclockCode";
  @SerializedName(SERIALIZED_NAME_TIMECLOCK_CODE)
  private String timeclockCode;

  public static final String SERIALIZED_NAME_VENDOR = "vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private String vendor;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_ADDITIONAL_ARREARAGE_AMOUNT = "wageGarnishmentAdditionalArrearageAmount";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_ADDITIONAL_ARREARAGE_AMOUNT)
  private Double wageGarnishmentAdditionalArrearageAmount;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_ALLOCATE_AS_ARREARS = "wageGarnishmentAllocateAsArrears";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_ALLOCATE_AS_ARREARS)
  private String wageGarnishmentAllocateAsArrears;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_EXEMPT = "wageGarnishmentAmountExempt";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_EXEMPT)
  private Double wageGarnishmentAmountExempt;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_EXEMPT_FROM_LEVY = "wageGarnishmentAmountExemptFromLevy";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_EXEMPT_FROM_LEVY)
  private Double wageGarnishmentAmountExemptFromLevy;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_EXEMT_FROM_GARN = "wageGarnishmentAmountExemtFromGarn";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_EXEMT_FROM_GARN)
  private Double wageGarnishmentAmountExemtFromGarn;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_SUBJECT_TO_C_S = "wageGarnishmentAmountSubjectToCS";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_SUBJECT_TO_C_S)
  private Double wageGarnishmentAmountSubjectToCS;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_SUBJECT_TO_GARNISHMENT = "wageGarnishmentAmountSubjectToGarnishment";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_AMOUNT_SUBJECT_TO_GARNISHMENT)
  private Double wageGarnishmentAmountSubjectToGarnishment;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_DEDUCTION_TAX_CATEGORY = "wageGarnishmentDeductionTaxCategory";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_DEDUCTION_TAX_CATEGORY)
  private String wageGarnishmentDeductionTaxCategory;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_DISPOSABLE_INCOME = "wageGarnishmentDisposableIncome";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_DISPOSABLE_INCOME)
  private Double wageGarnishmentDisposableIncome;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_MINIMUM_WAGE_FACTOR = "wageGarnishmentMinimumWageFactor";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_MINIMUM_WAGE_FACTOR)
  private Double wageGarnishmentMinimumWageFactor;

  public static final String SERIALIZED_NAME_WAGE_GARNISHMENT_WAGE_CODE = "wageGarnishmentWageCode";
  @SerializedName(SERIALIZED_NAME_WAGE_GARNISHMENT_WAGE_CODE)
  private String wageGarnishmentWageCode;

  public static final String SERIALIZED_NAME_YEAR_TO_DATE_DEFERRED_COMPENSATION_COMBINED_AMOUNT = "yearToDateDeferredCompensationCombinedAmount";
  @SerializedName(SERIALIZED_NAME_YEAR_TO_DATE_DEFERRED_COMPENSATION_COMBINED_AMOUNT)
  private Double yearToDateDeferredCompensationCombinedAmount;

  public PayrollDeductionsHistory() {
  }

  public PayrollDeductionsHistory allowPartialDeduction(String allowPartialDeduction) {
    
    
    
    
    this.allowPartialDeduction = allowPartialDeduction;
    return this;
  }

   /**
   * Get allowPartialDeduction
   * @return allowPartialDeduction
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAllowPartialDeduction() {
    return allowPartialDeduction;
  }


  public void setAllowPartialDeduction(String allowPartialDeduction) {
    
    
    
    this.allowPartialDeduction = allowPartialDeduction;
  }


  public PayrollDeductionsHistory batchID(String batchID) {
    
    
    
    
    this.batchID = batchID;
    return this;
  }

   /**
   * Get batchID
   * @return batchID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBatchID() {
    return batchID;
  }


  public void setBatchID(String batchID) {
    
    
    
    this.batchID = batchID;
  }


  public PayrollDeductionsHistory benefitAmount(Double benefitAmount) {
    
    
    
    
    this.benefitAmount = benefitAmount;
    return this;
  }

  public PayrollDeductionsHistory benefitAmount(Integer benefitAmount) {
    
    
    
    
    this.benefitAmount = benefitAmount.doubleValue();
    return this;
  }

   /**
   * Get benefitAmount
   * @return benefitAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBenefitAmount() {
    return benefitAmount;
  }


  public void setBenefitAmount(Double benefitAmount) {
    
    
    
    this.benefitAmount = benefitAmount;
  }


  public PayrollDeductionsHistory benefitOption(String benefitOption) {
    
    
    
    
    this.benefitOption = benefitOption;
    return this;
  }

   /**
   * Get benefitOption
   * @return benefitOption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitOption() {
    return benefitOption;
  }


  public void setBenefitOption(String benefitOption) {
    
    
    
    this.benefitOption = benefitOption;
  }


  public PayrollDeductionsHistory benefitProvider(String benefitProvider) {
    
    
    
    
    this.benefitProvider = benefitProvider;
    return this;
  }

   /**
   * Get benefitProvider
   * @return benefitProvider
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitProvider() {
    return benefitProvider;
  }


  public void setBenefitProvider(String benefitProvider) {
    
    
    
    this.benefitProvider = benefitProvider;
  }


  public PayrollDeductionsHistory childSupportType(String childSupportType) {
    
    
    
    
    this.childSupportType = childSupportType;
    return this;
  }

   /**
   * Get childSupportType
   * @return childSupportType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChildSupportType() {
    return childSupportType;
  }


  public void setChildSupportType(String childSupportType) {
    
    
    
    this.childSupportType = childSupportType;
  }


  public PayrollDeductionsHistory companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public PayrollDeductionsHistory checkId(String checkId) {
    
    
    
    
    this.checkId = checkId;
    return this;
  }

   /**
   * Get checkId
   * @return checkId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCheckId() {
    return checkId;
  }


  public void setCheckId(String checkId) {
    
    
    
    this.checkId = checkId;
  }


  public PayrollDeductionsHistory currentArrearsAmount(Double currentArrearsAmount) {
    
    
    
    
    this.currentArrearsAmount = currentArrearsAmount;
    return this;
  }

  public PayrollDeductionsHistory currentArrearsAmount(Integer currentArrearsAmount) {
    
    
    
    
    this.currentArrearsAmount = currentArrearsAmount.doubleValue();
    return this;
  }

   /**
   * Get currentArrearsAmount
   * @return currentArrearsAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCurrentArrearsAmount() {
    return currentArrearsAmount;
  }


  public void setCurrentArrearsAmount(Double currentArrearsAmount) {
    
    
    
    this.currentArrearsAmount = currentArrearsAmount;
  }


  public PayrollDeductionsHistory customAmount1(Double customAmount1) {
    
    
    
    
    this.customAmount1 = customAmount1;
    return this;
  }

  public PayrollDeductionsHistory customAmount1(Integer customAmount1) {
    
    
    
    
    this.customAmount1 = customAmount1.doubleValue();
    return this;
  }

   /**
   * Get customAmount1
   * @return customAmount1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCustomAmount1() {
    return customAmount1;
  }


  public void setCustomAmount1(Double customAmount1) {
    
    
    
    this.customAmount1 = customAmount1;
  }


  public PayrollDeductionsHistory customAmount2(Double customAmount2) {
    
    
    
    
    this.customAmount2 = customAmount2;
    return this;
  }

  public PayrollDeductionsHistory customAmount2(Integer customAmount2) {
    
    
    
    
    this.customAmount2 = customAmount2.doubleValue();
    return this;
  }

   /**
   * Get customAmount2
   * @return customAmount2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCustomAmount2() {
    return customAmount2;
  }


  public void setCustomAmount2(Double customAmount2) {
    
    
    
    this.customAmount2 = customAmount2;
  }


  public PayrollDeductionsHistory customDate(OffsetDateTime customDate) {
    
    
    
    
    this.customDate = customDate;
    return this;
  }

   /**
   * Get customDate
   * @return customDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCustomDate() {
    return customDate;
  }


  public void setCustomDate(OffsetDateTime customDate) {
    
    
    
    this.customDate = customDate;
  }


  public PayrollDeductionsHistory deductionCalculationBasisAmt(Double deductionCalculationBasisAmt) {
    
    
    
    
    this.deductionCalculationBasisAmt = deductionCalculationBasisAmt;
    return this;
  }

  public PayrollDeductionsHistory deductionCalculationBasisAmt(Integer deductionCalculationBasisAmt) {
    
    
    
    
    this.deductionCalculationBasisAmt = deductionCalculationBasisAmt.doubleValue();
    return this;
  }

   /**
   * Get deductionCalculationBasisAmt
   * @return deductionCalculationBasisAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDeductionCalculationBasisAmt() {
    return deductionCalculationBasisAmt;
  }


  public void setDeductionCalculationBasisAmt(Double deductionCalculationBasisAmt) {
    
    
    
    this.deductionCalculationBasisAmt = deductionCalculationBasisAmt;
  }


  public PayrollDeductionsHistory deductionCode(String deductionCode) {
    
    
    
    
    this.deductionCode = deductionCode;
    return this;
  }

   /**
   * Get deductionCode
   * @return deductionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionCode() {
    return deductionCode;
  }


  public void setDeductionCode(String deductionCode) {
    
    
    
    this.deductionCode = deductionCode;
  }


  public PayrollDeductionsHistory deductionForBonusOnly(String deductionForBonusOnly) {
    
    
    
    
    this.deductionForBonusOnly = deductionForBonusOnly;
    return this;
  }

   /**
   * Get deductionForBonusOnly
   * @return deductionForBonusOnly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionForBonusOnly() {
    return deductionForBonusOnly;
  }


  public void setDeductionForBonusOnly(String deductionForBonusOnly) {
    
    
    
    this.deductionForBonusOnly = deductionForBonusOnly;
  }


  public PayrollDeductionsHistory deductionPlanType(String deductionPlanType) {
    
    
    
    
    this.deductionPlanType = deductionPlanType;
    return this;
  }

   /**
   * Get deductionPlanType
   * @return deductionPlanType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionPlanType() {
    return deductionPlanType;
  }


  public void setDeductionPlanType(String deductionPlanType) {
    
    
    
    this.deductionPlanType = deductionPlanType;
  }


  public PayrollDeductionsHistory deductionType(String deductionType) {
    
    
    
    
    this.deductionType = deductionType;
    return this;
  }

   /**
   * Get deductionType
   * @return deductionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionType() {
    return deductionType;
  }


  public void setDeductionType(String deductionType) {
    
    
    
    this.deductionType = deductionType;
  }


  public PayrollDeductionsHistory deferredCompensationCap(Double deferredCompensationCap) {
    
    
    
    
    this.deferredCompensationCap = deferredCompensationCap;
    return this;
  }

  public PayrollDeductionsHistory deferredCompensationCap(Integer deferredCompensationCap) {
    
    
    
    
    this.deferredCompensationCap = deferredCompensationCap.doubleValue();
    return this;
  }

   /**
   * Get deferredCompensationCap
   * @return deferredCompensationCap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDeferredCompensationCap() {
    return deferredCompensationCap;
  }


  public void setDeferredCompensationCap(Double deferredCompensationCap) {
    
    
    
    this.deferredCompensationCap = deferredCompensationCap;
  }


  public PayrollDeductionsHistory deferredCompensationRegularCap(Double deferredCompensationRegularCap) {
    
    
    
    
    this.deferredCompensationRegularCap = deferredCompensationRegularCap;
    return this;
  }

  public PayrollDeductionsHistory deferredCompensationRegularCap(Integer deferredCompensationRegularCap) {
    
    
    
    
    this.deferredCompensationRegularCap = deferredCompensationRegularCap.doubleValue();
    return this;
  }

   /**
   * Get deferredCompensationRegularCap
   * @return deferredCompensationRegularCap
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getDeferredCompensationRegularCap() {
    return deferredCompensationRegularCap;
  }


  public void setDeferredCompensationRegularCap(Double deferredCompensationRegularCap) {
    
    
    
    this.deferredCompensationRegularCap = deferredCompensationRegularCap;
  }


  public PayrollDeductionsHistory dependentRecordId(String dependentRecordId) {
    
    
    
    
    this.dependentRecordId = dependentRecordId;
    return this;
  }

   /**
   * Get dependentRecordId
   * @return dependentRecordId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDependentRecordId() {
    return dependentRecordId;
  }


  public void setDependentRecordId(String dependentRecordId) {
    
    
    
    this.dependentRecordId = dependentRecordId;
  }


  public PayrollDeductionsHistory employeeCalculationRateOrPercent(Double employeeCalculationRateOrPercent) {
    
    
    
    
    this.employeeCalculationRateOrPercent = employeeCalculationRateOrPercent;
    return this;
  }

  public PayrollDeductionsHistory employeeCalculationRateOrPercent(Integer employeeCalculationRateOrPercent) {
    
    
    
    
    this.employeeCalculationRateOrPercent = employeeCalculationRateOrPercent.doubleValue();
    return this;
  }

   /**
   * Get employeeCalculationRateOrPercent
   * @return employeeCalculationRateOrPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeCalculationRateOrPercent() {
    return employeeCalculationRateOrPercent;
  }


  public void setEmployeeCalculationRateOrPercent(Double employeeCalculationRateOrPercent) {
    
    
    
    this.employeeCalculationRateOrPercent = employeeCalculationRateOrPercent;
  }


  public PayrollDeductionsHistory employeeCalculaitonRule(String employeeCalculaitonRule) {
    
    
    
    
    this.employeeCalculaitonRule = employeeCalculaitonRule;
    return this;
  }

   /**
   * Get employeeCalculaitonRule
   * @return employeeCalculaitonRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeCalculaitonRule() {
    return employeeCalculaitonRule;
  }


  public void setEmployeeCalculaitonRule(String employeeCalculaitonRule) {
    
    
    
    this.employeeCalculaitonRule = employeeCalculaitonRule;
  }


  public PayrollDeductionsHistory employeeCurrentAmount(Double employeeCurrentAmount) {
    
    
    
    
    this.employeeCurrentAmount = employeeCurrentAmount;
    return this;
  }

  public PayrollDeductionsHistory employeeCurrentAmount(Integer employeeCurrentAmount) {
    
    
    
    
    this.employeeCurrentAmount = employeeCurrentAmount.doubleValue();
    return this;
  }

   /**
   * Get employeeCurrentAmount
   * @return employeeCurrentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeCurrentAmount() {
    return employeeCurrentAmount;
  }


  public void setEmployeeCurrentAmount(Double employeeCurrentAmount) {
    
    
    
    this.employeeCurrentAmount = employeeCurrentAmount;
  }


  public PayrollDeductionsHistory employeeDeductionLastPaid(OffsetDateTime employeeDeductionLastPaid) {
    
    
    
    
    this.employeeDeductionLastPaid = employeeDeductionLastPaid;
    return this;
  }

   /**
   * Get employeeDeductionLastPaid
   * @return employeeDeductionLastPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEmployeeDeductionLastPaid() {
    return employeeDeductionLastPaid;
  }


  public void setEmployeeDeductionLastPaid(OffsetDateTime employeeDeductionLastPaid) {
    
    
    
    this.employeeDeductionLastPaid = employeeDeductionLastPaid;
  }


  public PayrollDeductionsHistory employeeGoalAmount(Double employeeGoalAmount) {
    
    
    
    
    this.employeeGoalAmount = employeeGoalAmount;
    return this;
  }

  public PayrollDeductionsHistory employeeGoalAmount(Integer employeeGoalAmount) {
    
    
    
    
    this.employeeGoalAmount = employeeGoalAmount.doubleValue();
    return this;
  }

   /**
   * Get employeeGoalAmount
   * @return employeeGoalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeGoalAmount() {
    return employeeGoalAmount;
  }


  public void setEmployeeGoalAmount(Double employeeGoalAmount) {
    
    
    
    this.employeeGoalAmount = employeeGoalAmount;
  }


  public PayrollDeductionsHistory employeeGoalRule(String employeeGoalRule) {
    
    
    
    
    this.employeeGoalRule = employeeGoalRule;
    return this;
  }

   /**
   * Get employeeGoalRule
   * @return employeeGoalRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeGoalRule() {
    return employeeGoalRule;
  }


  public void setEmployeeGoalRule(String employeeGoalRule) {
    
    
    
    this.employeeGoalRule = employeeGoalRule;
  }


  public PayrollDeductionsHistory employeeGoalToDateAmount(Double employeeGoalToDateAmount) {
    
    
    
    
    this.employeeGoalToDateAmount = employeeGoalToDateAmount;
    return this;
  }

  public PayrollDeductionsHistory employeeGoalToDateAmount(Integer employeeGoalToDateAmount) {
    
    
    
    
    this.employeeGoalToDateAmount = employeeGoalToDateAmount.doubleValue();
    return this;
  }

   /**
   * Get employeeGoalToDateAmount
   * @return employeeGoalToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeGoalToDateAmount() {
    return employeeGoalToDateAmount;
  }


  public void setEmployeeGoalToDateAmount(Double employeeGoalToDateAmount) {
    
    
    
    this.employeeGoalToDateAmount = employeeGoalToDateAmount;
  }


  public PayrollDeductionsHistory employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public PayrollDeductionsHistory employeeOriginalAmount(Double employeeOriginalAmount) {
    
    
    
    
    this.employeeOriginalAmount = employeeOriginalAmount;
    return this;
  }

  public PayrollDeductionsHistory employeeOriginalAmount(Integer employeeOriginalAmount) {
    
    
    
    
    this.employeeOriginalAmount = employeeOriginalAmount.doubleValue();
    return this;
  }

   /**
   * Get employeeOriginalAmount
   * @return employeeOriginalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeOriginalAmount() {
    return employeeOriginalAmount;
  }


  public void setEmployeeOriginalAmount(Double employeeOriginalAmount) {
    
    
    
    this.employeeOriginalAmount = employeeOriginalAmount;
  }


  public PayrollDeductionsHistory employeeNumber(String employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public PayrollDeductionsHistory employerAnnualCapCalculationRule(String employerAnnualCapCalculationRule) {
    
    
    
    
    this.employerAnnualCapCalculationRule = employerAnnualCapCalculationRule;
    return this;
  }

   /**
   * Get employerAnnualCapCalculationRule
   * @return employerAnnualCapCalculationRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployerAnnualCapCalculationRule() {
    return employerAnnualCapCalculationRule;
  }


  public void setEmployerAnnualCapCalculationRule(String employerAnnualCapCalculationRule) {
    
    
    
    this.employerAnnualCapCalculationRule = employerAnnualCapCalculationRule;
  }


  public PayrollDeductionsHistory employerCalculationRateOrPercent(Double employerCalculationRateOrPercent) {
    
    
    
    
    this.employerCalculationRateOrPercent = employerCalculationRateOrPercent;
    return this;
  }

  public PayrollDeductionsHistory employerCalculationRateOrPercent(Integer employerCalculationRateOrPercent) {
    
    
    
    
    this.employerCalculationRateOrPercent = employerCalculationRateOrPercent.doubleValue();
    return this;
  }

   /**
   * Get employerCalculationRateOrPercent
   * @return employerCalculationRateOrPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerCalculationRateOrPercent() {
    return employerCalculationRateOrPercent;
  }


  public void setEmployerCalculationRateOrPercent(Double employerCalculationRateOrPercent) {
    
    
    
    this.employerCalculationRateOrPercent = employerCalculationRateOrPercent;
  }


  public PayrollDeductionsHistory employerCalculationRule(String employerCalculationRule) {
    
    
    
    
    this.employerCalculationRule = employerCalculationRule;
    return this;
  }

   /**
   * Get employerCalculationRule
   * @return employerCalculationRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployerCalculationRule() {
    return employerCalculationRule;
  }


  public void setEmployerCalculationRule(String employerCalculationRule) {
    
    
    
    this.employerCalculationRule = employerCalculationRule;
  }


  public PayrollDeductionsHistory employerCurrentAmount(Double employerCurrentAmount) {
    
    
    
    
    this.employerCurrentAmount = employerCurrentAmount;
    return this;
  }

  public PayrollDeductionsHistory employerCurrentAmount(Integer employerCurrentAmount) {
    
    
    
    
    this.employerCurrentAmount = employerCurrentAmount.doubleValue();
    return this;
  }

   /**
   * Get employerCurrentAmount
   * @return employerCurrentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerCurrentAmount() {
    return employerCurrentAmount;
  }


  public void setEmployerCurrentAmount(Double employerCurrentAmount) {
    
    
    
    this.employerCurrentAmount = employerCurrentAmount;
  }


  public PayrollDeductionsHistory employerPeriodCapCalculationRule(String employerPeriodCapCalculationRule) {
    
    
    
    
    this.employerPeriodCapCalculationRule = employerPeriodCapCalculationRule;
    return this;
  }

   /**
   * Get employerPeriodCapCalculationRule
   * @return employerPeriodCapCalculationRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployerPeriodCapCalculationRule() {
    return employerPeriodCapCalculationRule;
  }


  public void setEmployerPeriodCapCalculationRule(String employerPeriodCapCalculationRule) {
    
    
    
    this.employerPeriodCapCalculationRule = employerPeriodCapCalculationRule;
  }


  public PayrollDeductionsHistory excludeFromWorkersCompensation(String excludeFromWorkersCompensation) {
    
    
    
    
    this.excludeFromWorkersCompensation = excludeFromWorkersCompensation;
    return this;
  }

   /**
   * Get excludeFromWorkersCompensation
   * @return excludeFromWorkersCompensation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getExcludeFromWorkersCompensation() {
    return excludeFromWorkersCompensation;
  }


  public void setExcludeFromWorkersCompensation(String excludeFromWorkersCompensation) {
    
    
    
    this.excludeFromWorkersCompensation = excludeFromWorkersCompensation;
  }


  public PayrollDeductionsHistory generalLedgerExpenseAccount(String generalLedgerExpenseAccount) {
    
    
    
    
    this.generalLedgerExpenseAccount = generalLedgerExpenseAccount;
    return this;
  }

   /**
   * Get generalLedgerExpenseAccount
   * @return generalLedgerExpenseAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGeneralLedgerExpenseAccount() {
    return generalLedgerExpenseAccount;
  }


  public void setGeneralLedgerExpenseAccount(String generalLedgerExpenseAccount) {
    
    
    
    this.generalLedgerExpenseAccount = generalLedgerExpenseAccount;
  }


  public PayrollDeductionsHistory generalLedgerPayAccount(String generalLedgerPayAccount) {
    
    
    
    
    this.generalLedgerPayAccount = generalLedgerPayAccount;
    return this;
  }

   /**
   * Get generalLedgerPayAccount
   * @return generalLedgerPayAccount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGeneralLedgerPayAccount() {
    return generalLedgerPayAccount;
  }


  public void setGeneralLedgerPayAccount(String generalLedgerPayAccount) {
    
    
    
    this.generalLedgerPayAccount = generalLedgerPayAccount;
  }


  public PayrollDeductionsHistory is401k(Boolean is401k) {
    
    
    
    
    this.is401k = is401k;
    return this;
  }

   /**
   * Get is401k
   * @return is401k
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs401k() {
    return is401k;
  }


  public void setIs401k(Boolean is401k) {
    
    
    
    this.is401k = is401k;
  }


  public PayrollDeductionsHistory is403b(Boolean is403b) {
    
    
    
    
    this.is403b = is403b;
    return this;
  }

   /**
   * Get is403b
   * @return is403b
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs403b() {
    return is403b;
  }


  public void setIs403b(Boolean is403b) {
    
    
    
    this.is403b = is403b;
  }


  public PayrollDeductionsHistory is408k(Boolean is408k) {
    
    
    
    
    this.is408k = is408k;
    return this;
  }

   /**
   * Get is408k
   * @return is408k
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs408k() {
    return is408k;
  }


  public void setIs408k(Boolean is408k) {
    
    
    
    this.is408k = is408k;
  }


  public PayrollDeductionsHistory is408p(Boolean is408p) {
    
    
    
    
    this.is408p = is408p;
    return this;
  }

   /**
   * Get is408p
   * @return is408p
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs408p() {
    return is408p;
  }


  public void setIs408p(Boolean is408p) {
    
    
    
    this.is408p = is408p;
  }


  public PayrollDeductionsHistory is457(Boolean is457) {
    
    
    
    
    this.is457 = is457;
    return this;
  }

   /**
   * Get is457
   * @return is457
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs457() {
    return is457;
  }


  public void setIs457(Boolean is457) {
    
    
    
    this.is457 = is457;
  }


  public PayrollDeductionsHistory is457b(Boolean is457b) {
    
    
    
    
    this.is457b = is457b;
    return this;
  }

   /**
   * Get is457b
   * @return is457b
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs457b() {
    return is457b;
  }


  public void setIs457b(Boolean is457b) {
    
    
    
    this.is457b = is457b;
  }


  public PayrollDeductionsHistory is457F(Boolean is457F) {
    
    
    
    
    this.is457F = is457F;
    return this;
  }

   /**
   * Get is457F
   * @return is457F
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs457F() {
    return is457F;
  }


  public void setIs457F(Boolean is457F) {
    
    
    
    this.is457F = is457F;
  }


  public PayrollDeductionsHistory is501C(Boolean is501C) {
    
    
    
    
    this.is501C = is501C;
    return this;
  }

   /**
   * Get is501C
   * @return is501C
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIs501C() {
    return is501C;
  }


  public void setIs501C(Boolean is501C) {
    
    
    
    this.is501C = is501C;
  }


  public PayrollDeductionsHistory isD125(Boolean isD125) {
    
    
    
    
    this.isD125 = isD125;
    return this;
  }

   /**
   * Get isD125
   * @return isD125
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsD125() {
    return isD125;
  }


  public void setIsD125(Boolean isD125) {
    
    
    
    this.isD125 = isD125;
  }


  public PayrollDeductionsHistory isDeductionOffSet(Boolean isDeductionOffSet) {
    
    
    
    
    this.isDeductionOffSet = isDeductionOffSet;
    return this;
  }

   /**
   * Get isDeductionOffSet
   * @return isDeductionOffSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDeductionOffSet() {
    return isDeductionOffSet;
  }


  public void setIsDeductionOffSet(Boolean isDeductionOffSet) {
    
    
    
    this.isDeductionOffSet = isDeductionOffSet;
  }


  public PayrollDeductionsHistory isDeferredCompensation(Boolean isDeferredCompensation) {
    
    
    
    
    this.isDeferredCompensation = isDeferredCompensation;
    return this;
  }

   /**
   * Get isDeferredCompensation
   * @return isDeferredCompensation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDeferredCompensation() {
    return isDeferredCompensation;
  }


  public void setIsDeferredCompensation(Boolean isDeferredCompensation) {
    
    
    
    this.isDeferredCompensation = isDeferredCompensation;
  }


  public PayrollDeductionsHistory isDependentCare(Boolean isDependentCare) {
    
    
    
    
    this.isDependentCare = isDependentCare;
    return this;
  }

   /**
   * Get isDependentCare
   * @return isDependentCare
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDependentCare() {
    return isDependentCare;
  }


  public void setIsDependentCare(Boolean isDependentCare) {
    
    
    
    this.isDependentCare = isDependentCare;
  }


  public PayrollDeductionsHistory isHousing(Boolean isHousing) {
    
    
    
    
    this.isHousing = isHousing;
    return this;
  }

   /**
   * Get isHousing
   * @return isHousing
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsHousing() {
    return isHousing;
  }


  public void setIsHousing(Boolean isHousing) {
    
    
    
    this.isHousing = isHousing;
  }


  public PayrollDeductionsHistory isNonQualifiedPlan(Boolean isNonQualifiedPlan) {
    
    
    
    
    this.isNonQualifiedPlan = isNonQualifiedPlan;
    return this;
  }

   /**
   * Get isNonQualifiedPlan
   * @return isNonQualifiedPlan
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsNonQualifiedPlan() {
    return isNonQualifiedPlan;
  }


  public void setIsNonQualifiedPlan(Boolean isNonQualifiedPlan) {
    
    
    
    this.isNonQualifiedPlan = isNonQualifiedPlan;
  }


  public PayrollDeductionsHistory isPublicEmployeeRetirement(Boolean isPublicEmployeeRetirement) {
    
    
    
    
    this.isPublicEmployeeRetirement = isPublicEmployeeRetirement;
    return this;
  }

   /**
   * Get isPublicEmployeeRetirement
   * @return isPublicEmployeeRetirement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPublicEmployeeRetirement() {
    return isPublicEmployeeRetirement;
  }


  public void setIsPublicEmployeeRetirement(Boolean isPublicEmployeeRetirement) {
    
    
    
    this.isPublicEmployeeRetirement = isPublicEmployeeRetirement;
  }


  public PayrollDeductionsHistory isProrated(Boolean isProrated) {
    
    
    
    
    this.isProrated = isProrated;
    return this;
  }

   /**
   * Get isProrated
   * @return isProrated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsProrated() {
    return isProrated;
  }


  public void setIsProrated(Boolean isProrated) {
    
    
    
    this.isProrated = isProrated;
  }


  public PayrollDeductionsHistory isSection125(Boolean isSection125) {
    
    
    
    
    this.isSection125 = isSection125;
    return this;
  }

   /**
   * Get isSection125
   * @return isSection125
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSection125() {
    return isSection125;
  }


  public void setIsSection125(Boolean isSection125) {
    
    
    
    this.isSection125 = isSection125;
  }


  public PayrollDeductionsHistory isVoided(Boolean isVoided) {
    
    
    
    
    this.isVoided = isVoided;
    return this;
  }

   /**
   * Get isVoided
   * @return isVoided
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsVoided() {
    return isVoided;
  }


  public void setIsVoided(Boolean isVoided) {
    
    
    
    this.isVoided = isVoided;
  }


  public PayrollDeductionsHistory isVoidingRecord(String isVoidingRecord) {
    
    
    
    
    this.isVoidingRecord = isVoidingRecord;
    return this;
  }

   /**
   * Get isVoidingRecord
   * @return isVoidingRecord
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsVoidingRecord() {
    return isVoidingRecord;
  }


  public void setIsVoidingRecord(String isVoidingRecord) {
    
    
    
    this.isVoidingRecord = isVoidingRecord;
  }


  public PayrollDeductionsHistory payDate(OffsetDateTime payDate) {
    
    
    
    
    this.payDate = payDate;
    return this;
  }

   /**
   * Get payDate
   * @return payDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPayDate() {
    return payDate;
  }


  public void setPayDate(OffsetDateTime payDate) {
    
    
    
    this.payDate = payDate;
  }


  public PayrollDeductionsHistory payeeID(String payeeID) {
    
    
    
    
    this.payeeID = payeeID;
    return this;
  }

   /**
   * Get payeeID
   * @return payeeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayeeID() {
    return payeeID;
  }


  public void setPayeeID(String payeeID) {
    
    
    
    this.payeeID = payeeID;
  }


  public PayrollDeductionsHistory payGroup(String payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(String payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public PayrollDeductionsHistory periodControl(String periodControl) {
    
    
    
    
    this.periodControl = periodControl;
    return this;
  }

   /**
   * Get periodControl
   * @return periodControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodControl() {
    return periodControl;
  }


  public void setPeriodControl(String periodControl) {
    
    
    
    this.periodControl = periodControl;
  }


  public PayrollDeductionsHistory recordId(Double recordId) {
    
    
    
    
    this.recordId = recordId;
    return this;
  }

  public PayrollDeductionsHistory recordId(Integer recordId) {
    
    
    
    
    this.recordId = recordId.doubleValue();
    return this;
  }

   /**
   * Get recordId
   * @return recordId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getRecordId() {
    return recordId;
  }


  public void setRecordId(Double recordId) {
    
    
    
    this.recordId = recordId;
  }


  public PayrollDeductionsHistory taxCalculationGroupId(String taxCalculationGroupId) {
    
    
    
    
    this.taxCalculationGroupId = taxCalculationGroupId;
    return this;
  }

   /**
   * Get taxCalculationGroupId
   * @return taxCalculationGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalculationGroupId() {
    return taxCalculationGroupId;
  }


  public void setTaxCalculationGroupId(String taxCalculationGroupId) {
    
    
    
    this.taxCalculationGroupId = taxCalculationGroupId;
  }


  public PayrollDeductionsHistory taxCategory(String taxCategory) {
    
    
    
    
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCategory() {
    return taxCategory;
  }


  public void setTaxCategory(String taxCategory) {
    
    
    
    this.taxCategory = taxCategory;
  }


  public PayrollDeductionsHistory timeclockCode(String timeclockCode) {
    
    
    
    
    this.timeclockCode = timeclockCode;
    return this;
  }

   /**
   * Get timeclockCode
   * @return timeclockCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimeclockCode() {
    return timeclockCode;
  }


  public void setTimeclockCode(String timeclockCode) {
    
    
    
    this.timeclockCode = timeclockCode;
  }


  public PayrollDeductionsHistory vendor(String vendor) {
    
    
    
    
    this.vendor = vendor;
    return this;
  }

   /**
   * Get vendor
   * @return vendor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getVendor() {
    return vendor;
  }


  public void setVendor(String vendor) {
    
    
    
    this.vendor = vendor;
  }


  public PayrollDeductionsHistory wageGarnishmentAdditionalArrearageAmount(Double wageGarnishmentAdditionalArrearageAmount) {
    
    
    
    
    this.wageGarnishmentAdditionalArrearageAmount = wageGarnishmentAdditionalArrearageAmount;
    return this;
  }

  public PayrollDeductionsHistory wageGarnishmentAdditionalArrearageAmount(Integer wageGarnishmentAdditionalArrearageAmount) {
    
    
    
    
    this.wageGarnishmentAdditionalArrearageAmount = wageGarnishmentAdditionalArrearageAmount.doubleValue();
    return this;
  }

   /**
   * Get wageGarnishmentAdditionalArrearageAmount
   * @return wageGarnishmentAdditionalArrearageAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWageGarnishmentAdditionalArrearageAmount() {
    return wageGarnishmentAdditionalArrearageAmount;
  }


  public void setWageGarnishmentAdditionalArrearageAmount(Double wageGarnishmentAdditionalArrearageAmount) {
    
    
    
    this.wageGarnishmentAdditionalArrearageAmount = wageGarnishmentAdditionalArrearageAmount;
  }


  public PayrollDeductionsHistory wageGarnishmentAllocateAsArrears(String wageGarnishmentAllocateAsArrears) {
    
    
    
    
    this.wageGarnishmentAllocateAsArrears = wageGarnishmentAllocateAsArrears;
    return this;
  }

   /**
   * Get wageGarnishmentAllocateAsArrears
   * @return wageGarnishmentAllocateAsArrears
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWageGarnishmentAllocateAsArrears() {
    return wageGarnishmentAllocateAsArrears;
  }


  public void setWageGarnishmentAllocateAsArrears(String wageGarnishmentAllocateAsArrears) {
    
    
    
    this.wageGarnishmentAllocateAsArrears = wageGarnishmentAllocateAsArrears;
  }


  public PayrollDeductionsHistory wageGarnishmentAmountExempt(Double wageGarnishmentAmountExempt) {
    
    
    
    
    this.wageGarnishmentAmountExempt = wageGarnishmentAmountExempt;
    return this;
  }

  public PayrollDeductionsHistory wageGarnishmentAmountExempt(Integer wageGarnishmentAmountExempt) {
    
    
    
    
    this.wageGarnishmentAmountExempt = wageGarnishmentAmountExempt.doubleValue();
    return this;
  }

   /**
   * Get wageGarnishmentAmountExempt
   * @return wageGarnishmentAmountExempt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWageGarnishmentAmountExempt() {
    return wageGarnishmentAmountExempt;
  }


  public void setWageGarnishmentAmountExempt(Double wageGarnishmentAmountExempt) {
    
    
    
    this.wageGarnishmentAmountExempt = wageGarnishmentAmountExempt;
  }


  public PayrollDeductionsHistory wageGarnishmentAmountExemptFromLevy(Double wageGarnishmentAmountExemptFromLevy) {
    
    
    
    
    this.wageGarnishmentAmountExemptFromLevy = wageGarnishmentAmountExemptFromLevy;
    return this;
  }

  public PayrollDeductionsHistory wageGarnishmentAmountExemptFromLevy(Integer wageGarnishmentAmountExemptFromLevy) {
    
    
    
    
    this.wageGarnishmentAmountExemptFromLevy = wageGarnishmentAmountExemptFromLevy.doubleValue();
    return this;
  }

   /**
   * Get wageGarnishmentAmountExemptFromLevy
   * @return wageGarnishmentAmountExemptFromLevy
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWageGarnishmentAmountExemptFromLevy() {
    return wageGarnishmentAmountExemptFromLevy;
  }


  public void setWageGarnishmentAmountExemptFromLevy(Double wageGarnishmentAmountExemptFromLevy) {
    
    
    
    this.wageGarnishmentAmountExemptFromLevy = wageGarnishmentAmountExemptFromLevy;
  }


  public PayrollDeductionsHistory wageGarnishmentAmountExemtFromGarn(Double wageGarnishmentAmountExemtFromGarn) {
    
    
    
    
    this.wageGarnishmentAmountExemtFromGarn = wageGarnishmentAmountExemtFromGarn;
    return this;
  }

  public PayrollDeductionsHistory wageGarnishmentAmountExemtFromGarn(Integer wageGarnishmentAmountExemtFromGarn) {
    
    
    
    
    this.wageGarnishmentAmountExemtFromGarn = wageGarnishmentAmountExemtFromGarn.doubleValue();
    return this;
  }

   /**
   * Get wageGarnishmentAmountExemtFromGarn
   * @return wageGarnishmentAmountExemtFromGarn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWageGarnishmentAmountExemtFromGarn() {
    return wageGarnishmentAmountExemtFromGarn;
  }


  public void setWageGarnishmentAmountExemtFromGarn(Double wageGarnishmentAmountExemtFromGarn) {
    
    
    
    this.wageGarnishmentAmountExemtFromGarn = wageGarnishmentAmountExemtFromGarn;
  }


  public PayrollDeductionsHistory wageGarnishmentAmountSubjectToCS(Double wageGarnishmentAmountSubjectToCS) {
    
    
    
    
    this.wageGarnishmentAmountSubjectToCS = wageGarnishmentAmountSubjectToCS;
    return this;
  }

  public PayrollDeductionsHistory wageGarnishmentAmountSubjectToCS(Integer wageGarnishmentAmountSubjectToCS) {
    
    
    
    
    this.wageGarnishmentAmountSubjectToCS = wageGarnishmentAmountSubjectToCS.doubleValue();
    return this;
  }

   /**
   * Get wageGarnishmentAmountSubjectToCS
   * @return wageGarnishmentAmountSubjectToCS
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWageGarnishmentAmountSubjectToCS() {
    return wageGarnishmentAmountSubjectToCS;
  }


  public void setWageGarnishmentAmountSubjectToCS(Double wageGarnishmentAmountSubjectToCS) {
    
    
    
    this.wageGarnishmentAmountSubjectToCS = wageGarnishmentAmountSubjectToCS;
  }


  public PayrollDeductionsHistory wageGarnishmentAmountSubjectToGarnishment(Double wageGarnishmentAmountSubjectToGarnishment) {
    
    
    
    
    this.wageGarnishmentAmountSubjectToGarnishment = wageGarnishmentAmountSubjectToGarnishment;
    return this;
  }

  public PayrollDeductionsHistory wageGarnishmentAmountSubjectToGarnishment(Integer wageGarnishmentAmountSubjectToGarnishment) {
    
    
    
    
    this.wageGarnishmentAmountSubjectToGarnishment = wageGarnishmentAmountSubjectToGarnishment.doubleValue();
    return this;
  }

   /**
   * Get wageGarnishmentAmountSubjectToGarnishment
   * @return wageGarnishmentAmountSubjectToGarnishment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWageGarnishmentAmountSubjectToGarnishment() {
    return wageGarnishmentAmountSubjectToGarnishment;
  }


  public void setWageGarnishmentAmountSubjectToGarnishment(Double wageGarnishmentAmountSubjectToGarnishment) {
    
    
    
    this.wageGarnishmentAmountSubjectToGarnishment = wageGarnishmentAmountSubjectToGarnishment;
  }


  public PayrollDeductionsHistory wageGarnishmentDeductionTaxCategory(String wageGarnishmentDeductionTaxCategory) {
    
    
    
    
    this.wageGarnishmentDeductionTaxCategory = wageGarnishmentDeductionTaxCategory;
    return this;
  }

   /**
   * Get wageGarnishmentDeductionTaxCategory
   * @return wageGarnishmentDeductionTaxCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWageGarnishmentDeductionTaxCategory() {
    return wageGarnishmentDeductionTaxCategory;
  }


  public void setWageGarnishmentDeductionTaxCategory(String wageGarnishmentDeductionTaxCategory) {
    
    
    
    this.wageGarnishmentDeductionTaxCategory = wageGarnishmentDeductionTaxCategory;
  }


  public PayrollDeductionsHistory wageGarnishmentDisposableIncome(Double wageGarnishmentDisposableIncome) {
    
    
    
    
    this.wageGarnishmentDisposableIncome = wageGarnishmentDisposableIncome;
    return this;
  }

  public PayrollDeductionsHistory wageGarnishmentDisposableIncome(Integer wageGarnishmentDisposableIncome) {
    
    
    
    
    this.wageGarnishmentDisposableIncome = wageGarnishmentDisposableIncome.doubleValue();
    return this;
  }

   /**
   * Get wageGarnishmentDisposableIncome
   * @return wageGarnishmentDisposableIncome
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWageGarnishmentDisposableIncome() {
    return wageGarnishmentDisposableIncome;
  }


  public void setWageGarnishmentDisposableIncome(Double wageGarnishmentDisposableIncome) {
    
    
    
    this.wageGarnishmentDisposableIncome = wageGarnishmentDisposableIncome;
  }


  public PayrollDeductionsHistory wageGarnishmentMinimumWageFactor(Double wageGarnishmentMinimumWageFactor) {
    
    
    
    
    this.wageGarnishmentMinimumWageFactor = wageGarnishmentMinimumWageFactor;
    return this;
  }

  public PayrollDeductionsHistory wageGarnishmentMinimumWageFactor(Integer wageGarnishmentMinimumWageFactor) {
    
    
    
    
    this.wageGarnishmentMinimumWageFactor = wageGarnishmentMinimumWageFactor.doubleValue();
    return this;
  }

   /**
   * Get wageGarnishmentMinimumWageFactor
   * @return wageGarnishmentMinimumWageFactor
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWageGarnishmentMinimumWageFactor() {
    return wageGarnishmentMinimumWageFactor;
  }


  public void setWageGarnishmentMinimumWageFactor(Double wageGarnishmentMinimumWageFactor) {
    
    
    
    this.wageGarnishmentMinimumWageFactor = wageGarnishmentMinimumWageFactor;
  }


  public PayrollDeductionsHistory wageGarnishmentWageCode(String wageGarnishmentWageCode) {
    
    
    
    
    this.wageGarnishmentWageCode = wageGarnishmentWageCode;
    return this;
  }

   /**
   * Get wageGarnishmentWageCode
   * @return wageGarnishmentWageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWageGarnishmentWageCode() {
    return wageGarnishmentWageCode;
  }


  public void setWageGarnishmentWageCode(String wageGarnishmentWageCode) {
    
    
    
    this.wageGarnishmentWageCode = wageGarnishmentWageCode;
  }


  public PayrollDeductionsHistory yearToDateDeferredCompensationCombinedAmount(Double yearToDateDeferredCompensationCombinedAmount) {
    
    
    
    
    this.yearToDateDeferredCompensationCombinedAmount = yearToDateDeferredCompensationCombinedAmount;
    return this;
  }

  public PayrollDeductionsHistory yearToDateDeferredCompensationCombinedAmount(Integer yearToDateDeferredCompensationCombinedAmount) {
    
    
    
    
    this.yearToDateDeferredCompensationCombinedAmount = yearToDateDeferredCompensationCombinedAmount.doubleValue();
    return this;
  }

   /**
   * Get yearToDateDeferredCompensationCombinedAmount
   * @return yearToDateDeferredCompensationCombinedAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getYearToDateDeferredCompensationCombinedAmount() {
    return yearToDateDeferredCompensationCombinedAmount;
  }


  public void setYearToDateDeferredCompensationCombinedAmount(Double yearToDateDeferredCompensationCombinedAmount) {
    
    
    
    this.yearToDateDeferredCompensationCombinedAmount = yearToDateDeferredCompensationCombinedAmount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PayrollDeductionsHistory instance itself
   */
  public PayrollDeductionsHistory putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayrollDeductionsHistory payrollDeductionsHistory = (PayrollDeductionsHistory) o;
    return Objects.equals(this.allowPartialDeduction, payrollDeductionsHistory.allowPartialDeduction) &&
        Objects.equals(this.batchID, payrollDeductionsHistory.batchID) &&
        Objects.equals(this.benefitAmount, payrollDeductionsHistory.benefitAmount) &&
        Objects.equals(this.benefitOption, payrollDeductionsHistory.benefitOption) &&
        Objects.equals(this.benefitProvider, payrollDeductionsHistory.benefitProvider) &&
        Objects.equals(this.childSupportType, payrollDeductionsHistory.childSupportType) &&
        Objects.equals(this.companyId, payrollDeductionsHistory.companyId) &&
        Objects.equals(this.checkId, payrollDeductionsHistory.checkId) &&
        Objects.equals(this.currentArrearsAmount, payrollDeductionsHistory.currentArrearsAmount) &&
        Objects.equals(this.customAmount1, payrollDeductionsHistory.customAmount1) &&
        Objects.equals(this.customAmount2, payrollDeductionsHistory.customAmount2) &&
        Objects.equals(this.customDate, payrollDeductionsHistory.customDate) &&
        Objects.equals(this.deductionCalculationBasisAmt, payrollDeductionsHistory.deductionCalculationBasisAmt) &&
        Objects.equals(this.deductionCode, payrollDeductionsHistory.deductionCode) &&
        Objects.equals(this.deductionForBonusOnly, payrollDeductionsHistory.deductionForBonusOnly) &&
        Objects.equals(this.deductionPlanType, payrollDeductionsHistory.deductionPlanType) &&
        Objects.equals(this.deductionType, payrollDeductionsHistory.deductionType) &&
        Objects.equals(this.deferredCompensationCap, payrollDeductionsHistory.deferredCompensationCap) &&
        Objects.equals(this.deferredCompensationRegularCap, payrollDeductionsHistory.deferredCompensationRegularCap) &&
        Objects.equals(this.dependentRecordId, payrollDeductionsHistory.dependentRecordId) &&
        Objects.equals(this.employeeCalculationRateOrPercent, payrollDeductionsHistory.employeeCalculationRateOrPercent) &&
        Objects.equals(this.employeeCalculaitonRule, payrollDeductionsHistory.employeeCalculaitonRule) &&
        Objects.equals(this.employeeCurrentAmount, payrollDeductionsHistory.employeeCurrentAmount) &&
        Objects.equals(this.employeeDeductionLastPaid, payrollDeductionsHistory.employeeDeductionLastPaid) &&
        Objects.equals(this.employeeGoalAmount, payrollDeductionsHistory.employeeGoalAmount) &&
        Objects.equals(this.employeeGoalRule, payrollDeductionsHistory.employeeGoalRule) &&
        Objects.equals(this.employeeGoalToDateAmount, payrollDeductionsHistory.employeeGoalToDateAmount) &&
        Objects.equals(this.employeeId, payrollDeductionsHistory.employeeId) &&
        Objects.equals(this.employeeOriginalAmount, payrollDeductionsHistory.employeeOriginalAmount) &&
        Objects.equals(this.employeeNumber, payrollDeductionsHistory.employeeNumber) &&
        Objects.equals(this.employerAnnualCapCalculationRule, payrollDeductionsHistory.employerAnnualCapCalculationRule) &&
        Objects.equals(this.employerCalculationRateOrPercent, payrollDeductionsHistory.employerCalculationRateOrPercent) &&
        Objects.equals(this.employerCalculationRule, payrollDeductionsHistory.employerCalculationRule) &&
        Objects.equals(this.employerCurrentAmount, payrollDeductionsHistory.employerCurrentAmount) &&
        Objects.equals(this.employerPeriodCapCalculationRule, payrollDeductionsHistory.employerPeriodCapCalculationRule) &&
        Objects.equals(this.excludeFromWorkersCompensation, payrollDeductionsHistory.excludeFromWorkersCompensation) &&
        Objects.equals(this.generalLedgerExpenseAccount, payrollDeductionsHistory.generalLedgerExpenseAccount) &&
        Objects.equals(this.generalLedgerPayAccount, payrollDeductionsHistory.generalLedgerPayAccount) &&
        Objects.equals(this.is401k, payrollDeductionsHistory.is401k) &&
        Objects.equals(this.is403b, payrollDeductionsHistory.is403b) &&
        Objects.equals(this.is408k, payrollDeductionsHistory.is408k) &&
        Objects.equals(this.is408p, payrollDeductionsHistory.is408p) &&
        Objects.equals(this.is457, payrollDeductionsHistory.is457) &&
        Objects.equals(this.is457b, payrollDeductionsHistory.is457b) &&
        Objects.equals(this.is457F, payrollDeductionsHistory.is457F) &&
        Objects.equals(this.is501C, payrollDeductionsHistory.is501C) &&
        Objects.equals(this.isD125, payrollDeductionsHistory.isD125) &&
        Objects.equals(this.isDeductionOffSet, payrollDeductionsHistory.isDeductionOffSet) &&
        Objects.equals(this.isDeferredCompensation, payrollDeductionsHistory.isDeferredCompensation) &&
        Objects.equals(this.isDependentCare, payrollDeductionsHistory.isDependentCare) &&
        Objects.equals(this.isHousing, payrollDeductionsHistory.isHousing) &&
        Objects.equals(this.isNonQualifiedPlan, payrollDeductionsHistory.isNonQualifiedPlan) &&
        Objects.equals(this.isPublicEmployeeRetirement, payrollDeductionsHistory.isPublicEmployeeRetirement) &&
        Objects.equals(this.isProrated, payrollDeductionsHistory.isProrated) &&
        Objects.equals(this.isSection125, payrollDeductionsHistory.isSection125) &&
        Objects.equals(this.isVoided, payrollDeductionsHistory.isVoided) &&
        Objects.equals(this.isVoidingRecord, payrollDeductionsHistory.isVoidingRecord) &&
        Objects.equals(this.payDate, payrollDeductionsHistory.payDate) &&
        Objects.equals(this.payeeID, payrollDeductionsHistory.payeeID) &&
        Objects.equals(this.payGroup, payrollDeductionsHistory.payGroup) &&
        Objects.equals(this.periodControl, payrollDeductionsHistory.periodControl) &&
        Objects.equals(this.recordId, payrollDeductionsHistory.recordId) &&
        Objects.equals(this.taxCalculationGroupId, payrollDeductionsHistory.taxCalculationGroupId) &&
        Objects.equals(this.taxCategory, payrollDeductionsHistory.taxCategory) &&
        Objects.equals(this.timeclockCode, payrollDeductionsHistory.timeclockCode) &&
        Objects.equals(this.vendor, payrollDeductionsHistory.vendor) &&
        Objects.equals(this.wageGarnishmentAdditionalArrearageAmount, payrollDeductionsHistory.wageGarnishmentAdditionalArrearageAmount) &&
        Objects.equals(this.wageGarnishmentAllocateAsArrears, payrollDeductionsHistory.wageGarnishmentAllocateAsArrears) &&
        Objects.equals(this.wageGarnishmentAmountExempt, payrollDeductionsHistory.wageGarnishmentAmountExempt) &&
        Objects.equals(this.wageGarnishmentAmountExemptFromLevy, payrollDeductionsHistory.wageGarnishmentAmountExemptFromLevy) &&
        Objects.equals(this.wageGarnishmentAmountExemtFromGarn, payrollDeductionsHistory.wageGarnishmentAmountExemtFromGarn) &&
        Objects.equals(this.wageGarnishmentAmountSubjectToCS, payrollDeductionsHistory.wageGarnishmentAmountSubjectToCS) &&
        Objects.equals(this.wageGarnishmentAmountSubjectToGarnishment, payrollDeductionsHistory.wageGarnishmentAmountSubjectToGarnishment) &&
        Objects.equals(this.wageGarnishmentDeductionTaxCategory, payrollDeductionsHistory.wageGarnishmentDeductionTaxCategory) &&
        Objects.equals(this.wageGarnishmentDisposableIncome, payrollDeductionsHistory.wageGarnishmentDisposableIncome) &&
        Objects.equals(this.wageGarnishmentMinimumWageFactor, payrollDeductionsHistory.wageGarnishmentMinimumWageFactor) &&
        Objects.equals(this.wageGarnishmentWageCode, payrollDeductionsHistory.wageGarnishmentWageCode) &&
        Objects.equals(this.yearToDateDeferredCompensationCombinedAmount, payrollDeductionsHistory.yearToDateDeferredCompensationCombinedAmount)&&
        Objects.equals(this.additionalProperties, payrollDeductionsHistory.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowPartialDeduction, batchID, benefitAmount, benefitOption, benefitProvider, childSupportType, companyId, checkId, currentArrearsAmount, customAmount1, customAmount2, customDate, deductionCalculationBasisAmt, deductionCode, deductionForBonusOnly, deductionPlanType, deductionType, deferredCompensationCap, deferredCompensationRegularCap, dependentRecordId, employeeCalculationRateOrPercent, employeeCalculaitonRule, employeeCurrentAmount, employeeDeductionLastPaid, employeeGoalAmount, employeeGoalRule, employeeGoalToDateAmount, employeeId, employeeOriginalAmount, employeeNumber, employerAnnualCapCalculationRule, employerCalculationRateOrPercent, employerCalculationRule, employerCurrentAmount, employerPeriodCapCalculationRule, excludeFromWorkersCompensation, generalLedgerExpenseAccount, generalLedgerPayAccount, is401k, is403b, is408k, is408p, is457, is457b, is457F, is501C, isD125, isDeductionOffSet, isDeferredCompensation, isDependentCare, isHousing, isNonQualifiedPlan, isPublicEmployeeRetirement, isProrated, isSection125, isVoided, isVoidingRecord, payDate, payeeID, payGroup, periodControl, recordId, taxCalculationGroupId, taxCategory, timeclockCode, vendor, wageGarnishmentAdditionalArrearageAmount, wageGarnishmentAllocateAsArrears, wageGarnishmentAmountExempt, wageGarnishmentAmountExemptFromLevy, wageGarnishmentAmountExemtFromGarn, wageGarnishmentAmountSubjectToCS, wageGarnishmentAmountSubjectToGarnishment, wageGarnishmentDeductionTaxCategory, wageGarnishmentDisposableIncome, wageGarnishmentMinimumWageFactor, wageGarnishmentWageCode, yearToDateDeferredCompensationCombinedAmount, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayrollDeductionsHistory {\n");
    sb.append("    allowPartialDeduction: ").append(toIndentedString(allowPartialDeduction)).append("\n");
    sb.append("    batchID: ").append(toIndentedString(batchID)).append("\n");
    sb.append("    benefitAmount: ").append(toIndentedString(benefitAmount)).append("\n");
    sb.append("    benefitOption: ").append(toIndentedString(benefitOption)).append("\n");
    sb.append("    benefitProvider: ").append(toIndentedString(benefitProvider)).append("\n");
    sb.append("    childSupportType: ").append(toIndentedString(childSupportType)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    checkId: ").append(toIndentedString(checkId)).append("\n");
    sb.append("    currentArrearsAmount: ").append(toIndentedString(currentArrearsAmount)).append("\n");
    sb.append("    customAmount1: ").append(toIndentedString(customAmount1)).append("\n");
    sb.append("    customAmount2: ").append(toIndentedString(customAmount2)).append("\n");
    sb.append("    customDate: ").append(toIndentedString(customDate)).append("\n");
    sb.append("    deductionCalculationBasisAmt: ").append(toIndentedString(deductionCalculationBasisAmt)).append("\n");
    sb.append("    deductionCode: ").append(toIndentedString(deductionCode)).append("\n");
    sb.append("    deductionForBonusOnly: ").append(toIndentedString(deductionForBonusOnly)).append("\n");
    sb.append("    deductionPlanType: ").append(toIndentedString(deductionPlanType)).append("\n");
    sb.append("    deductionType: ").append(toIndentedString(deductionType)).append("\n");
    sb.append("    deferredCompensationCap: ").append(toIndentedString(deferredCompensationCap)).append("\n");
    sb.append("    deferredCompensationRegularCap: ").append(toIndentedString(deferredCompensationRegularCap)).append("\n");
    sb.append("    dependentRecordId: ").append(toIndentedString(dependentRecordId)).append("\n");
    sb.append("    employeeCalculationRateOrPercent: ").append(toIndentedString(employeeCalculationRateOrPercent)).append("\n");
    sb.append("    employeeCalculaitonRule: ").append(toIndentedString(employeeCalculaitonRule)).append("\n");
    sb.append("    employeeCurrentAmount: ").append(toIndentedString(employeeCurrentAmount)).append("\n");
    sb.append("    employeeDeductionLastPaid: ").append(toIndentedString(employeeDeductionLastPaid)).append("\n");
    sb.append("    employeeGoalAmount: ").append(toIndentedString(employeeGoalAmount)).append("\n");
    sb.append("    employeeGoalRule: ").append(toIndentedString(employeeGoalRule)).append("\n");
    sb.append("    employeeGoalToDateAmount: ").append(toIndentedString(employeeGoalToDateAmount)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    employeeOriginalAmount: ").append(toIndentedString(employeeOriginalAmount)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    employerAnnualCapCalculationRule: ").append(toIndentedString(employerAnnualCapCalculationRule)).append("\n");
    sb.append("    employerCalculationRateOrPercent: ").append(toIndentedString(employerCalculationRateOrPercent)).append("\n");
    sb.append("    employerCalculationRule: ").append(toIndentedString(employerCalculationRule)).append("\n");
    sb.append("    employerCurrentAmount: ").append(toIndentedString(employerCurrentAmount)).append("\n");
    sb.append("    employerPeriodCapCalculationRule: ").append(toIndentedString(employerPeriodCapCalculationRule)).append("\n");
    sb.append("    excludeFromWorkersCompensation: ").append(toIndentedString(excludeFromWorkersCompensation)).append("\n");
    sb.append("    generalLedgerExpenseAccount: ").append(toIndentedString(generalLedgerExpenseAccount)).append("\n");
    sb.append("    generalLedgerPayAccount: ").append(toIndentedString(generalLedgerPayAccount)).append("\n");
    sb.append("    is401k: ").append(toIndentedString(is401k)).append("\n");
    sb.append("    is403b: ").append(toIndentedString(is403b)).append("\n");
    sb.append("    is408k: ").append(toIndentedString(is408k)).append("\n");
    sb.append("    is408p: ").append(toIndentedString(is408p)).append("\n");
    sb.append("    is457: ").append(toIndentedString(is457)).append("\n");
    sb.append("    is457b: ").append(toIndentedString(is457b)).append("\n");
    sb.append("    is457F: ").append(toIndentedString(is457F)).append("\n");
    sb.append("    is501C: ").append(toIndentedString(is501C)).append("\n");
    sb.append("    isD125: ").append(toIndentedString(isD125)).append("\n");
    sb.append("    isDeductionOffSet: ").append(toIndentedString(isDeductionOffSet)).append("\n");
    sb.append("    isDeferredCompensation: ").append(toIndentedString(isDeferredCompensation)).append("\n");
    sb.append("    isDependentCare: ").append(toIndentedString(isDependentCare)).append("\n");
    sb.append("    isHousing: ").append(toIndentedString(isHousing)).append("\n");
    sb.append("    isNonQualifiedPlan: ").append(toIndentedString(isNonQualifiedPlan)).append("\n");
    sb.append("    isPublicEmployeeRetirement: ").append(toIndentedString(isPublicEmployeeRetirement)).append("\n");
    sb.append("    isProrated: ").append(toIndentedString(isProrated)).append("\n");
    sb.append("    isSection125: ").append(toIndentedString(isSection125)).append("\n");
    sb.append("    isVoided: ").append(toIndentedString(isVoided)).append("\n");
    sb.append("    isVoidingRecord: ").append(toIndentedString(isVoidingRecord)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    payeeID: ").append(toIndentedString(payeeID)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    periodControl: ").append(toIndentedString(periodControl)).append("\n");
    sb.append("    recordId: ").append(toIndentedString(recordId)).append("\n");
    sb.append("    taxCalculationGroupId: ").append(toIndentedString(taxCalculationGroupId)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    timeclockCode: ").append(toIndentedString(timeclockCode)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    wageGarnishmentAdditionalArrearageAmount: ").append(toIndentedString(wageGarnishmentAdditionalArrearageAmount)).append("\n");
    sb.append("    wageGarnishmentAllocateAsArrears: ").append(toIndentedString(wageGarnishmentAllocateAsArrears)).append("\n");
    sb.append("    wageGarnishmentAmountExempt: ").append(toIndentedString(wageGarnishmentAmountExempt)).append("\n");
    sb.append("    wageGarnishmentAmountExemptFromLevy: ").append(toIndentedString(wageGarnishmentAmountExemptFromLevy)).append("\n");
    sb.append("    wageGarnishmentAmountExemtFromGarn: ").append(toIndentedString(wageGarnishmentAmountExemtFromGarn)).append("\n");
    sb.append("    wageGarnishmentAmountSubjectToCS: ").append(toIndentedString(wageGarnishmentAmountSubjectToCS)).append("\n");
    sb.append("    wageGarnishmentAmountSubjectToGarnishment: ").append(toIndentedString(wageGarnishmentAmountSubjectToGarnishment)).append("\n");
    sb.append("    wageGarnishmentDeductionTaxCategory: ").append(toIndentedString(wageGarnishmentDeductionTaxCategory)).append("\n");
    sb.append("    wageGarnishmentDisposableIncome: ").append(toIndentedString(wageGarnishmentDisposableIncome)).append("\n");
    sb.append("    wageGarnishmentMinimumWageFactor: ").append(toIndentedString(wageGarnishmentMinimumWageFactor)).append("\n");
    sb.append("    wageGarnishmentWageCode: ").append(toIndentedString(wageGarnishmentWageCode)).append("\n");
    sb.append("    yearToDateDeferredCompensationCombinedAmount: ").append(toIndentedString(yearToDateDeferredCompensationCombinedAmount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allowPartialDeduction");
    openapiFields.add("batchID");
    openapiFields.add("benefitAmount");
    openapiFields.add("benefitOption");
    openapiFields.add("benefitProvider");
    openapiFields.add("childSupportType");
    openapiFields.add("companyId");
    openapiFields.add("checkId");
    openapiFields.add("currentArrearsAmount");
    openapiFields.add("customAmount1");
    openapiFields.add("customAmount2");
    openapiFields.add("customDate");
    openapiFields.add("deductionCalculationBasisAmt");
    openapiFields.add("deductionCode");
    openapiFields.add("deductionForBonusOnly");
    openapiFields.add("deductionPlanType");
    openapiFields.add("deductionType");
    openapiFields.add("deferredCompensationCap");
    openapiFields.add("deferredCompensationRegularCap");
    openapiFields.add("dependentRecordId");
    openapiFields.add("employeeCalculationRateOrPercent");
    openapiFields.add("employeeCalculaitonRule");
    openapiFields.add("employeeCurrentAmount");
    openapiFields.add("employeeDeductionLastPaid");
    openapiFields.add("employeeGoalAmount");
    openapiFields.add("employeeGoalRule");
    openapiFields.add("employeeGoalToDateAmount");
    openapiFields.add("employeeId");
    openapiFields.add("employeeOriginalAmount");
    openapiFields.add("employeeNumber");
    openapiFields.add("employerAnnualCapCalculationRule");
    openapiFields.add("employerCalculationRateOrPercent");
    openapiFields.add("employerCalculationRule");
    openapiFields.add("employerCurrentAmount");
    openapiFields.add("employerPeriodCapCalculationRule");
    openapiFields.add("excludeFromWorkersCompensation");
    openapiFields.add("generalLedgerExpenseAccount");
    openapiFields.add("generalLedgerPayAccount");
    openapiFields.add("is401k");
    openapiFields.add("is403b");
    openapiFields.add("is408k");
    openapiFields.add("is408p");
    openapiFields.add("is457");
    openapiFields.add("is457b");
    openapiFields.add("is457F");
    openapiFields.add("is501C");
    openapiFields.add("isD125");
    openapiFields.add("isDeductionOffSet");
    openapiFields.add("isDeferredCompensation");
    openapiFields.add("isDependentCare");
    openapiFields.add("isHousing");
    openapiFields.add("isNonQualifiedPlan");
    openapiFields.add("isPublicEmployeeRetirement");
    openapiFields.add("isProrated");
    openapiFields.add("isSection125");
    openapiFields.add("isVoided");
    openapiFields.add("isVoidingRecord");
    openapiFields.add("payDate");
    openapiFields.add("payeeID");
    openapiFields.add("payGroup");
    openapiFields.add("periodControl");
    openapiFields.add("recordId");
    openapiFields.add("taxCalculationGroupId");
    openapiFields.add("taxCategory");
    openapiFields.add("timeclockCode");
    openapiFields.add("vendor");
    openapiFields.add("wageGarnishmentAdditionalArrearageAmount");
    openapiFields.add("wageGarnishmentAllocateAsArrears");
    openapiFields.add("wageGarnishmentAmountExempt");
    openapiFields.add("wageGarnishmentAmountExemptFromLevy");
    openapiFields.add("wageGarnishmentAmountExemtFromGarn");
    openapiFields.add("wageGarnishmentAmountSubjectToCS");
    openapiFields.add("wageGarnishmentAmountSubjectToGarnishment");
    openapiFields.add("wageGarnishmentDeductionTaxCategory");
    openapiFields.add("wageGarnishmentDisposableIncome");
    openapiFields.add("wageGarnishmentMinimumWageFactor");
    openapiFields.add("wageGarnishmentWageCode");
    openapiFields.add("yearToDateDeferredCompensationCombinedAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PayrollDeductionsHistory
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PayrollDeductionsHistory.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PayrollDeductionsHistory is not found in the empty JSON string", PayrollDeductionsHistory.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("allowPartialDeduction") != null && !jsonObj.get("allowPartialDeduction").isJsonNull()) && !jsonObj.get("allowPartialDeduction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `allowPartialDeduction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("allowPartialDeduction").toString()));
      }
      if ((jsonObj.get("batchID") != null && !jsonObj.get("batchID").isJsonNull()) && !jsonObj.get("batchID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `batchID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("batchID").toString()));
      }
      if ((jsonObj.get("benefitOption") != null && !jsonObj.get("benefitOption").isJsonNull()) && !jsonObj.get("benefitOption").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitOption` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitOption").toString()));
      }
      if ((jsonObj.get("benefitProvider") != null && !jsonObj.get("benefitProvider").isJsonNull()) && !jsonObj.get("benefitProvider").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitProvider` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitProvider").toString()));
      }
      if ((jsonObj.get("childSupportType") != null && !jsonObj.get("childSupportType").isJsonNull()) && !jsonObj.get("childSupportType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `childSupportType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("childSupportType").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("checkId") != null && !jsonObj.get("checkId").isJsonNull()) && !jsonObj.get("checkId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `checkId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("checkId").toString()));
      }
      if ((jsonObj.get("deductionCode") != null && !jsonObj.get("deductionCode").isJsonNull()) && !jsonObj.get("deductionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionCode").toString()));
      }
      if ((jsonObj.get("deductionForBonusOnly") != null && !jsonObj.get("deductionForBonusOnly").isJsonNull()) && !jsonObj.get("deductionForBonusOnly").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionForBonusOnly` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionForBonusOnly").toString()));
      }
      if ((jsonObj.get("deductionPlanType") != null && !jsonObj.get("deductionPlanType").isJsonNull()) && !jsonObj.get("deductionPlanType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionPlanType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionPlanType").toString()));
      }
      if ((jsonObj.get("deductionType") != null && !jsonObj.get("deductionType").isJsonNull()) && !jsonObj.get("deductionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionType").toString()));
      }
      if ((jsonObj.get("dependentRecordId") != null && !jsonObj.get("dependentRecordId").isJsonNull()) && !jsonObj.get("dependentRecordId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dependentRecordId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dependentRecordId").toString()));
      }
      if ((jsonObj.get("employeeCalculaitonRule") != null && !jsonObj.get("employeeCalculaitonRule").isJsonNull()) && !jsonObj.get("employeeCalculaitonRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeCalculaitonRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeCalculaitonRule").toString()));
      }
      if ((jsonObj.get("employeeGoalRule") != null && !jsonObj.get("employeeGoalRule").isJsonNull()) && !jsonObj.get("employeeGoalRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeGoalRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeGoalRule").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("employeeNumber") != null && !jsonObj.get("employeeNumber").isJsonNull()) && !jsonObj.get("employeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeNumber").toString()));
      }
      if ((jsonObj.get("employerAnnualCapCalculationRule") != null && !jsonObj.get("employerAnnualCapCalculationRule").isJsonNull()) && !jsonObj.get("employerAnnualCapCalculationRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employerAnnualCapCalculationRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employerAnnualCapCalculationRule").toString()));
      }
      if ((jsonObj.get("employerCalculationRule") != null && !jsonObj.get("employerCalculationRule").isJsonNull()) && !jsonObj.get("employerCalculationRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employerCalculationRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employerCalculationRule").toString()));
      }
      if ((jsonObj.get("employerPeriodCapCalculationRule") != null && !jsonObj.get("employerPeriodCapCalculationRule").isJsonNull()) && !jsonObj.get("employerPeriodCapCalculationRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employerPeriodCapCalculationRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employerPeriodCapCalculationRule").toString()));
      }
      if ((jsonObj.get("excludeFromWorkersCompensation") != null && !jsonObj.get("excludeFromWorkersCompensation").isJsonNull()) && !jsonObj.get("excludeFromWorkersCompensation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `excludeFromWorkersCompensation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("excludeFromWorkersCompensation").toString()));
      }
      if ((jsonObj.get("generalLedgerExpenseAccount") != null && !jsonObj.get("generalLedgerExpenseAccount").isJsonNull()) && !jsonObj.get("generalLedgerExpenseAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generalLedgerExpenseAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generalLedgerExpenseAccount").toString()));
      }
      if ((jsonObj.get("generalLedgerPayAccount") != null && !jsonObj.get("generalLedgerPayAccount").isJsonNull()) && !jsonObj.get("generalLedgerPayAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `generalLedgerPayAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("generalLedgerPayAccount").toString()));
      }
      if ((jsonObj.get("isVoidingRecord") != null && !jsonObj.get("isVoidingRecord").isJsonNull()) && !jsonObj.get("isVoidingRecord").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isVoidingRecord` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isVoidingRecord").toString()));
      }
      if ((jsonObj.get("payeeID") != null && !jsonObj.get("payeeID").isJsonNull()) && !jsonObj.get("payeeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payeeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payeeID").toString()));
      }
      if ((jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) && !jsonObj.get("payGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroup").toString()));
      }
      if ((jsonObj.get("periodControl") != null && !jsonObj.get("periodControl").isJsonNull()) && !jsonObj.get("periodControl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodControl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodControl").toString()));
      }
      if ((jsonObj.get("taxCalculationGroupId") != null && !jsonObj.get("taxCalculationGroupId").isJsonNull()) && !jsonObj.get("taxCalculationGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalculationGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalculationGroupId").toString()));
      }
      if ((jsonObj.get("taxCategory") != null && !jsonObj.get("taxCategory").isJsonNull()) && !jsonObj.get("taxCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCategory").toString()));
      }
      if ((jsonObj.get("timeclockCode") != null && !jsonObj.get("timeclockCode").isJsonNull()) && !jsonObj.get("timeclockCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeclockCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeclockCode").toString()));
      }
      if ((jsonObj.get("vendor") != null && !jsonObj.get("vendor").isJsonNull()) && !jsonObj.get("vendor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor").toString()));
      }
      if ((jsonObj.get("wageGarnishmentAllocateAsArrears") != null && !jsonObj.get("wageGarnishmentAllocateAsArrears").isJsonNull()) && !jsonObj.get("wageGarnishmentAllocateAsArrears").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wageGarnishmentAllocateAsArrears` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wageGarnishmentAllocateAsArrears").toString()));
      }
      if ((jsonObj.get("wageGarnishmentDeductionTaxCategory") != null && !jsonObj.get("wageGarnishmentDeductionTaxCategory").isJsonNull()) && !jsonObj.get("wageGarnishmentDeductionTaxCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wageGarnishmentDeductionTaxCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wageGarnishmentDeductionTaxCategory").toString()));
      }
      if ((jsonObj.get("wageGarnishmentWageCode") != null && !jsonObj.get("wageGarnishmentWageCode").isJsonNull()) && !jsonObj.get("wageGarnishmentWageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wageGarnishmentWageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wageGarnishmentWageCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PayrollDeductionsHistory.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PayrollDeductionsHistory' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PayrollDeductionsHistory> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PayrollDeductionsHistory.class));

       return (TypeAdapter<T>) new TypeAdapter<PayrollDeductionsHistory>() {
           @Override
           public void write(JsonWriter out, PayrollDeductionsHistory value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PayrollDeductionsHistory read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PayrollDeductionsHistory instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PayrollDeductionsHistory given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PayrollDeductionsHistory
  * @throws IOException if the JSON string is invalid with respect to PayrollDeductionsHistory
  */
  public static PayrollDeductionsHistory fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PayrollDeductionsHistory.class);
  }

 /**
  * Convert an instance of PayrollDeductionsHistory to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

