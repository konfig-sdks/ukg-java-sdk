/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.StateDto;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * ScheduleModelStateDto
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class ScheduleModelStateDto {
  public static final String SERIALIZED_NAME_OPERATION_TYPE = "operationType";
  @SerializedName(SERIALIZED_NAME_OPERATION_TYPE)
  private List<StateDto> operationType = null;

  public static final String SERIALIZED_NAME_EMP_NAME = "empName";
  @SerializedName(SERIALIZED_NAME_EMP_NAME)
  private List<StateDto> empName = null;

  public static final String SERIALIZED_NAME_SKD_DATE = "skdDate";
  @SerializedName(SERIALIZED_NAME_SKD_DATE)
  private List<StateDto> skdDate = null;

  public static final String SERIALIZED_NAME_SKD_START_TIME = "skdStartTime";
  @SerializedName(SERIALIZED_NAME_SKD_START_TIME)
  private List<StateDto> skdStartTime = null;

  public static final String SERIALIZED_NAME_SKD_END_TIME = "skdEndTime";
  @SerializedName(SERIALIZED_NAME_SKD_END_TIME)
  private List<StateDto> skdEndTime = null;

  public static final String SERIALIZED_NAME_SKD_TIME = "skdTime";
  @SerializedName(SERIALIZED_NAME_SKD_TIME)
  private List<StateDto> skdTime = null;

  public static final String SERIALIZED_NAME_WBT_NAME = "wbtName";
  @SerializedName(SERIALIZED_NAME_WBT_NAME)
  private List<StateDto> wbtName = null;

  public static final String SERIALIZED_NAME_TCODE_NAME = "tcodeName";
  @SerializedName(SERIALIZED_NAME_TCODE_NAME)
  private List<StateDto> tcodeName = null;

  public static final String SERIALIZED_NAME_JOB_NAME = "jobName";
  @SerializedName(SERIALIZED_NAME_JOB_NAME)
  private List<StateDto> jobName = null;

  public static final String SERIALIZED_NAME_HTYPE_NAME = "htypeName";
  @SerializedName(SERIALIZED_NAME_HTYPE_NAME)
  private List<StateDto> htypeName = null;

  public static final String SERIALIZED_NAME_ACT_NAME = "actName";
  @SerializedName(SERIALIZED_NAME_ACT_NAME)
  private List<StateDto> actName = null;

  public static final String SERIALIZED_NAME_NO_DETAILS = "noDetails";
  @SerializedName(SERIALIZED_NAME_NO_DETAILS)
  private List<StateDto> noDetails = null;

  public ScheduleModelStateDto() {
  }

  public ScheduleModelStateDto operationType(List<StateDto> operationType) {
    
    
    
    
    this.operationType = operationType;
    return this;
  }

  public ScheduleModelStateDto addOperationTypeItem(StateDto operationTypeItem) {
    if (this.operationType == null) {
      this.operationType = new ArrayList<>();
    }
    this.operationType.add(operationTypeItem);
    return this;
  }

   /**
   * Get operationType
   * @return operationType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getOperationType() {
    return operationType;
  }


  public void setOperationType(List<StateDto> operationType) {
    
    
    
    this.operationType = operationType;
  }


  public ScheduleModelStateDto empName(List<StateDto> empName) {
    
    
    
    
    this.empName = empName;
    return this;
  }

  public ScheduleModelStateDto addEmpNameItem(StateDto empNameItem) {
    if (this.empName == null) {
      this.empName = new ArrayList<>();
    }
    this.empName.add(empNameItem);
    return this;
  }

   /**
   * Get empName
   * @return empName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getEmpName() {
    return empName;
  }


  public void setEmpName(List<StateDto> empName) {
    
    
    
    this.empName = empName;
  }


  public ScheduleModelStateDto skdDate(List<StateDto> skdDate) {
    
    
    
    
    this.skdDate = skdDate;
    return this;
  }

  public ScheduleModelStateDto addSkdDateItem(StateDto skdDateItem) {
    if (this.skdDate == null) {
      this.skdDate = new ArrayList<>();
    }
    this.skdDate.add(skdDateItem);
    return this;
  }

   /**
   * Get skdDate
   * @return skdDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getSkdDate() {
    return skdDate;
  }


  public void setSkdDate(List<StateDto> skdDate) {
    
    
    
    this.skdDate = skdDate;
  }


  public ScheduleModelStateDto skdStartTime(List<StateDto> skdStartTime) {
    
    
    
    
    this.skdStartTime = skdStartTime;
    return this;
  }

  public ScheduleModelStateDto addSkdStartTimeItem(StateDto skdStartTimeItem) {
    if (this.skdStartTime == null) {
      this.skdStartTime = new ArrayList<>();
    }
    this.skdStartTime.add(skdStartTimeItem);
    return this;
  }

   /**
   * Get skdStartTime
   * @return skdStartTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getSkdStartTime() {
    return skdStartTime;
  }


  public void setSkdStartTime(List<StateDto> skdStartTime) {
    
    
    
    this.skdStartTime = skdStartTime;
  }


  public ScheduleModelStateDto skdEndTime(List<StateDto> skdEndTime) {
    
    
    
    
    this.skdEndTime = skdEndTime;
    return this;
  }

  public ScheduleModelStateDto addSkdEndTimeItem(StateDto skdEndTimeItem) {
    if (this.skdEndTime == null) {
      this.skdEndTime = new ArrayList<>();
    }
    this.skdEndTime.add(skdEndTimeItem);
    return this;
  }

   /**
   * Get skdEndTime
   * @return skdEndTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getSkdEndTime() {
    return skdEndTime;
  }


  public void setSkdEndTime(List<StateDto> skdEndTime) {
    
    
    
    this.skdEndTime = skdEndTime;
  }


  public ScheduleModelStateDto skdTime(List<StateDto> skdTime) {
    
    
    
    
    this.skdTime = skdTime;
    return this;
  }

  public ScheduleModelStateDto addSkdTimeItem(StateDto skdTimeItem) {
    if (this.skdTime == null) {
      this.skdTime = new ArrayList<>();
    }
    this.skdTime.add(skdTimeItem);
    return this;
  }

   /**
   * Get skdTime
   * @return skdTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getSkdTime() {
    return skdTime;
  }


  public void setSkdTime(List<StateDto> skdTime) {
    
    
    
    this.skdTime = skdTime;
  }


  public ScheduleModelStateDto wbtName(List<StateDto> wbtName) {
    
    
    
    
    this.wbtName = wbtName;
    return this;
  }

  public ScheduleModelStateDto addWbtNameItem(StateDto wbtNameItem) {
    if (this.wbtName == null) {
      this.wbtName = new ArrayList<>();
    }
    this.wbtName.add(wbtNameItem);
    return this;
  }

   /**
   * Get wbtName
   * @return wbtName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getWbtName() {
    return wbtName;
  }


  public void setWbtName(List<StateDto> wbtName) {
    
    
    
    this.wbtName = wbtName;
  }


  public ScheduleModelStateDto tcodeName(List<StateDto> tcodeName) {
    
    
    
    
    this.tcodeName = tcodeName;
    return this;
  }

  public ScheduleModelStateDto addTcodeNameItem(StateDto tcodeNameItem) {
    if (this.tcodeName == null) {
      this.tcodeName = new ArrayList<>();
    }
    this.tcodeName.add(tcodeNameItem);
    return this;
  }

   /**
   * Get tcodeName
   * @return tcodeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getTcodeName() {
    return tcodeName;
  }


  public void setTcodeName(List<StateDto> tcodeName) {
    
    
    
    this.tcodeName = tcodeName;
  }


  public ScheduleModelStateDto jobName(List<StateDto> jobName) {
    
    
    
    
    this.jobName = jobName;
    return this;
  }

  public ScheduleModelStateDto addJobNameItem(StateDto jobNameItem) {
    if (this.jobName == null) {
      this.jobName = new ArrayList<>();
    }
    this.jobName.add(jobNameItem);
    return this;
  }

   /**
   * Get jobName
   * @return jobName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getJobName() {
    return jobName;
  }


  public void setJobName(List<StateDto> jobName) {
    
    
    
    this.jobName = jobName;
  }


  public ScheduleModelStateDto htypeName(List<StateDto> htypeName) {
    
    
    
    
    this.htypeName = htypeName;
    return this;
  }

  public ScheduleModelStateDto addHtypeNameItem(StateDto htypeNameItem) {
    if (this.htypeName == null) {
      this.htypeName = new ArrayList<>();
    }
    this.htypeName.add(htypeNameItem);
    return this;
  }

   /**
   * Get htypeName
   * @return htypeName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getHtypeName() {
    return htypeName;
  }


  public void setHtypeName(List<StateDto> htypeName) {
    
    
    
    this.htypeName = htypeName;
  }


  public ScheduleModelStateDto actName(List<StateDto> actName) {
    
    
    
    
    this.actName = actName;
    return this;
  }

  public ScheduleModelStateDto addActNameItem(StateDto actNameItem) {
    if (this.actName == null) {
      this.actName = new ArrayList<>();
    }
    this.actName.add(actNameItem);
    return this;
  }

   /**
   * Get actName
   * @return actName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getActName() {
    return actName;
  }


  public void setActName(List<StateDto> actName) {
    
    
    
    this.actName = actName;
  }


  public ScheduleModelStateDto noDetails(List<StateDto> noDetails) {
    
    
    
    
    this.noDetails = noDetails;
    return this;
  }

  public ScheduleModelStateDto addNoDetailsItem(StateDto noDetailsItem) {
    if (this.noDetails == null) {
      this.noDetails = new ArrayList<>();
    }
    this.noDetails.add(noDetailsItem);
    return this;
  }

   /**
   * Get noDetails
   * @return noDetails
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<StateDto> getNoDetails() {
    return noDetails;
  }


  public void setNoDetails(List<StateDto> noDetails) {
    
    
    
    this.noDetails = noDetails;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the ScheduleModelStateDto instance itself
   */
  public ScheduleModelStateDto putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScheduleModelStateDto scheduleModelStateDto = (ScheduleModelStateDto) o;
    return Objects.equals(this.operationType, scheduleModelStateDto.operationType) &&
        Objects.equals(this.empName, scheduleModelStateDto.empName) &&
        Objects.equals(this.skdDate, scheduleModelStateDto.skdDate) &&
        Objects.equals(this.skdStartTime, scheduleModelStateDto.skdStartTime) &&
        Objects.equals(this.skdEndTime, scheduleModelStateDto.skdEndTime) &&
        Objects.equals(this.skdTime, scheduleModelStateDto.skdTime) &&
        Objects.equals(this.wbtName, scheduleModelStateDto.wbtName) &&
        Objects.equals(this.tcodeName, scheduleModelStateDto.tcodeName) &&
        Objects.equals(this.jobName, scheduleModelStateDto.jobName) &&
        Objects.equals(this.htypeName, scheduleModelStateDto.htypeName) &&
        Objects.equals(this.actName, scheduleModelStateDto.actName) &&
        Objects.equals(this.noDetails, scheduleModelStateDto.noDetails)&&
        Objects.equals(this.additionalProperties, scheduleModelStateDto.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operationType, empName, skdDate, skdStartTime, skdEndTime, skdTime, wbtName, tcodeName, jobName, htypeName, actName, noDetails, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScheduleModelStateDto {\n");
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    empName: ").append(toIndentedString(empName)).append("\n");
    sb.append("    skdDate: ").append(toIndentedString(skdDate)).append("\n");
    sb.append("    skdStartTime: ").append(toIndentedString(skdStartTime)).append("\n");
    sb.append("    skdEndTime: ").append(toIndentedString(skdEndTime)).append("\n");
    sb.append("    skdTime: ").append(toIndentedString(skdTime)).append("\n");
    sb.append("    wbtName: ").append(toIndentedString(wbtName)).append("\n");
    sb.append("    tcodeName: ").append(toIndentedString(tcodeName)).append("\n");
    sb.append("    jobName: ").append(toIndentedString(jobName)).append("\n");
    sb.append("    htypeName: ").append(toIndentedString(htypeName)).append("\n");
    sb.append("    actName: ").append(toIndentedString(actName)).append("\n");
    sb.append("    noDetails: ").append(toIndentedString(noDetails)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("operationType");
    openapiFields.add("empName");
    openapiFields.add("skdDate");
    openapiFields.add("skdStartTime");
    openapiFields.add("skdEndTime");
    openapiFields.add("skdTime");
    openapiFields.add("wbtName");
    openapiFields.add("tcodeName");
    openapiFields.add("jobName");
    openapiFields.add("htypeName");
    openapiFields.add("actName");
    openapiFields.add("noDetails");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to ScheduleModelStateDto
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!ScheduleModelStateDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ScheduleModelStateDto is not found in the empty JSON string", ScheduleModelStateDto.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("operationType") != null && !jsonObj.get("operationType").isJsonNull()) {
        JsonArray jsonArrayoperationType = jsonObj.getAsJsonArray("operationType");
        if (jsonArrayoperationType != null) {
          // ensure the json data is an array
          if (!jsonObj.get("operationType").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `operationType` to be an array in the JSON string but got `%s`", jsonObj.get("operationType").toString()));
          }

          // validate the optional field `operationType` (array)
          for (int i = 0; i < jsonArrayoperationType.size(); i++) {
            StateDto.validateJsonObject(jsonArrayoperationType.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("empName") != null && !jsonObj.get("empName").isJsonNull()) {
        JsonArray jsonArrayempName = jsonObj.getAsJsonArray("empName");
        if (jsonArrayempName != null) {
          // ensure the json data is an array
          if (!jsonObj.get("empName").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `empName` to be an array in the JSON string but got `%s`", jsonObj.get("empName").toString()));
          }

          // validate the optional field `empName` (array)
          for (int i = 0; i < jsonArrayempName.size(); i++) {
            StateDto.validateJsonObject(jsonArrayempName.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("skdDate") != null && !jsonObj.get("skdDate").isJsonNull()) {
        JsonArray jsonArrayskdDate = jsonObj.getAsJsonArray("skdDate");
        if (jsonArrayskdDate != null) {
          // ensure the json data is an array
          if (!jsonObj.get("skdDate").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `skdDate` to be an array in the JSON string but got `%s`", jsonObj.get("skdDate").toString()));
          }

          // validate the optional field `skdDate` (array)
          for (int i = 0; i < jsonArrayskdDate.size(); i++) {
            StateDto.validateJsonObject(jsonArrayskdDate.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("skdStartTime") != null && !jsonObj.get("skdStartTime").isJsonNull()) {
        JsonArray jsonArrayskdStartTime = jsonObj.getAsJsonArray("skdStartTime");
        if (jsonArrayskdStartTime != null) {
          // ensure the json data is an array
          if (!jsonObj.get("skdStartTime").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `skdStartTime` to be an array in the JSON string but got `%s`", jsonObj.get("skdStartTime").toString()));
          }

          // validate the optional field `skdStartTime` (array)
          for (int i = 0; i < jsonArrayskdStartTime.size(); i++) {
            StateDto.validateJsonObject(jsonArrayskdStartTime.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("skdEndTime") != null && !jsonObj.get("skdEndTime").isJsonNull()) {
        JsonArray jsonArrayskdEndTime = jsonObj.getAsJsonArray("skdEndTime");
        if (jsonArrayskdEndTime != null) {
          // ensure the json data is an array
          if (!jsonObj.get("skdEndTime").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `skdEndTime` to be an array in the JSON string but got `%s`", jsonObj.get("skdEndTime").toString()));
          }

          // validate the optional field `skdEndTime` (array)
          for (int i = 0; i < jsonArrayskdEndTime.size(); i++) {
            StateDto.validateJsonObject(jsonArrayskdEndTime.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("skdTime") != null && !jsonObj.get("skdTime").isJsonNull()) {
        JsonArray jsonArrayskdTime = jsonObj.getAsJsonArray("skdTime");
        if (jsonArrayskdTime != null) {
          // ensure the json data is an array
          if (!jsonObj.get("skdTime").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `skdTime` to be an array in the JSON string but got `%s`", jsonObj.get("skdTime").toString()));
          }

          // validate the optional field `skdTime` (array)
          for (int i = 0; i < jsonArrayskdTime.size(); i++) {
            StateDto.validateJsonObject(jsonArrayskdTime.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("wbtName") != null && !jsonObj.get("wbtName").isJsonNull()) {
        JsonArray jsonArraywbtName = jsonObj.getAsJsonArray("wbtName");
        if (jsonArraywbtName != null) {
          // ensure the json data is an array
          if (!jsonObj.get("wbtName").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `wbtName` to be an array in the JSON string but got `%s`", jsonObj.get("wbtName").toString()));
          }

          // validate the optional field `wbtName` (array)
          for (int i = 0; i < jsonArraywbtName.size(); i++) {
            StateDto.validateJsonObject(jsonArraywbtName.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("tcodeName") != null && !jsonObj.get("tcodeName").isJsonNull()) {
        JsonArray jsonArraytcodeName = jsonObj.getAsJsonArray("tcodeName");
        if (jsonArraytcodeName != null) {
          // ensure the json data is an array
          if (!jsonObj.get("tcodeName").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `tcodeName` to be an array in the JSON string but got `%s`", jsonObj.get("tcodeName").toString()));
          }

          // validate the optional field `tcodeName` (array)
          for (int i = 0; i < jsonArraytcodeName.size(); i++) {
            StateDto.validateJsonObject(jsonArraytcodeName.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("jobName") != null && !jsonObj.get("jobName").isJsonNull()) {
        JsonArray jsonArrayjobName = jsonObj.getAsJsonArray("jobName");
        if (jsonArrayjobName != null) {
          // ensure the json data is an array
          if (!jsonObj.get("jobName").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `jobName` to be an array in the JSON string but got `%s`", jsonObj.get("jobName").toString()));
          }

          // validate the optional field `jobName` (array)
          for (int i = 0; i < jsonArrayjobName.size(); i++) {
            StateDto.validateJsonObject(jsonArrayjobName.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("htypeName") != null && !jsonObj.get("htypeName").isJsonNull()) {
        JsonArray jsonArrayhtypeName = jsonObj.getAsJsonArray("htypeName");
        if (jsonArrayhtypeName != null) {
          // ensure the json data is an array
          if (!jsonObj.get("htypeName").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `htypeName` to be an array in the JSON string but got `%s`", jsonObj.get("htypeName").toString()));
          }

          // validate the optional field `htypeName` (array)
          for (int i = 0; i < jsonArrayhtypeName.size(); i++) {
            StateDto.validateJsonObject(jsonArrayhtypeName.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("actName") != null && !jsonObj.get("actName").isJsonNull()) {
        JsonArray jsonArrayactName = jsonObj.getAsJsonArray("actName");
        if (jsonArrayactName != null) {
          // ensure the json data is an array
          if (!jsonObj.get("actName").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `actName` to be an array in the JSON string but got `%s`", jsonObj.get("actName").toString()));
          }

          // validate the optional field `actName` (array)
          for (int i = 0; i < jsonArrayactName.size(); i++) {
            StateDto.validateJsonObject(jsonArrayactName.get(i).getAsJsonObject());
          };
        }
      }
      if (jsonObj.get("noDetails") != null && !jsonObj.get("noDetails").isJsonNull()) {
        JsonArray jsonArraynoDetails = jsonObj.getAsJsonArray("noDetails");
        if (jsonArraynoDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("noDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `noDetails` to be an array in the JSON string but got `%s`", jsonObj.get("noDetails").toString()));
          }

          // validate the optional field `noDetails` (array)
          for (int i = 0; i < jsonArraynoDetails.size(); i++) {
            StateDto.validateJsonObject(jsonArraynoDetails.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ScheduleModelStateDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ScheduleModelStateDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ScheduleModelStateDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ScheduleModelStateDto.class));

       return (TypeAdapter<T>) new TypeAdapter<ScheduleModelStateDto>() {
           @Override
           public void write(JsonWriter out, ScheduleModelStateDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public ScheduleModelStateDto read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             ScheduleModelStateDto instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ScheduleModelStateDto given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ScheduleModelStateDto
  * @throws IOException if the JSON string is invalid with respect to ScheduleModelStateDto
  */
  public static ScheduleModelStateDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ScheduleModelStateDto.class);
  }

 /**
  * Convert an instance of ScheduleModelStateDto to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

