/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeePayDeductionElementsModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeePayDeductionElementsModel {
  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_SYSTEM_ID = "systemId";
  @SerializedName(SERIALIZED_NAME_SYSTEM_ID)
  private String systemId;

  public static final String SERIALIZED_NAME_PAY_DEDUCTION_ID = "payDeductionId";
  @SerializedName(SERIALIZED_NAME_PAY_DEDUCTION_ID)
  private String payDeductionId;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private String payGroup;

  public static final String SERIALIZED_NAME_PAY_DEDUCTION_NAME = "payDeductionName";
  @SerializedName(SERIALIZED_NAME_PAY_DEDUCTION_NAME)
  private String payDeductionName;

  public static final String SERIALIZED_NAME_PAY_DEDUCTION_DESCRIPTION = "payDeductionDescription";
  @SerializedName(SERIALIZED_NAME_PAY_DEDUCTION_DESCRIPTION)
  private String payDeductionDescription;

  public static final String SERIALIZED_NAME_PERIOD_START_ID = "periodStartId";
  @SerializedName(SERIALIZED_NAME_PERIOD_START_ID)
  private String periodStartId;

  public static final String SERIALIZED_NAME_PERIOD_END_ID = "periodEndId";
  @SerializedName(SERIALIZED_NAME_PERIOD_END_ID)
  private String periodEndId;

  public static final String SERIALIZED_NAME_PERIOD_START_NAME = "periodStartName";
  @SerializedName(SERIALIZED_NAME_PERIOD_START_NAME)
  private String periodStartName;

  public static final String SERIALIZED_NAME_PERIOD_END_NAME = "periodEndName";
  @SerializedName(SERIALIZED_NAME_PERIOD_END_NAME)
  private String periodEndName;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_TASK = "task";
  @SerializedName(SERIALIZED_NAME_TASK)
  private String task;

  public static final String SERIALIZED_NAME_RECURRING = "recurring";
  @SerializedName(SERIALIZED_NAME_RECURRING)
  private String recurring;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private String amount;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_MODIFIED_DATE = "modifiedDate";
  @SerializedName(SERIALIZED_NAME_MODIFIED_DATE)
  private OffsetDateTime modifiedDate;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_PAYMENT_OR_DEDUCTION_INDICATOR = "paymentOrDeductionIndicator";
  @SerializedName(SERIALIZED_NAME_PAYMENT_OR_DEDUCTION_INDICATOR)
  private String paymentOrDeductionIndicator;

  public EmployeePayDeductionElementsModel() {
  }

  public EmployeePayDeductionElementsModel employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EmployeePayDeductionElementsModel companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmployeePayDeductionElementsModel systemId(String systemId) {
    
    
    
    
    this.systemId = systemId;
    return this;
  }

   /**
   * Get systemId
   * @return systemId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSystemId() {
    return systemId;
  }


  public void setSystemId(String systemId) {
    
    
    
    this.systemId = systemId;
  }


  public EmployeePayDeductionElementsModel payDeductionId(String payDeductionId) {
    
    
    
    
    this.payDeductionId = payDeductionId;
    return this;
  }

   /**
   * Get payDeductionId
   * @return payDeductionId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayDeductionId() {
    return payDeductionId;
  }


  public void setPayDeductionId(String payDeductionId) {
    
    
    
    this.payDeductionId = payDeductionId;
  }


  public EmployeePayDeductionElementsModel employeeNumber(String employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public EmployeePayDeductionElementsModel payGroup(String payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(String payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public EmployeePayDeductionElementsModel payDeductionName(String payDeductionName) {
    
    
    
    
    this.payDeductionName = payDeductionName;
    return this;
  }

   /**
   * Get payDeductionName
   * @return payDeductionName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayDeductionName() {
    return payDeductionName;
  }


  public void setPayDeductionName(String payDeductionName) {
    
    
    
    this.payDeductionName = payDeductionName;
  }


  public EmployeePayDeductionElementsModel payDeductionDescription(String payDeductionDescription) {
    
    
    
    
    this.payDeductionDescription = payDeductionDescription;
    return this;
  }

   /**
   * Get payDeductionDescription
   * @return payDeductionDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayDeductionDescription() {
    return payDeductionDescription;
  }


  public void setPayDeductionDescription(String payDeductionDescription) {
    
    
    
    this.payDeductionDescription = payDeductionDescription;
  }


  public EmployeePayDeductionElementsModel periodStartId(String periodStartId) {
    
    
    
    
    this.periodStartId = periodStartId;
    return this;
  }

   /**
   * Get periodStartId
   * @return periodStartId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodStartId() {
    return periodStartId;
  }


  public void setPeriodStartId(String periodStartId) {
    
    
    
    this.periodStartId = periodStartId;
  }


  public EmployeePayDeductionElementsModel periodEndId(String periodEndId) {
    
    
    
    
    this.periodEndId = periodEndId;
    return this;
  }

   /**
   * Get periodEndId
   * @return periodEndId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodEndId() {
    return periodEndId;
  }


  public void setPeriodEndId(String periodEndId) {
    
    
    
    this.periodEndId = periodEndId;
  }


  public EmployeePayDeductionElementsModel periodStartName(String periodStartName) {
    
    
    
    
    this.periodStartName = periodStartName;
    return this;
  }

   /**
   * Get periodStartName
   * @return periodStartName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodStartName() {
    return periodStartName;
  }


  public void setPeriodStartName(String periodStartName) {
    
    
    
    this.periodStartName = periodStartName;
  }


  public EmployeePayDeductionElementsModel periodEndName(String periodEndName) {
    
    
    
    
    this.periodEndName = periodEndName;
    return this;
  }

   /**
   * Get periodEndName
   * @return periodEndName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodEndName() {
    return periodEndName;
  }


  public void setPeriodEndName(String periodEndName) {
    
    
    
    this.periodEndName = periodEndName;
  }


  public EmployeePayDeductionElementsModel startDate(OffsetDateTime startDate) {
    
    
    
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    
    
    
    this.startDate = startDate;
  }


  public EmployeePayDeductionElementsModel endDate(OffsetDateTime endDate) {
    
    
    
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    
    
    
    this.endDate = endDate;
  }


  public EmployeePayDeductionElementsModel project(String project) {
    
    
    
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProject() {
    return project;
  }


  public void setProject(String project) {
    
    
    
    this.project = project;
  }


  public EmployeePayDeductionElementsModel task(String task) {
    
    
    
    
    this.task = task;
    return this;
  }

   /**
   * Get task
   * @return task
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTask() {
    return task;
  }


  public void setTask(String task) {
    
    
    
    this.task = task;
  }


  public EmployeePayDeductionElementsModel recurring(String recurring) {
    
    
    
    
    this.recurring = recurring;
    return this;
  }

   /**
   * Get recurring
   * @return recurring
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getRecurring() {
    return recurring;
  }


  public void setRecurring(String recurring) {
    
    
    
    this.recurring = recurring;
  }


  public EmployeePayDeductionElementsModel amount(String amount) {
    
    
    
    
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAmount() {
    return amount;
  }


  public void setAmount(String amount) {
    
    
    
    this.amount = amount;
  }


  public EmployeePayDeductionElementsModel notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public EmployeePayDeductionElementsModel modifiedDate(OffsetDateTime modifiedDate) {
    
    
    
    
    this.modifiedDate = modifiedDate;
    return this;
  }

   /**
   * Get modifiedDate
   * @return modifiedDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getModifiedDate() {
    return modifiedDate;
  }


  public void setModifiedDate(OffsetDateTime modifiedDate) {
    
    
    
    this.modifiedDate = modifiedDate;
  }


  public EmployeePayDeductionElementsModel country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public EmployeePayDeductionElementsModel paymentOrDeductionIndicator(String paymentOrDeductionIndicator) {
    
    
    
    
    this.paymentOrDeductionIndicator = paymentOrDeductionIndicator;
    return this;
  }

   /**
   * Get paymentOrDeductionIndicator
   * @return paymentOrDeductionIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaymentOrDeductionIndicator() {
    return paymentOrDeductionIndicator;
  }


  public void setPaymentOrDeductionIndicator(String paymentOrDeductionIndicator) {
    
    
    
    this.paymentOrDeductionIndicator = paymentOrDeductionIndicator;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeePayDeductionElementsModel instance itself
   */
  public EmployeePayDeductionElementsModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeePayDeductionElementsModel employeePayDeductionElementsModel = (EmployeePayDeductionElementsModel) o;
    return Objects.equals(this.employeeId, employeePayDeductionElementsModel.employeeId) &&
        Objects.equals(this.companyId, employeePayDeductionElementsModel.companyId) &&
        Objects.equals(this.systemId, employeePayDeductionElementsModel.systemId) &&
        Objects.equals(this.payDeductionId, employeePayDeductionElementsModel.payDeductionId) &&
        Objects.equals(this.employeeNumber, employeePayDeductionElementsModel.employeeNumber) &&
        Objects.equals(this.payGroup, employeePayDeductionElementsModel.payGroup) &&
        Objects.equals(this.payDeductionName, employeePayDeductionElementsModel.payDeductionName) &&
        Objects.equals(this.payDeductionDescription, employeePayDeductionElementsModel.payDeductionDescription) &&
        Objects.equals(this.periodStartId, employeePayDeductionElementsModel.periodStartId) &&
        Objects.equals(this.periodEndId, employeePayDeductionElementsModel.periodEndId) &&
        Objects.equals(this.periodStartName, employeePayDeductionElementsModel.periodStartName) &&
        Objects.equals(this.periodEndName, employeePayDeductionElementsModel.periodEndName) &&
        Objects.equals(this.startDate, employeePayDeductionElementsModel.startDate) &&
        Objects.equals(this.endDate, employeePayDeductionElementsModel.endDate) &&
        Objects.equals(this.project, employeePayDeductionElementsModel.project) &&
        Objects.equals(this.task, employeePayDeductionElementsModel.task) &&
        Objects.equals(this.recurring, employeePayDeductionElementsModel.recurring) &&
        Objects.equals(this.amount, employeePayDeductionElementsModel.amount) &&
        Objects.equals(this.notes, employeePayDeductionElementsModel.notes) &&
        Objects.equals(this.modifiedDate, employeePayDeductionElementsModel.modifiedDate) &&
        Objects.equals(this.country, employeePayDeductionElementsModel.country) &&
        Objects.equals(this.paymentOrDeductionIndicator, employeePayDeductionElementsModel.paymentOrDeductionIndicator)&&
        Objects.equals(this.additionalProperties, employeePayDeductionElementsModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeId, companyId, systemId, payDeductionId, employeeNumber, payGroup, payDeductionName, payDeductionDescription, periodStartId, periodEndId, periodStartName, periodEndName, startDate, endDate, project, task, recurring, amount, notes, modifiedDate, country, paymentOrDeductionIndicator, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeePayDeductionElementsModel {\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    systemId: ").append(toIndentedString(systemId)).append("\n");
    sb.append("    payDeductionId: ").append(toIndentedString(payDeductionId)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    payDeductionName: ").append(toIndentedString(payDeductionName)).append("\n");
    sb.append("    payDeductionDescription: ").append(toIndentedString(payDeductionDescription)).append("\n");
    sb.append("    periodStartId: ").append(toIndentedString(periodStartId)).append("\n");
    sb.append("    periodEndId: ").append(toIndentedString(periodEndId)).append("\n");
    sb.append("    periodStartName: ").append(toIndentedString(periodStartName)).append("\n");
    sb.append("    periodEndName: ").append(toIndentedString(periodEndName)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    task: ").append(toIndentedString(task)).append("\n");
    sb.append("    recurring: ").append(toIndentedString(recurring)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    modifiedDate: ").append(toIndentedString(modifiedDate)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    paymentOrDeductionIndicator: ").append(toIndentedString(paymentOrDeductionIndicator)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("employeeId");
    openapiFields.add("companyId");
    openapiFields.add("systemId");
    openapiFields.add("payDeductionId");
    openapiFields.add("employeeNumber");
    openapiFields.add("payGroup");
    openapiFields.add("payDeductionName");
    openapiFields.add("payDeductionDescription");
    openapiFields.add("periodStartId");
    openapiFields.add("periodEndId");
    openapiFields.add("periodStartName");
    openapiFields.add("periodEndName");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("project");
    openapiFields.add("task");
    openapiFields.add("recurring");
    openapiFields.add("amount");
    openapiFields.add("notes");
    openapiFields.add("modifiedDate");
    openapiFields.add("country");
    openapiFields.add("paymentOrDeductionIndicator");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeePayDeductionElementsModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeePayDeductionElementsModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeePayDeductionElementsModel is not found in the empty JSON string", EmployeePayDeductionElementsModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("systemId") != null && !jsonObj.get("systemId").isJsonNull()) && !jsonObj.get("systemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `systemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("systemId").toString()));
      }
      if ((jsonObj.get("payDeductionId") != null && !jsonObj.get("payDeductionId").isJsonNull()) && !jsonObj.get("payDeductionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payDeductionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payDeductionId").toString()));
      }
      if ((jsonObj.get("employeeNumber") != null && !jsonObj.get("employeeNumber").isJsonNull()) && !jsonObj.get("employeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeNumber").toString()));
      }
      if ((jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) && !jsonObj.get("payGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroup").toString()));
      }
      if ((jsonObj.get("payDeductionName") != null && !jsonObj.get("payDeductionName").isJsonNull()) && !jsonObj.get("payDeductionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payDeductionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payDeductionName").toString()));
      }
      if ((jsonObj.get("payDeductionDescription") != null && !jsonObj.get("payDeductionDescription").isJsonNull()) && !jsonObj.get("payDeductionDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payDeductionDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payDeductionDescription").toString()));
      }
      if ((jsonObj.get("periodStartId") != null && !jsonObj.get("periodStartId").isJsonNull()) && !jsonObj.get("periodStartId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodStartId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodStartId").toString()));
      }
      if ((jsonObj.get("periodEndId") != null && !jsonObj.get("periodEndId").isJsonNull()) && !jsonObj.get("periodEndId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodEndId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodEndId").toString()));
      }
      if ((jsonObj.get("periodStartName") != null && !jsonObj.get("periodStartName").isJsonNull()) && !jsonObj.get("periodStartName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodStartName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodStartName").toString()));
      }
      if ((jsonObj.get("periodEndName") != null && !jsonObj.get("periodEndName").isJsonNull()) && !jsonObj.get("periodEndName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodEndName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodEndName").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
      if ((jsonObj.get("task") != null && !jsonObj.get("task").isJsonNull()) && !jsonObj.get("task").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `task` to be a primitive type in the JSON string but got `%s`", jsonObj.get("task").toString()));
      }
      if ((jsonObj.get("recurring") != null && !jsonObj.get("recurring").isJsonNull()) && !jsonObj.get("recurring").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `recurring` to be a primitive type in the JSON string but got `%s`", jsonObj.get("recurring").toString()));
      }
      if ((jsonObj.get("amount") != null && !jsonObj.get("amount").isJsonNull()) && !jsonObj.get("amount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amount").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("paymentOrDeductionIndicator") != null && !jsonObj.get("paymentOrDeductionIndicator").isJsonNull()) && !jsonObj.get("paymentOrDeductionIndicator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentOrDeductionIndicator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentOrDeductionIndicator").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeePayDeductionElementsModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeePayDeductionElementsModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeePayDeductionElementsModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeePayDeductionElementsModel.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeePayDeductionElementsModel>() {
           @Override
           public void write(JsonWriter out, EmployeePayDeductionElementsModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeePayDeductionElementsModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeePayDeductionElementsModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeePayDeductionElementsModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeePayDeductionElementsModel
  * @throws IOException if the JSON string is invalid with respect to EmployeePayDeductionElementsModel
  */
  public static EmployeePayDeductionElementsModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeePayDeductionElementsModel.class);
  }

 /**
  * Convert an instance of EmployeePayDeductionElementsModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

