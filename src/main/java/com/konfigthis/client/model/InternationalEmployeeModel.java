/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * InternationalEmployeeModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class InternationalEmployeeModel {
  public static final String SERIALIZED_NAME_CASTE = "caste";
  @SerializedName(SERIALIZED_NAME_CASTE)
  private String caste;

  public static final String SERIALIZED_NAME_CASTE_DESCRIPTION = "casteDescription";
  @SerializedName(SERIALIZED_NAME_CASTE_DESCRIPTION)
  private String casteDescription;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EFFECTIVE_DATE = "effectiveDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_DATE)
  private OffsetDateTime effectiveDate;

  public static final String SERIALIZED_NAME_ETHNIC_ID_CODE = "ethnicIdCode";
  @SerializedName(SERIALIZED_NAME_ETHNIC_ID_CODE)
  private String ethnicIdCode;

  public static final String SERIALIZED_NAME_HEALTH_CARE_ID = "healthCareId";
  @SerializedName(SERIALIZED_NAME_HEALTH_CARE_ID)
  private String healthCareId;

  public static final String SERIALIZED_NAME_IS_ABORIGINAL = "isAboriginal";
  @SerializedName(SERIALIZED_NAME_IS_ABORIGINAL)
  private String isAboriginal;

  public static final String SERIALIZED_NAME_NATIONAL_ID = "nationalId";
  @SerializedName(SERIALIZED_NAME_NATIONAL_ID)
  private String nationalId;

  public static final String SERIALIZED_NAME_NATIONAL_ID_EXPIRATION_DATE = "nationalIdExpirationDate";
  @SerializedName(SERIALIZED_NAME_NATIONAL_ID_EXPIRATION_DATE)
  private OffsetDateTime nationalIdExpirationDate;

  public static final String SERIALIZED_NAME_OLD_NATIONAL_ID = "oldNationalId";
  @SerializedName(SERIALIZED_NAME_OLD_NATIONAL_ID)
  private String oldNationalId;

  public static final String SERIALIZED_NAME_OLD_NATIONAL_ID_EXPIRATION_DATE = "oldNationalIdExpirationDate";
  @SerializedName(SERIALIZED_NAME_OLD_NATIONAL_ID_EXPIRATION_DATE)
  private OffsetDateTime oldNationalIdExpirationDate;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD1 = "userDefinedField1";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD1)
  private String userDefinedField1;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD2 = "userDefinedField2";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD2)
  private String userDefinedField2;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD3 = "userDefinedField3";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD3)
  private Float userDefinedField3;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD4 = "userDefinedField4";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD4)
  private Float userDefinedField4;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD5 = "userDefinedField5";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD5)
  private OffsetDateTime userDefinedField5;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD6 = "userDefinedField6";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD6)
  private OffsetDateTime userDefinedField6;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD7 = "userDefinedField7";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD7)
  private String userDefinedField7;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD8 = "userDefinedField8";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD8)
  private String userDefinedField8;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD9 = "userDefinedField9";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD9)
  private String userDefinedField9;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD10 = "userDefinedField10";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD10)
  private Float userDefinedField10;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD11 = "userDefinedField11";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD11)
  private Float userDefinedField11;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD12 = "userDefinedField12";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD12)
  private OffsetDateTime userDefinedField12;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD13 = "userDefinedField13";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD13)
  private OffsetDateTime userDefinedField13;

  public static final String SERIALIZED_NAME_USER_DEFINED_FIELD14 = "userDefinedField14";
  @SerializedName(SERIALIZED_NAME_USER_DEFINED_FIELD14)
  private String userDefinedField14;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_IS_MILITARY_RESERVE = "isMilitaryReserve";
  @SerializedName(SERIALIZED_NAME_IS_MILITARY_RESERVE)
  private String isMilitaryReserve;

  public static final String SERIALIZED_NAME_IS_MILITARY_SERVICE_COMPLETED = "isMilitaryServiceCompleted";
  @SerializedName(SERIALIZED_NAME_IS_MILITARY_SERVICE_COMPLETED)
  private String isMilitaryServiceCompleted;

  public static final String SERIALIZED_NAME_MEDICAL_REGION_CODE = "medicalRegionCode";
  @SerializedName(SERIALIZED_NAME_MEDICAL_REGION_CODE)
  private String medicalRegionCode;

  public InternationalEmployeeModel() {
  }

  public InternationalEmployeeModel caste(String caste) {
    
    
    
    
    this.caste = caste;
    return this;
  }

   /**
   * Get caste
   * @return caste
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCaste() {
    return caste;
  }


  public void setCaste(String caste) {
    
    
    
    this.caste = caste;
  }


  public InternationalEmployeeModel casteDescription(String casteDescription) {
    
    
    
    
    this.casteDescription = casteDescription;
    return this;
  }

   /**
   * Get casteDescription
   * @return casteDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCasteDescription() {
    return casteDescription;
  }


  public void setCasteDescription(String casteDescription) {
    
    
    
    this.casteDescription = casteDescription;
  }


  public InternationalEmployeeModel countryCode(String countryCode) {
    
    
    
    
    this.countryCode = countryCode;
    return this;
  }

   /**
   * Get countryCode
   * @return countryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountryCode() {
    return countryCode;
  }


  public void setCountryCode(String countryCode) {
    
    
    
    this.countryCode = countryCode;
  }


  public InternationalEmployeeModel employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public InternationalEmployeeModel effectiveDate(OffsetDateTime effectiveDate) {
    
    
    
    
    this.effectiveDate = effectiveDate;
    return this;
  }

   /**
   * Get effectiveDate
   * @return effectiveDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEffectiveDate() {
    return effectiveDate;
  }


  public void setEffectiveDate(OffsetDateTime effectiveDate) {
    
    
    
    this.effectiveDate = effectiveDate;
  }


  public InternationalEmployeeModel ethnicIdCode(String ethnicIdCode) {
    
    
    
    
    this.ethnicIdCode = ethnicIdCode;
    return this;
  }

   /**
   * Get ethnicIdCode
   * @return ethnicIdCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEthnicIdCode() {
    return ethnicIdCode;
  }


  public void setEthnicIdCode(String ethnicIdCode) {
    
    
    
    this.ethnicIdCode = ethnicIdCode;
  }


  public InternationalEmployeeModel healthCareId(String healthCareId) {
    
    
    
    
    this.healthCareId = healthCareId;
    return this;
  }

   /**
   * Get healthCareId
   * @return healthCareId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHealthCareId() {
    return healthCareId;
  }


  public void setHealthCareId(String healthCareId) {
    
    
    
    this.healthCareId = healthCareId;
  }


  public InternationalEmployeeModel isAboriginal(String isAboriginal) {
    
    
    
    
    this.isAboriginal = isAboriginal;
    return this;
  }

   /**
   * Get isAboriginal
   * @return isAboriginal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsAboriginal() {
    return isAboriginal;
  }


  public void setIsAboriginal(String isAboriginal) {
    
    
    
    this.isAboriginal = isAboriginal;
  }


  public InternationalEmployeeModel nationalId(String nationalId) {
    
    
    
    
    this.nationalId = nationalId;
    return this;
  }

   /**
   * Get nationalId
   * @return nationalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNationalId() {
    return nationalId;
  }


  public void setNationalId(String nationalId) {
    
    
    
    this.nationalId = nationalId;
  }


  public InternationalEmployeeModel nationalIdExpirationDate(OffsetDateTime nationalIdExpirationDate) {
    
    
    
    
    this.nationalIdExpirationDate = nationalIdExpirationDate;
    return this;
  }

   /**
   * Get nationalIdExpirationDate
   * @return nationalIdExpirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getNationalIdExpirationDate() {
    return nationalIdExpirationDate;
  }


  public void setNationalIdExpirationDate(OffsetDateTime nationalIdExpirationDate) {
    
    
    
    this.nationalIdExpirationDate = nationalIdExpirationDate;
  }


  public InternationalEmployeeModel oldNationalId(String oldNationalId) {
    
    
    
    
    this.oldNationalId = oldNationalId;
    return this;
  }

   /**
   * Get oldNationalId
   * @return oldNationalId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOldNationalId() {
    return oldNationalId;
  }


  public void setOldNationalId(String oldNationalId) {
    
    
    
    this.oldNationalId = oldNationalId;
  }


  public InternationalEmployeeModel oldNationalIdExpirationDate(OffsetDateTime oldNationalIdExpirationDate) {
    
    
    
    
    this.oldNationalIdExpirationDate = oldNationalIdExpirationDate;
    return this;
  }

   /**
   * Get oldNationalIdExpirationDate
   * @return oldNationalIdExpirationDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getOldNationalIdExpirationDate() {
    return oldNationalIdExpirationDate;
  }


  public void setOldNationalIdExpirationDate(OffsetDateTime oldNationalIdExpirationDate) {
    
    
    
    this.oldNationalIdExpirationDate = oldNationalIdExpirationDate;
  }


  public InternationalEmployeeModel userDefinedField1(String userDefinedField1) {
    
    
    
    
    this.userDefinedField1 = userDefinedField1;
    return this;
  }

   /**
   * Get userDefinedField1
   * @return userDefinedField1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDefinedField1() {
    return userDefinedField1;
  }


  public void setUserDefinedField1(String userDefinedField1) {
    
    
    
    this.userDefinedField1 = userDefinedField1;
  }


  public InternationalEmployeeModel userDefinedField2(String userDefinedField2) {
    
    
    
    
    this.userDefinedField2 = userDefinedField2;
    return this;
  }

   /**
   * Get userDefinedField2
   * @return userDefinedField2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDefinedField2() {
    return userDefinedField2;
  }


  public void setUserDefinedField2(String userDefinedField2) {
    
    
    
    this.userDefinedField2 = userDefinedField2;
  }


  public InternationalEmployeeModel userDefinedField3(Float userDefinedField3) {
    
    
    
    
    this.userDefinedField3 = userDefinedField3;
    return this;
  }

   /**
   * Get userDefinedField3
   * @return userDefinedField3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getUserDefinedField3() {
    return userDefinedField3;
  }


  public void setUserDefinedField3(Float userDefinedField3) {
    
    
    
    this.userDefinedField3 = userDefinedField3;
  }


  public InternationalEmployeeModel userDefinedField4(Float userDefinedField4) {
    
    
    
    
    this.userDefinedField4 = userDefinedField4;
    return this;
  }

   /**
   * Get userDefinedField4
   * @return userDefinedField4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getUserDefinedField4() {
    return userDefinedField4;
  }


  public void setUserDefinedField4(Float userDefinedField4) {
    
    
    
    this.userDefinedField4 = userDefinedField4;
  }


  public InternationalEmployeeModel userDefinedField5(OffsetDateTime userDefinedField5) {
    
    
    
    
    this.userDefinedField5 = userDefinedField5;
    return this;
  }

   /**
   * Get userDefinedField5
   * @return userDefinedField5
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUserDefinedField5() {
    return userDefinedField5;
  }


  public void setUserDefinedField5(OffsetDateTime userDefinedField5) {
    
    
    
    this.userDefinedField5 = userDefinedField5;
  }


  public InternationalEmployeeModel userDefinedField6(OffsetDateTime userDefinedField6) {
    
    
    
    
    this.userDefinedField6 = userDefinedField6;
    return this;
  }

   /**
   * Get userDefinedField6
   * @return userDefinedField6
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUserDefinedField6() {
    return userDefinedField6;
  }


  public void setUserDefinedField6(OffsetDateTime userDefinedField6) {
    
    
    
    this.userDefinedField6 = userDefinedField6;
  }


  public InternationalEmployeeModel userDefinedField7(String userDefinedField7) {
    
    
    
    
    this.userDefinedField7 = userDefinedField7;
    return this;
  }

   /**
   * Get userDefinedField7
   * @return userDefinedField7
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDefinedField7() {
    return userDefinedField7;
  }


  public void setUserDefinedField7(String userDefinedField7) {
    
    
    
    this.userDefinedField7 = userDefinedField7;
  }


  public InternationalEmployeeModel userDefinedField8(String userDefinedField8) {
    
    
    
    
    this.userDefinedField8 = userDefinedField8;
    return this;
  }

   /**
   * Get userDefinedField8
   * @return userDefinedField8
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDefinedField8() {
    return userDefinedField8;
  }


  public void setUserDefinedField8(String userDefinedField8) {
    
    
    
    this.userDefinedField8 = userDefinedField8;
  }


  public InternationalEmployeeModel userDefinedField9(String userDefinedField9) {
    
    
    
    
    this.userDefinedField9 = userDefinedField9;
    return this;
  }

   /**
   * Get userDefinedField9
   * @return userDefinedField9
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDefinedField9() {
    return userDefinedField9;
  }


  public void setUserDefinedField9(String userDefinedField9) {
    
    
    
    this.userDefinedField9 = userDefinedField9;
  }


  public InternationalEmployeeModel userDefinedField10(Float userDefinedField10) {
    
    
    
    
    this.userDefinedField10 = userDefinedField10;
    return this;
  }

   /**
   * Get userDefinedField10
   * @return userDefinedField10
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getUserDefinedField10() {
    return userDefinedField10;
  }


  public void setUserDefinedField10(Float userDefinedField10) {
    
    
    
    this.userDefinedField10 = userDefinedField10;
  }


  public InternationalEmployeeModel userDefinedField11(Float userDefinedField11) {
    
    
    
    
    this.userDefinedField11 = userDefinedField11;
    return this;
  }

   /**
   * Get userDefinedField11
   * @return userDefinedField11
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getUserDefinedField11() {
    return userDefinedField11;
  }


  public void setUserDefinedField11(Float userDefinedField11) {
    
    
    
    this.userDefinedField11 = userDefinedField11;
  }


  public InternationalEmployeeModel userDefinedField12(OffsetDateTime userDefinedField12) {
    
    
    
    
    this.userDefinedField12 = userDefinedField12;
    return this;
  }

   /**
   * Get userDefinedField12
   * @return userDefinedField12
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUserDefinedField12() {
    return userDefinedField12;
  }


  public void setUserDefinedField12(OffsetDateTime userDefinedField12) {
    
    
    
    this.userDefinedField12 = userDefinedField12;
  }


  public InternationalEmployeeModel userDefinedField13(OffsetDateTime userDefinedField13) {
    
    
    
    
    this.userDefinedField13 = userDefinedField13;
    return this;
  }

   /**
   * Get userDefinedField13
   * @return userDefinedField13
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getUserDefinedField13() {
    return userDefinedField13;
  }


  public void setUserDefinedField13(OffsetDateTime userDefinedField13) {
    
    
    
    this.userDefinedField13 = userDefinedField13;
  }


  public InternationalEmployeeModel userDefinedField14(String userDefinedField14) {
    
    
    
    
    this.userDefinedField14 = userDefinedField14;
    return this;
  }

   /**
   * Get userDefinedField14
   * @return userDefinedField14
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserDefinedField14() {
    return userDefinedField14;
  }


  public void setUserDefinedField14(String userDefinedField14) {
    
    
    
    this.userDefinedField14 = userDefinedField14;
  }


  public InternationalEmployeeModel currencyCode(String currencyCode) {
    
    
    
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    
    
    
    this.currencyCode = currencyCode;
  }


  public InternationalEmployeeModel isMilitaryReserve(String isMilitaryReserve) {
    
    
    
    
    this.isMilitaryReserve = isMilitaryReserve;
    return this;
  }

   /**
   * Get isMilitaryReserve
   * @return isMilitaryReserve
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsMilitaryReserve() {
    return isMilitaryReserve;
  }


  public void setIsMilitaryReserve(String isMilitaryReserve) {
    
    
    
    this.isMilitaryReserve = isMilitaryReserve;
  }


  public InternationalEmployeeModel isMilitaryServiceCompleted(String isMilitaryServiceCompleted) {
    
    
    
    
    this.isMilitaryServiceCompleted = isMilitaryServiceCompleted;
    return this;
  }

   /**
   * Get isMilitaryServiceCompleted
   * @return isMilitaryServiceCompleted
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsMilitaryServiceCompleted() {
    return isMilitaryServiceCompleted;
  }


  public void setIsMilitaryServiceCompleted(String isMilitaryServiceCompleted) {
    
    
    
    this.isMilitaryServiceCompleted = isMilitaryServiceCompleted;
  }


  public InternationalEmployeeModel medicalRegionCode(String medicalRegionCode) {
    
    
    
    
    this.medicalRegionCode = medicalRegionCode;
    return this;
  }

   /**
   * Get medicalRegionCode
   * @return medicalRegionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMedicalRegionCode() {
    return medicalRegionCode;
  }


  public void setMedicalRegionCode(String medicalRegionCode) {
    
    
    
    this.medicalRegionCode = medicalRegionCode;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the InternationalEmployeeModel instance itself
   */
  public InternationalEmployeeModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InternationalEmployeeModel internationalEmployeeModel = (InternationalEmployeeModel) o;
    return Objects.equals(this.caste, internationalEmployeeModel.caste) &&
        Objects.equals(this.casteDescription, internationalEmployeeModel.casteDescription) &&
        Objects.equals(this.countryCode, internationalEmployeeModel.countryCode) &&
        Objects.equals(this.employeeId, internationalEmployeeModel.employeeId) &&
        Objects.equals(this.effectiveDate, internationalEmployeeModel.effectiveDate) &&
        Objects.equals(this.ethnicIdCode, internationalEmployeeModel.ethnicIdCode) &&
        Objects.equals(this.healthCareId, internationalEmployeeModel.healthCareId) &&
        Objects.equals(this.isAboriginal, internationalEmployeeModel.isAboriginal) &&
        Objects.equals(this.nationalId, internationalEmployeeModel.nationalId) &&
        Objects.equals(this.nationalIdExpirationDate, internationalEmployeeModel.nationalIdExpirationDate) &&
        Objects.equals(this.oldNationalId, internationalEmployeeModel.oldNationalId) &&
        Objects.equals(this.oldNationalIdExpirationDate, internationalEmployeeModel.oldNationalIdExpirationDate) &&
        Objects.equals(this.userDefinedField1, internationalEmployeeModel.userDefinedField1) &&
        Objects.equals(this.userDefinedField2, internationalEmployeeModel.userDefinedField2) &&
        Objects.equals(this.userDefinedField3, internationalEmployeeModel.userDefinedField3) &&
        Objects.equals(this.userDefinedField4, internationalEmployeeModel.userDefinedField4) &&
        Objects.equals(this.userDefinedField5, internationalEmployeeModel.userDefinedField5) &&
        Objects.equals(this.userDefinedField6, internationalEmployeeModel.userDefinedField6) &&
        Objects.equals(this.userDefinedField7, internationalEmployeeModel.userDefinedField7) &&
        Objects.equals(this.userDefinedField8, internationalEmployeeModel.userDefinedField8) &&
        Objects.equals(this.userDefinedField9, internationalEmployeeModel.userDefinedField9) &&
        Objects.equals(this.userDefinedField10, internationalEmployeeModel.userDefinedField10) &&
        Objects.equals(this.userDefinedField11, internationalEmployeeModel.userDefinedField11) &&
        Objects.equals(this.userDefinedField12, internationalEmployeeModel.userDefinedField12) &&
        Objects.equals(this.userDefinedField13, internationalEmployeeModel.userDefinedField13) &&
        Objects.equals(this.userDefinedField14, internationalEmployeeModel.userDefinedField14) &&
        Objects.equals(this.currencyCode, internationalEmployeeModel.currencyCode) &&
        Objects.equals(this.isMilitaryReserve, internationalEmployeeModel.isMilitaryReserve) &&
        Objects.equals(this.isMilitaryServiceCompleted, internationalEmployeeModel.isMilitaryServiceCompleted) &&
        Objects.equals(this.medicalRegionCode, internationalEmployeeModel.medicalRegionCode)&&
        Objects.equals(this.additionalProperties, internationalEmployeeModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(caste, casteDescription, countryCode, employeeId, effectiveDate, ethnicIdCode, healthCareId, isAboriginal, nationalId, nationalIdExpirationDate, oldNationalId, oldNationalIdExpirationDate, userDefinedField1, userDefinedField2, userDefinedField3, userDefinedField4, userDefinedField5, userDefinedField6, userDefinedField7, userDefinedField8, userDefinedField9, userDefinedField10, userDefinedField11, userDefinedField12, userDefinedField13, userDefinedField14, currencyCode, isMilitaryReserve, isMilitaryServiceCompleted, medicalRegionCode, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InternationalEmployeeModel {\n");
    sb.append("    caste: ").append(toIndentedString(caste)).append("\n");
    sb.append("    casteDescription: ").append(toIndentedString(casteDescription)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    ethnicIdCode: ").append(toIndentedString(ethnicIdCode)).append("\n");
    sb.append("    healthCareId: ").append(toIndentedString(healthCareId)).append("\n");
    sb.append("    isAboriginal: ").append(toIndentedString(isAboriginal)).append("\n");
    sb.append("    nationalId: ").append(toIndentedString(nationalId)).append("\n");
    sb.append("    nationalIdExpirationDate: ").append(toIndentedString(nationalIdExpirationDate)).append("\n");
    sb.append("    oldNationalId: ").append(toIndentedString(oldNationalId)).append("\n");
    sb.append("    oldNationalIdExpirationDate: ").append(toIndentedString(oldNationalIdExpirationDate)).append("\n");
    sb.append("    userDefinedField1: ").append(toIndentedString(userDefinedField1)).append("\n");
    sb.append("    userDefinedField2: ").append(toIndentedString(userDefinedField2)).append("\n");
    sb.append("    userDefinedField3: ").append(toIndentedString(userDefinedField3)).append("\n");
    sb.append("    userDefinedField4: ").append(toIndentedString(userDefinedField4)).append("\n");
    sb.append("    userDefinedField5: ").append(toIndentedString(userDefinedField5)).append("\n");
    sb.append("    userDefinedField6: ").append(toIndentedString(userDefinedField6)).append("\n");
    sb.append("    userDefinedField7: ").append(toIndentedString(userDefinedField7)).append("\n");
    sb.append("    userDefinedField8: ").append(toIndentedString(userDefinedField8)).append("\n");
    sb.append("    userDefinedField9: ").append(toIndentedString(userDefinedField9)).append("\n");
    sb.append("    userDefinedField10: ").append(toIndentedString(userDefinedField10)).append("\n");
    sb.append("    userDefinedField11: ").append(toIndentedString(userDefinedField11)).append("\n");
    sb.append("    userDefinedField12: ").append(toIndentedString(userDefinedField12)).append("\n");
    sb.append("    userDefinedField13: ").append(toIndentedString(userDefinedField13)).append("\n");
    sb.append("    userDefinedField14: ").append(toIndentedString(userDefinedField14)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    isMilitaryReserve: ").append(toIndentedString(isMilitaryReserve)).append("\n");
    sb.append("    isMilitaryServiceCompleted: ").append(toIndentedString(isMilitaryServiceCompleted)).append("\n");
    sb.append("    medicalRegionCode: ").append(toIndentedString(medicalRegionCode)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("caste");
    openapiFields.add("casteDescription");
    openapiFields.add("countryCode");
    openapiFields.add("employeeId");
    openapiFields.add("effectiveDate");
    openapiFields.add("ethnicIdCode");
    openapiFields.add("healthCareId");
    openapiFields.add("isAboriginal");
    openapiFields.add("nationalId");
    openapiFields.add("nationalIdExpirationDate");
    openapiFields.add("oldNationalId");
    openapiFields.add("oldNationalIdExpirationDate");
    openapiFields.add("userDefinedField1");
    openapiFields.add("userDefinedField2");
    openapiFields.add("userDefinedField3");
    openapiFields.add("userDefinedField4");
    openapiFields.add("userDefinedField5");
    openapiFields.add("userDefinedField6");
    openapiFields.add("userDefinedField7");
    openapiFields.add("userDefinedField8");
    openapiFields.add("userDefinedField9");
    openapiFields.add("userDefinedField10");
    openapiFields.add("userDefinedField11");
    openapiFields.add("userDefinedField12");
    openapiFields.add("userDefinedField13");
    openapiFields.add("userDefinedField14");
    openapiFields.add("currencyCode");
    openapiFields.add("isMilitaryReserve");
    openapiFields.add("isMilitaryServiceCompleted");
    openapiFields.add("medicalRegionCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to InternationalEmployeeModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!InternationalEmployeeModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in InternationalEmployeeModel is not found in the empty JSON string", InternationalEmployeeModel.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("caste") != null && !jsonObj.get("caste").isJsonNull()) && !jsonObj.get("caste").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `caste` to be a primitive type in the JSON string but got `%s`", jsonObj.get("caste").toString()));
      }
      if ((jsonObj.get("casteDescription") != null && !jsonObj.get("casteDescription").isJsonNull()) && !jsonObj.get("casteDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `casteDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("casteDescription").toString()));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("ethnicIdCode") != null && !jsonObj.get("ethnicIdCode").isJsonNull()) && !jsonObj.get("ethnicIdCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ethnicIdCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ethnicIdCode").toString()));
      }
      if ((jsonObj.get("healthCareId") != null && !jsonObj.get("healthCareId").isJsonNull()) && !jsonObj.get("healthCareId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `healthCareId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("healthCareId").toString()));
      }
      if ((jsonObj.get("isAboriginal") != null && !jsonObj.get("isAboriginal").isJsonNull()) && !jsonObj.get("isAboriginal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isAboriginal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isAboriginal").toString()));
      }
      if ((jsonObj.get("nationalId") != null && !jsonObj.get("nationalId").isJsonNull()) && !jsonObj.get("nationalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `nationalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("nationalId").toString()));
      }
      if ((jsonObj.get("oldNationalId") != null && !jsonObj.get("oldNationalId").isJsonNull()) && !jsonObj.get("oldNationalId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `oldNationalId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("oldNationalId").toString()));
      }
      if ((jsonObj.get("userDefinedField1") != null && !jsonObj.get("userDefinedField1").isJsonNull()) && !jsonObj.get("userDefinedField1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDefinedField1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDefinedField1").toString()));
      }
      if ((jsonObj.get("userDefinedField2") != null && !jsonObj.get("userDefinedField2").isJsonNull()) && !jsonObj.get("userDefinedField2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDefinedField2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDefinedField2").toString()));
      }
      if ((jsonObj.get("userDefinedField7") != null && !jsonObj.get("userDefinedField7").isJsonNull()) && !jsonObj.get("userDefinedField7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDefinedField7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDefinedField7").toString()));
      }
      if ((jsonObj.get("userDefinedField8") != null && !jsonObj.get("userDefinedField8").isJsonNull()) && !jsonObj.get("userDefinedField8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDefinedField8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDefinedField8").toString()));
      }
      if ((jsonObj.get("userDefinedField9") != null && !jsonObj.get("userDefinedField9").isJsonNull()) && !jsonObj.get("userDefinedField9").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDefinedField9` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDefinedField9").toString()));
      }
      if ((jsonObj.get("userDefinedField14") != null && !jsonObj.get("userDefinedField14").isJsonNull()) && !jsonObj.get("userDefinedField14").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userDefinedField14` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userDefinedField14").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("isMilitaryReserve") != null && !jsonObj.get("isMilitaryReserve").isJsonNull()) && !jsonObj.get("isMilitaryReserve").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isMilitaryReserve` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isMilitaryReserve").toString()));
      }
      if ((jsonObj.get("isMilitaryServiceCompleted") != null && !jsonObj.get("isMilitaryServiceCompleted").isJsonNull()) && !jsonObj.get("isMilitaryServiceCompleted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isMilitaryServiceCompleted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isMilitaryServiceCompleted").toString()));
      }
      if ((jsonObj.get("medicalRegionCode") != null && !jsonObj.get("medicalRegionCode").isJsonNull()) && !jsonObj.get("medicalRegionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `medicalRegionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("medicalRegionCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!InternationalEmployeeModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'InternationalEmployeeModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<InternationalEmployeeModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(InternationalEmployeeModel.class));

       return (TypeAdapter<T>) new TypeAdapter<InternationalEmployeeModel>() {
           @Override
           public void write(JsonWriter out, InternationalEmployeeModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public InternationalEmployeeModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             InternationalEmployeeModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of InternationalEmployeeModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of InternationalEmployeeModel
  * @throws IOException if the JSON string is invalid with respect to InternationalEmployeeModel
  */
  public static InternationalEmployeeModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, InternationalEmployeeModel.class);
  }

 /**
  * Convert an instance of InternationalEmployeeModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

