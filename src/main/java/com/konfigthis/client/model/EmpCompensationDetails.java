/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmpCompensationDetails
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmpCompensationDetails {
  public static final String SERIALIZED_NAME_EMPLOYEE_I_D = "employeeID";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_I_D)
  private String employeeID;

  public static final String SERIALIZED_NAME_COMPANY_I_D = "companyID";
  @SerializedName(SERIALIZED_NAME_COMPANY_I_D)
  private String companyID;

  public static final String SERIALIZED_NAME_ANNUAL_SALARY = "annualSalary";
  @SerializedName(SERIALIZED_NAME_ANNUAL_SALARY)
  private Double annualSalary;

  public static final String SERIALIZED_NAME_HOURLY_PAY_RATE = "hourlyPayRate";
  @SerializedName(SERIALIZED_NAME_HOURLY_PAY_RATE)
  private Double hourlyPayRate;

  public static final String SERIALIZED_NAME_WEEKLY_PAY_RATE = "weeklyPayRate";
  @SerializedName(SERIALIZED_NAME_WEEKLY_PAY_RATE)
  private Double weeklyPayRate;

  public static final String SERIALIZED_NAME_PAY_PERIOD_PAY_RATE = "payPeriodPayRate";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD_PAY_RATE)
  private Double payPeriodPayRate;

  public static final String SERIALIZED_NAME_CURRENCY_CODE = "currencyCode";
  @SerializedName(SERIALIZED_NAME_CURRENCY_CODE)
  private String currencyCode;

  public static final String SERIALIZED_NAME_OTHER_RATE1 = "otherRate1";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE1)
  private Double otherRate1;

  public static final String SERIALIZED_NAME_OTHER_RATE2 = "otherRate2";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE2)
  private Double otherRate2;

  public static final String SERIALIZED_NAME_OTHER_RATE3 = "otherRate3";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE3)
  private Double otherRate3;

  public static final String SERIALIZED_NAME_OTHER_RATE4 = "otherRate4";
  @SerializedName(SERIALIZED_NAME_OTHER_RATE4)
  private Double otherRate4;

  public static final String SERIALIZED_NAME_PAY_GROUP_DESCRIPTION = "payGroupDescription";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP_DESCRIPTION)
  private String payGroupDescription;

  public static final String SERIALIZED_NAME_PIECE_PAY_RATE = "piecePayRate";
  @SerializedName(SERIALIZED_NAME_PIECE_PAY_RATE)
  private Double piecePayRate;

  public static final String SERIALIZED_NAME_PRIMARY_JOB_CODE = "primaryJobCode";
  @SerializedName(SERIALIZED_NAME_PRIMARY_JOB_CODE)
  private String primaryJobCode;

  public static final String SERIALIZED_NAME_JOB_SALARY_GRADE = "jobSalaryGrade";
  @SerializedName(SERIALIZED_NAME_JOB_SALARY_GRADE)
  private String jobSalaryGrade;

  public static final String SERIALIZED_NAME_JOB_CHANGE_REASON_CODE = "jobChangeReasonCode";
  @SerializedName(SERIALIZED_NAME_JOB_CHANGE_REASON_CODE)
  private String jobChangeReasonCode;

  public static final String SERIALIZED_NAME_JOB_GROUP_CODE = "jobGroupCode";
  @SerializedName(SERIALIZED_NAME_JOB_GROUP_CODE)
  private String jobGroupCode;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_DATE_IN_JOB = "dateInJob";
  @SerializedName(SERIALIZED_NAME_DATE_IN_JOB)
  private OffsetDateTime dateInJob;

  public static final String SERIALIZED_NAME_DATE_LAST_PAID = "dateLastPaid";
  @SerializedName(SERIALIZED_NAME_DATE_LAST_PAID)
  private OffsetDateTime dateLastPaid;

  public static final String SERIALIZED_NAME_DATE_LAST_WORKED = "dateLastWorked";
  @SerializedName(SERIALIZED_NAME_DATE_LAST_WORKED)
  private OffsetDateTime dateLastWorked;

  public static final String SERIALIZED_NAME_DATE_OF_LAST_SALARY_REVIEW = "dateOfLastSalaryReview";
  @SerializedName(SERIALIZED_NAME_DATE_OF_LAST_SALARY_REVIEW)
  private OffsetDateTime dateOfLastSalaryReview;

  public static final String SERIALIZED_NAME_DATE_OF_NEXT_SALAYR_REVIEW = "dateOfNextSalayrReview";
  @SerializedName(SERIALIZED_NAME_DATE_OF_NEXT_SALAYR_REVIEW)
  private OffsetDateTime dateOfNextSalayrReview;

  public static final String SERIALIZED_NAME_IS_AUTO_ALLOCATED = "isAutoAllocated";
  @SerializedName(SERIALIZED_NAME_IS_AUTO_ALLOCATED)
  private Boolean isAutoAllocated;

  public static final String SERIALIZED_NAME_IS_AUTO_PAID = "isAutoPaid";
  @SerializedName(SERIALIZED_NAME_IS_AUTO_PAID)
  private Boolean isAutoPaid;

  public static final String SERIALIZED_NAME_IS_SEASONAL_WORKER = "isSeasonalWorker";
  @SerializedName(SERIALIZED_NAME_IS_SEASONAL_WORKER)
  private Boolean isSeasonalWorker;

  public static final String SERIALIZED_NAME_IS_HIGHLY_COMPENSATED = "isHighlyCompensated";
  @SerializedName(SERIALIZED_NAME_IS_HIGHLY_COMPENSATED)
  private Boolean isHighlyCompensated;

  public static final String SERIALIZED_NAME_IS_MULTIPLE_JOB = "isMultipleJob";
  @SerializedName(SERIALIZED_NAME_IS_MULTIPLE_JOB)
  private Boolean isMultipleJob;

  public static final String SERIALIZED_NAME_PAY_GROUP_CODE = "payGroupCode";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP_CODE)
  private String payGroupCode;

  public static final String SERIALIZED_NAME_PAY_PERIOD = "payPeriod";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD)
  private String payPeriod;

  public static final String SERIALIZED_NAME_PAY_SCALE_CODE = "payScaleCode";
  @SerializedName(SERIALIZED_NAME_PAY_SCALE_CODE)
  private String payScaleCode;

  public static final String SERIALIZED_NAME_SALARY_OR_HOURLY_CODE = "salaryOrHourlyCode";
  @SerializedName(SERIALIZED_NAME_SALARY_OR_HOURLY_CODE)
  private String salaryOrHourlyCode;

  public static final String SERIALIZED_NAME_FULL_TIME_OR_PART_TIME_CODE = "fullTimeOrPartTimeCode";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_OR_PART_TIME_CODE)
  private String fullTimeOrPartTimeCode;

  public static final String SERIALIZED_NAME_SCHEDULED_FULL_TIME_EQUIVALENCY = "scheduledFullTimeEquivalency";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_FULL_TIME_EQUIVALENCY)
  private Double scheduledFullTimeEquivalency;

  public static final String SERIALIZED_NAME_SCHEDULED_PERIOD_WORK_HOURS = "scheduledPeriodWorkHours";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_PERIOD_WORK_HOURS)
  private Double scheduledPeriodWorkHours;

  public static final String SERIALIZED_NAME_SCHEDULED_ANNUAL_WORK_HOURS = "scheduledAnnualWorkHours";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ANNUAL_WORK_HOURS)
  private Double scheduledAnnualWorkHours;

  public static final String SERIALIZED_NAME_WEEKLY_HOURS = "weeklyHours";
  @SerializedName(SERIALIZED_NAME_WEEKLY_HOURS)
  private Double weeklyHours;

  public static final String SERIALIZED_NAME_PRIMARY_SHIFT_CODE = "primaryShiftCode";
  @SerializedName(SERIALIZED_NAME_PRIMARY_SHIFT_CODE)
  private String primaryShiftCode;

  public static final String SERIALIZED_NAME_PRIMARY_SHIFT_GROUP_CODE = "primaryShiftGroupCode";
  @SerializedName(SERIALIZED_NAME_PRIMARY_SHIFT_GROUP_CODE)
  private String primaryShiftGroupCode;

  public static final String SERIALIZED_NAME_AVG_PAY_RATE_CUR_PER = "avgPayRateCurPer";
  @SerializedName(SERIALIZED_NAME_AVG_PAY_RATE_CUR_PER)
  private Float avgPayRateCurPer;

  public static final String SERIALIZED_NAME_BONUS_TOTAL_HRS = "bonusTotalHrs";
  @SerializedName(SERIALIZED_NAME_BONUS_TOTAL_HRS)
  private Float bonusTotalHrs;

  public static final String SERIALIZED_NAME_BONUS_TOTAL_OT_HRS = "bonusTotalOtHrs";
  @SerializedName(SERIALIZED_NAME_BONUS_TOTAL_OT_HRS)
  private Float bonusTotalOtHrs;

  public static final String SERIALIZED_NAME_DATE_PAID_THRU = "datePaidThru";
  @SerializedName(SERIALIZED_NAME_DATE_PAID_THRU)
  private OffsetDateTime datePaidThru;

  public static final String SERIALIZED_NAME_EMPL_STATUS = "emplStatus";
  @SerializedName(SERIALIZED_NAME_EMPL_STATUS)
  private String emplStatus;

  public static final String SERIALIZED_NAME_TOTAL_ANN_SALARY = "totalAnnSalary";
  @SerializedName(SERIALIZED_NAME_TOTAL_ANN_SALARY)
  private Float totalAnnSalary;

  public static final String SERIALIZED_NAME_DISTRIBUTION_CENTER_CODE = "distributionCenterCode";
  @SerializedName(SERIALIZED_NAME_DISTRIBUTION_CENTER_CODE)
  private String distributionCenterCode;

  public static final String SERIALIZED_NAME_NUMBER_OF_PAYMENTS = "numberOfPayments";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_PAYMENTS)
  private Integer numberOfPayments;

  public static final String SERIALIZED_NAME_PERFORMANCE_REVIEW_RATING = "performanceReviewRating";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_REVIEW_RATING)
  private String performanceReviewRating;

  public static final String SERIALIZED_NAME_PERFORMANCE_REVIEW_TYPE = "performanceReviewType";
  @SerializedName(SERIALIZED_NAME_PERFORMANCE_REVIEW_TYPE)
  private String performanceReviewType;

  public EmpCompensationDetails() {
  }

  public EmpCompensationDetails employeeID(String employeeID) {
    
    
    
    
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Get employeeID
   * @return employeeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeID() {
    return employeeID;
  }


  public void setEmployeeID(String employeeID) {
    
    
    
    this.employeeID = employeeID;
  }


  public EmpCompensationDetails companyID(String companyID) {
    
    
    
    
    this.companyID = companyID;
    return this;
  }

   /**
   * Get companyID
   * @return companyID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyID() {
    return companyID;
  }


  public void setCompanyID(String companyID) {
    
    
    
    this.companyID = companyID;
  }


  public EmpCompensationDetails annualSalary(Double annualSalary) {
    
    
    
    
    this.annualSalary = annualSalary;
    return this;
  }

   /**
   * Get annualSalary
   * @return annualSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getAnnualSalary() {
    return annualSalary;
  }


  public void setAnnualSalary(Double annualSalary) {
    
    
    
    this.annualSalary = annualSalary;
  }


  public EmpCompensationDetails hourlyPayRate(Double hourlyPayRate) {
    
    
    
    
    this.hourlyPayRate = hourlyPayRate;
    return this;
  }

   /**
   * Get hourlyPayRate
   * @return hourlyPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHourlyPayRate() {
    return hourlyPayRate;
  }


  public void setHourlyPayRate(Double hourlyPayRate) {
    
    
    
    this.hourlyPayRate = hourlyPayRate;
  }


  public EmpCompensationDetails weeklyPayRate(Double weeklyPayRate) {
    
    
    
    
    this.weeklyPayRate = weeklyPayRate;
    return this;
  }

   /**
   * Get weeklyPayRate
   * @return weeklyPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeeklyPayRate() {
    return weeklyPayRate;
  }


  public void setWeeklyPayRate(Double weeklyPayRate) {
    
    
    
    this.weeklyPayRate = weeklyPayRate;
  }


  public EmpCompensationDetails payPeriodPayRate(Double payPeriodPayRate) {
    
    
    
    
    this.payPeriodPayRate = payPeriodPayRate;
    return this;
  }

   /**
   * Get payPeriodPayRate
   * @return payPeriodPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPayPeriodPayRate() {
    return payPeriodPayRate;
  }


  public void setPayPeriodPayRate(Double payPeriodPayRate) {
    
    
    
    this.payPeriodPayRate = payPeriodPayRate;
  }


  public EmpCompensationDetails currencyCode(String currencyCode) {
    
    
    
    
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCurrencyCode() {
    return currencyCode;
  }


  public void setCurrencyCode(String currencyCode) {
    
    
    
    this.currencyCode = currencyCode;
  }


  public EmpCompensationDetails otherRate1(Double otherRate1) {
    
    
    
    
    this.otherRate1 = otherRate1;
    return this;
  }

   /**
   * Get otherRate1
   * @return otherRate1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate1() {
    return otherRate1;
  }


  public void setOtherRate1(Double otherRate1) {
    
    
    
    this.otherRate1 = otherRate1;
  }


  public EmpCompensationDetails otherRate2(Double otherRate2) {
    
    
    
    
    this.otherRate2 = otherRate2;
    return this;
  }

   /**
   * Get otherRate2
   * @return otherRate2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate2() {
    return otherRate2;
  }


  public void setOtherRate2(Double otherRate2) {
    
    
    
    this.otherRate2 = otherRate2;
  }


  public EmpCompensationDetails otherRate3(Double otherRate3) {
    
    
    
    
    this.otherRate3 = otherRate3;
    return this;
  }

   /**
   * Get otherRate3
   * @return otherRate3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate3() {
    return otherRate3;
  }


  public void setOtherRate3(Double otherRate3) {
    
    
    
    this.otherRate3 = otherRate3;
  }


  public EmpCompensationDetails otherRate4(Double otherRate4) {
    
    
    
    
    this.otherRate4 = otherRate4;
    return this;
  }

   /**
   * Get otherRate4
   * @return otherRate4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getOtherRate4() {
    return otherRate4;
  }


  public void setOtherRate4(Double otherRate4) {
    
    
    
    this.otherRate4 = otherRate4;
  }


  public EmpCompensationDetails payGroupDescription(String payGroupDescription) {
    
    
    
    
    this.payGroupDescription = payGroupDescription;
    return this;
  }

   /**
   * Get payGroupDescription
   * @return payGroupDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroupDescription() {
    return payGroupDescription;
  }


  public void setPayGroupDescription(String payGroupDescription) {
    
    
    
    this.payGroupDescription = payGroupDescription;
  }


  public EmpCompensationDetails piecePayRate(Double piecePayRate) {
    
    
    
    
    this.piecePayRate = piecePayRate;
    return this;
  }

   /**
   * Get piecePayRate
   * @return piecePayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPiecePayRate() {
    return piecePayRate;
  }


  public void setPiecePayRate(Double piecePayRate) {
    
    
    
    this.piecePayRate = piecePayRate;
  }


  public EmpCompensationDetails primaryJobCode(String primaryJobCode) {
    
    
    
    
    this.primaryJobCode = primaryJobCode;
    return this;
  }

   /**
   * Get primaryJobCode
   * @return primaryJobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryJobCode() {
    return primaryJobCode;
  }


  public void setPrimaryJobCode(String primaryJobCode) {
    
    
    
    this.primaryJobCode = primaryJobCode;
  }


  public EmpCompensationDetails jobSalaryGrade(String jobSalaryGrade) {
    
    
    
    
    this.jobSalaryGrade = jobSalaryGrade;
    return this;
  }

   /**
   * Get jobSalaryGrade
   * @return jobSalaryGrade
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobSalaryGrade() {
    return jobSalaryGrade;
  }


  public void setJobSalaryGrade(String jobSalaryGrade) {
    
    
    
    this.jobSalaryGrade = jobSalaryGrade;
  }


  public EmpCompensationDetails jobChangeReasonCode(String jobChangeReasonCode) {
    
    
    
    
    this.jobChangeReasonCode = jobChangeReasonCode;
    return this;
  }

   /**
   * Get jobChangeReasonCode
   * @return jobChangeReasonCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobChangeReasonCode() {
    return jobChangeReasonCode;
  }


  public void setJobChangeReasonCode(String jobChangeReasonCode) {
    
    
    
    this.jobChangeReasonCode = jobChangeReasonCode;
  }


  public EmpCompensationDetails jobGroupCode(String jobGroupCode) {
    
    
    
    
    this.jobGroupCode = jobGroupCode;
    return this;
  }

   /**
   * Get jobGroupCode
   * @return jobGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobGroupCode() {
    return jobGroupCode;
  }


  public void setJobGroupCode(String jobGroupCode) {
    
    
    
    this.jobGroupCode = jobGroupCode;
  }


  public EmpCompensationDetails jobTitle(String jobTitle) {
    
    
    
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * Get jobTitle
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    
    
    
    this.jobTitle = jobTitle;
  }


  public EmpCompensationDetails dateInJob(OffsetDateTime dateInJob) {
    
    
    
    
    this.dateInJob = dateInJob;
    return this;
  }

   /**
   * Get dateInJob
   * @return dateInJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateInJob() {
    return dateInJob;
  }


  public void setDateInJob(OffsetDateTime dateInJob) {
    
    
    
    this.dateInJob = dateInJob;
  }


  public EmpCompensationDetails dateLastPaid(OffsetDateTime dateLastPaid) {
    
    
    
    
    this.dateLastPaid = dateLastPaid;
    return this;
  }

   /**
   * Get dateLastPaid
   * @return dateLastPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateLastPaid() {
    return dateLastPaid;
  }


  public void setDateLastPaid(OffsetDateTime dateLastPaid) {
    
    
    
    this.dateLastPaid = dateLastPaid;
  }


  public EmpCompensationDetails dateLastWorked(OffsetDateTime dateLastWorked) {
    
    
    
    
    this.dateLastWorked = dateLastWorked;
    return this;
  }

   /**
   * Get dateLastWorked
   * @return dateLastWorked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateLastWorked() {
    return dateLastWorked;
  }


  public void setDateLastWorked(OffsetDateTime dateLastWorked) {
    
    
    
    this.dateLastWorked = dateLastWorked;
  }


  public EmpCompensationDetails dateOfLastSalaryReview(OffsetDateTime dateOfLastSalaryReview) {
    
    
    
    
    this.dateOfLastSalaryReview = dateOfLastSalaryReview;
    return this;
  }

   /**
   * Get dateOfLastSalaryReview
   * @return dateOfLastSalaryReview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfLastSalaryReview() {
    return dateOfLastSalaryReview;
  }


  public void setDateOfLastSalaryReview(OffsetDateTime dateOfLastSalaryReview) {
    
    
    
    this.dateOfLastSalaryReview = dateOfLastSalaryReview;
  }


  public EmpCompensationDetails dateOfNextSalayrReview(OffsetDateTime dateOfNextSalayrReview) {
    
    
    
    
    this.dateOfNextSalayrReview = dateOfNextSalayrReview;
    return this;
  }

   /**
   * Get dateOfNextSalayrReview
   * @return dateOfNextSalayrReview
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfNextSalayrReview() {
    return dateOfNextSalayrReview;
  }


  public void setDateOfNextSalayrReview(OffsetDateTime dateOfNextSalayrReview) {
    
    
    
    this.dateOfNextSalayrReview = dateOfNextSalayrReview;
  }


  public EmpCompensationDetails isAutoAllocated(Boolean isAutoAllocated) {
    
    
    
    
    this.isAutoAllocated = isAutoAllocated;
    return this;
  }

   /**
   * Get isAutoAllocated
   * @return isAutoAllocated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAutoAllocated() {
    return isAutoAllocated;
  }


  public void setIsAutoAllocated(Boolean isAutoAllocated) {
    
    
    
    this.isAutoAllocated = isAutoAllocated;
  }


  public EmpCompensationDetails isAutoPaid(Boolean isAutoPaid) {
    
    
    
    
    this.isAutoPaid = isAutoPaid;
    return this;
  }

   /**
   * Get isAutoPaid
   * @return isAutoPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsAutoPaid() {
    return isAutoPaid;
  }


  public void setIsAutoPaid(Boolean isAutoPaid) {
    
    
    
    this.isAutoPaid = isAutoPaid;
  }


  public EmpCompensationDetails isSeasonalWorker(Boolean isSeasonalWorker) {
    
    
    
    
    this.isSeasonalWorker = isSeasonalWorker;
    return this;
  }

   /**
   * Get isSeasonalWorker
   * @return isSeasonalWorker
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsSeasonalWorker() {
    return isSeasonalWorker;
  }


  public void setIsSeasonalWorker(Boolean isSeasonalWorker) {
    
    
    
    this.isSeasonalWorker = isSeasonalWorker;
  }


  public EmpCompensationDetails isHighlyCompensated(Boolean isHighlyCompensated) {
    
    
    
    
    this.isHighlyCompensated = isHighlyCompensated;
    return this;
  }

   /**
   * Get isHighlyCompensated
   * @return isHighlyCompensated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsHighlyCompensated() {
    return isHighlyCompensated;
  }


  public void setIsHighlyCompensated(Boolean isHighlyCompensated) {
    
    
    
    this.isHighlyCompensated = isHighlyCompensated;
  }


  public EmpCompensationDetails isMultipleJob(Boolean isMultipleJob) {
    
    
    
    
    this.isMultipleJob = isMultipleJob;
    return this;
  }

   /**
   * Get isMultipleJob
   * @return isMultipleJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsMultipleJob() {
    return isMultipleJob;
  }


  public void setIsMultipleJob(Boolean isMultipleJob) {
    
    
    
    this.isMultipleJob = isMultipleJob;
  }


  public EmpCompensationDetails payGroupCode(String payGroupCode) {
    
    
    
    
    this.payGroupCode = payGroupCode;
    return this;
  }

   /**
   * Get payGroupCode
   * @return payGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroupCode() {
    return payGroupCode;
  }


  public void setPayGroupCode(String payGroupCode) {
    
    
    
    this.payGroupCode = payGroupCode;
  }


  public EmpCompensationDetails payPeriod(String payPeriod) {
    
    
    
    
    this.payPeriod = payPeriod;
    return this;
  }

   /**
   * Get payPeriod
   * @return payPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayPeriod() {
    return payPeriod;
  }


  public void setPayPeriod(String payPeriod) {
    
    
    
    this.payPeriod = payPeriod;
  }


  public EmpCompensationDetails payScaleCode(String payScaleCode) {
    
    
    
    
    this.payScaleCode = payScaleCode;
    return this;
  }

   /**
   * Get payScaleCode
   * @return payScaleCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayScaleCode() {
    return payScaleCode;
  }


  public void setPayScaleCode(String payScaleCode) {
    
    
    
    this.payScaleCode = payScaleCode;
  }


  public EmpCompensationDetails salaryOrHourlyCode(String salaryOrHourlyCode) {
    
    
    
    
    this.salaryOrHourlyCode = salaryOrHourlyCode;
    return this;
  }

   /**
   * Get salaryOrHourlyCode
   * @return salaryOrHourlyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSalaryOrHourlyCode() {
    return salaryOrHourlyCode;
  }


  public void setSalaryOrHourlyCode(String salaryOrHourlyCode) {
    
    
    
    this.salaryOrHourlyCode = salaryOrHourlyCode;
  }


  public EmpCompensationDetails fullTimeOrPartTimeCode(String fullTimeOrPartTimeCode) {
    
    
    
    
    this.fullTimeOrPartTimeCode = fullTimeOrPartTimeCode;
    return this;
  }

   /**
   * Get fullTimeOrPartTimeCode
   * @return fullTimeOrPartTimeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullTimeOrPartTimeCode() {
    return fullTimeOrPartTimeCode;
  }


  public void setFullTimeOrPartTimeCode(String fullTimeOrPartTimeCode) {
    
    
    
    this.fullTimeOrPartTimeCode = fullTimeOrPartTimeCode;
  }


  public EmpCompensationDetails scheduledFullTimeEquivalency(Double scheduledFullTimeEquivalency) {
    
    
    
    
    this.scheduledFullTimeEquivalency = scheduledFullTimeEquivalency;
    return this;
  }

   /**
   * Get scheduledFullTimeEquivalency
   * @return scheduledFullTimeEquivalency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledFullTimeEquivalency() {
    return scheduledFullTimeEquivalency;
  }


  public void setScheduledFullTimeEquivalency(Double scheduledFullTimeEquivalency) {
    
    
    
    this.scheduledFullTimeEquivalency = scheduledFullTimeEquivalency;
  }


  public EmpCompensationDetails scheduledPeriodWorkHours(Double scheduledPeriodWorkHours) {
    
    
    
    
    this.scheduledPeriodWorkHours = scheduledPeriodWorkHours;
    return this;
  }

   /**
   * Get scheduledPeriodWorkHours
   * @return scheduledPeriodWorkHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledPeriodWorkHours() {
    return scheduledPeriodWorkHours;
  }


  public void setScheduledPeriodWorkHours(Double scheduledPeriodWorkHours) {
    
    
    
    this.scheduledPeriodWorkHours = scheduledPeriodWorkHours;
  }


  public EmpCompensationDetails scheduledAnnualWorkHours(Double scheduledAnnualWorkHours) {
    
    
    
    
    this.scheduledAnnualWorkHours = scheduledAnnualWorkHours;
    return this;
  }

   /**
   * Get scheduledAnnualWorkHours
   * @return scheduledAnnualWorkHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledAnnualWorkHours() {
    return scheduledAnnualWorkHours;
  }


  public void setScheduledAnnualWorkHours(Double scheduledAnnualWorkHours) {
    
    
    
    this.scheduledAnnualWorkHours = scheduledAnnualWorkHours;
  }


  public EmpCompensationDetails weeklyHours(Double weeklyHours) {
    
    
    
    
    this.weeklyHours = weeklyHours;
    return this;
  }

   /**
   * Get weeklyHours
   * @return weeklyHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeeklyHours() {
    return weeklyHours;
  }


  public void setWeeklyHours(Double weeklyHours) {
    
    
    
    this.weeklyHours = weeklyHours;
  }


  public EmpCompensationDetails primaryShiftCode(String primaryShiftCode) {
    
    
    
    
    this.primaryShiftCode = primaryShiftCode;
    return this;
  }

   /**
   * Get primaryShiftCode
   * @return primaryShiftCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryShiftCode() {
    return primaryShiftCode;
  }


  public void setPrimaryShiftCode(String primaryShiftCode) {
    
    
    
    this.primaryShiftCode = primaryShiftCode;
  }


  public EmpCompensationDetails primaryShiftGroupCode(String primaryShiftGroupCode) {
    
    
    
    
    this.primaryShiftGroupCode = primaryShiftGroupCode;
    return this;
  }

   /**
   * Get primaryShiftGroupCode
   * @return primaryShiftGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryShiftGroupCode() {
    return primaryShiftGroupCode;
  }


  public void setPrimaryShiftGroupCode(String primaryShiftGroupCode) {
    
    
    
    this.primaryShiftGroupCode = primaryShiftGroupCode;
  }


  public EmpCompensationDetails avgPayRateCurPer(Float avgPayRateCurPer) {
    
    
    
    
    this.avgPayRateCurPer = avgPayRateCurPer;
    return this;
  }

   /**
   * Get avgPayRateCurPer
   * @return avgPayRateCurPer
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getAvgPayRateCurPer() {
    return avgPayRateCurPer;
  }


  public void setAvgPayRateCurPer(Float avgPayRateCurPer) {
    
    
    
    this.avgPayRateCurPer = avgPayRateCurPer;
  }


  public EmpCompensationDetails bonusTotalHrs(Float bonusTotalHrs) {
    
    
    
    
    this.bonusTotalHrs = bonusTotalHrs;
    return this;
  }

   /**
   * Get bonusTotalHrs
   * @return bonusTotalHrs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getBonusTotalHrs() {
    return bonusTotalHrs;
  }


  public void setBonusTotalHrs(Float bonusTotalHrs) {
    
    
    
    this.bonusTotalHrs = bonusTotalHrs;
  }


  public EmpCompensationDetails bonusTotalOtHrs(Float bonusTotalOtHrs) {
    
    
    
    
    this.bonusTotalOtHrs = bonusTotalOtHrs;
    return this;
  }

   /**
   * Get bonusTotalOtHrs
   * @return bonusTotalOtHrs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getBonusTotalOtHrs() {
    return bonusTotalOtHrs;
  }


  public void setBonusTotalOtHrs(Float bonusTotalOtHrs) {
    
    
    
    this.bonusTotalOtHrs = bonusTotalOtHrs;
  }


  public EmpCompensationDetails datePaidThru(OffsetDateTime datePaidThru) {
    
    
    
    
    this.datePaidThru = datePaidThru;
    return this;
  }

   /**
   * Get datePaidThru
   * @return datePaidThru
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDatePaidThru() {
    return datePaidThru;
  }


  public void setDatePaidThru(OffsetDateTime datePaidThru) {
    
    
    
    this.datePaidThru = datePaidThru;
  }


  public EmpCompensationDetails emplStatus(String emplStatus) {
    
    
    
    
    this.emplStatus = emplStatus;
    return this;
  }

   /**
   * Get emplStatus
   * @return emplStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmplStatus() {
    return emplStatus;
  }


  public void setEmplStatus(String emplStatus) {
    
    
    
    this.emplStatus = emplStatus;
  }


  public EmpCompensationDetails totalAnnSalary(Float totalAnnSalary) {
    
    
    
    
    this.totalAnnSalary = totalAnnSalary;
    return this;
  }

   /**
   * Get totalAnnSalary
   * @return totalAnnSalary
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getTotalAnnSalary() {
    return totalAnnSalary;
  }


  public void setTotalAnnSalary(Float totalAnnSalary) {
    
    
    
    this.totalAnnSalary = totalAnnSalary;
  }


  public EmpCompensationDetails distributionCenterCode(String distributionCenterCode) {
    
    
    
    
    this.distributionCenterCode = distributionCenterCode;
    return this;
  }

   /**
   * Get distributionCenterCode
   * @return distributionCenterCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDistributionCenterCode() {
    return distributionCenterCode;
  }


  public void setDistributionCenterCode(String distributionCenterCode) {
    
    
    
    this.distributionCenterCode = distributionCenterCode;
  }


  public EmpCompensationDetails numberOfPayments(Integer numberOfPayments) {
    
    
    
    
    this.numberOfPayments = numberOfPayments;
    return this;
  }

   /**
   * Get numberOfPayments
   * @return numberOfPayments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNumberOfPayments() {
    return numberOfPayments;
  }


  public void setNumberOfPayments(Integer numberOfPayments) {
    
    
    
    this.numberOfPayments = numberOfPayments;
  }


  public EmpCompensationDetails performanceReviewRating(String performanceReviewRating) {
    
    
    
    
    this.performanceReviewRating = performanceReviewRating;
    return this;
  }

   /**
   * Get performanceReviewRating
   * @return performanceReviewRating
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPerformanceReviewRating() {
    return performanceReviewRating;
  }


  public void setPerformanceReviewRating(String performanceReviewRating) {
    
    
    
    this.performanceReviewRating = performanceReviewRating;
  }


  public EmpCompensationDetails performanceReviewType(String performanceReviewType) {
    
    
    
    
    this.performanceReviewType = performanceReviewType;
    return this;
  }

   /**
   * Get performanceReviewType
   * @return performanceReviewType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPerformanceReviewType() {
    return performanceReviewType;
  }


  public void setPerformanceReviewType(String performanceReviewType) {
    
    
    
    this.performanceReviewType = performanceReviewType;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmpCompensationDetails instance itself
   */
  public EmpCompensationDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmpCompensationDetails empCompensationDetails = (EmpCompensationDetails) o;
    return Objects.equals(this.employeeID, empCompensationDetails.employeeID) &&
        Objects.equals(this.companyID, empCompensationDetails.companyID) &&
        Objects.equals(this.annualSalary, empCompensationDetails.annualSalary) &&
        Objects.equals(this.hourlyPayRate, empCompensationDetails.hourlyPayRate) &&
        Objects.equals(this.weeklyPayRate, empCompensationDetails.weeklyPayRate) &&
        Objects.equals(this.payPeriodPayRate, empCompensationDetails.payPeriodPayRate) &&
        Objects.equals(this.currencyCode, empCompensationDetails.currencyCode) &&
        Objects.equals(this.otherRate1, empCompensationDetails.otherRate1) &&
        Objects.equals(this.otherRate2, empCompensationDetails.otherRate2) &&
        Objects.equals(this.otherRate3, empCompensationDetails.otherRate3) &&
        Objects.equals(this.otherRate4, empCompensationDetails.otherRate4) &&
        Objects.equals(this.payGroupDescription, empCompensationDetails.payGroupDescription) &&
        Objects.equals(this.piecePayRate, empCompensationDetails.piecePayRate) &&
        Objects.equals(this.primaryJobCode, empCompensationDetails.primaryJobCode) &&
        Objects.equals(this.jobSalaryGrade, empCompensationDetails.jobSalaryGrade) &&
        Objects.equals(this.jobChangeReasonCode, empCompensationDetails.jobChangeReasonCode) &&
        Objects.equals(this.jobGroupCode, empCompensationDetails.jobGroupCode) &&
        Objects.equals(this.jobTitle, empCompensationDetails.jobTitle) &&
        Objects.equals(this.dateInJob, empCompensationDetails.dateInJob) &&
        Objects.equals(this.dateLastPaid, empCompensationDetails.dateLastPaid) &&
        Objects.equals(this.dateLastWorked, empCompensationDetails.dateLastWorked) &&
        Objects.equals(this.dateOfLastSalaryReview, empCompensationDetails.dateOfLastSalaryReview) &&
        Objects.equals(this.dateOfNextSalayrReview, empCompensationDetails.dateOfNextSalayrReview) &&
        Objects.equals(this.isAutoAllocated, empCompensationDetails.isAutoAllocated) &&
        Objects.equals(this.isAutoPaid, empCompensationDetails.isAutoPaid) &&
        Objects.equals(this.isSeasonalWorker, empCompensationDetails.isSeasonalWorker) &&
        Objects.equals(this.isHighlyCompensated, empCompensationDetails.isHighlyCompensated) &&
        Objects.equals(this.isMultipleJob, empCompensationDetails.isMultipleJob) &&
        Objects.equals(this.payGroupCode, empCompensationDetails.payGroupCode) &&
        Objects.equals(this.payPeriod, empCompensationDetails.payPeriod) &&
        Objects.equals(this.payScaleCode, empCompensationDetails.payScaleCode) &&
        Objects.equals(this.salaryOrHourlyCode, empCompensationDetails.salaryOrHourlyCode) &&
        Objects.equals(this.fullTimeOrPartTimeCode, empCompensationDetails.fullTimeOrPartTimeCode) &&
        Objects.equals(this.scheduledFullTimeEquivalency, empCompensationDetails.scheduledFullTimeEquivalency) &&
        Objects.equals(this.scheduledPeriodWorkHours, empCompensationDetails.scheduledPeriodWorkHours) &&
        Objects.equals(this.scheduledAnnualWorkHours, empCompensationDetails.scheduledAnnualWorkHours) &&
        Objects.equals(this.weeklyHours, empCompensationDetails.weeklyHours) &&
        Objects.equals(this.primaryShiftCode, empCompensationDetails.primaryShiftCode) &&
        Objects.equals(this.primaryShiftGroupCode, empCompensationDetails.primaryShiftGroupCode) &&
        Objects.equals(this.avgPayRateCurPer, empCompensationDetails.avgPayRateCurPer) &&
        Objects.equals(this.bonusTotalHrs, empCompensationDetails.bonusTotalHrs) &&
        Objects.equals(this.bonusTotalOtHrs, empCompensationDetails.bonusTotalOtHrs) &&
        Objects.equals(this.datePaidThru, empCompensationDetails.datePaidThru) &&
        Objects.equals(this.emplStatus, empCompensationDetails.emplStatus) &&
        Objects.equals(this.totalAnnSalary, empCompensationDetails.totalAnnSalary) &&
        Objects.equals(this.distributionCenterCode, empCompensationDetails.distributionCenterCode) &&
        Objects.equals(this.numberOfPayments, empCompensationDetails.numberOfPayments) &&
        Objects.equals(this.performanceReviewRating, empCompensationDetails.performanceReviewRating) &&
        Objects.equals(this.performanceReviewType, empCompensationDetails.performanceReviewType)&&
        Objects.equals(this.additionalProperties, empCompensationDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeID, companyID, annualSalary, hourlyPayRate, weeklyPayRate, payPeriodPayRate, currencyCode, otherRate1, otherRate2, otherRate3, otherRate4, payGroupDescription, piecePayRate, primaryJobCode, jobSalaryGrade, jobChangeReasonCode, jobGroupCode, jobTitle, dateInJob, dateLastPaid, dateLastWorked, dateOfLastSalaryReview, dateOfNextSalayrReview, isAutoAllocated, isAutoPaid, isSeasonalWorker, isHighlyCompensated, isMultipleJob, payGroupCode, payPeriod, payScaleCode, salaryOrHourlyCode, fullTimeOrPartTimeCode, scheduledFullTimeEquivalency, scheduledPeriodWorkHours, scheduledAnnualWorkHours, weeklyHours, primaryShiftCode, primaryShiftGroupCode, avgPayRateCurPer, bonusTotalHrs, bonusTotalOtHrs, datePaidThru, emplStatus, totalAnnSalary, distributionCenterCode, numberOfPayments, performanceReviewRating, performanceReviewType, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmpCompensationDetails {\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    companyID: ").append(toIndentedString(companyID)).append("\n");
    sb.append("    annualSalary: ").append(toIndentedString(annualSalary)).append("\n");
    sb.append("    hourlyPayRate: ").append(toIndentedString(hourlyPayRate)).append("\n");
    sb.append("    weeklyPayRate: ").append(toIndentedString(weeklyPayRate)).append("\n");
    sb.append("    payPeriodPayRate: ").append(toIndentedString(payPeriodPayRate)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    otherRate1: ").append(toIndentedString(otherRate1)).append("\n");
    sb.append("    otherRate2: ").append(toIndentedString(otherRate2)).append("\n");
    sb.append("    otherRate3: ").append(toIndentedString(otherRate3)).append("\n");
    sb.append("    otherRate4: ").append(toIndentedString(otherRate4)).append("\n");
    sb.append("    payGroupDescription: ").append(toIndentedString(payGroupDescription)).append("\n");
    sb.append("    piecePayRate: ").append(toIndentedString(piecePayRate)).append("\n");
    sb.append("    primaryJobCode: ").append(toIndentedString(primaryJobCode)).append("\n");
    sb.append("    jobSalaryGrade: ").append(toIndentedString(jobSalaryGrade)).append("\n");
    sb.append("    jobChangeReasonCode: ").append(toIndentedString(jobChangeReasonCode)).append("\n");
    sb.append("    jobGroupCode: ").append(toIndentedString(jobGroupCode)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    dateInJob: ").append(toIndentedString(dateInJob)).append("\n");
    sb.append("    dateLastPaid: ").append(toIndentedString(dateLastPaid)).append("\n");
    sb.append("    dateLastWorked: ").append(toIndentedString(dateLastWorked)).append("\n");
    sb.append("    dateOfLastSalaryReview: ").append(toIndentedString(dateOfLastSalaryReview)).append("\n");
    sb.append("    dateOfNextSalayrReview: ").append(toIndentedString(dateOfNextSalayrReview)).append("\n");
    sb.append("    isAutoAllocated: ").append(toIndentedString(isAutoAllocated)).append("\n");
    sb.append("    isAutoPaid: ").append(toIndentedString(isAutoPaid)).append("\n");
    sb.append("    isSeasonalWorker: ").append(toIndentedString(isSeasonalWorker)).append("\n");
    sb.append("    isHighlyCompensated: ").append(toIndentedString(isHighlyCompensated)).append("\n");
    sb.append("    isMultipleJob: ").append(toIndentedString(isMultipleJob)).append("\n");
    sb.append("    payGroupCode: ").append(toIndentedString(payGroupCode)).append("\n");
    sb.append("    payPeriod: ").append(toIndentedString(payPeriod)).append("\n");
    sb.append("    payScaleCode: ").append(toIndentedString(payScaleCode)).append("\n");
    sb.append("    salaryOrHourlyCode: ").append(toIndentedString(salaryOrHourlyCode)).append("\n");
    sb.append("    fullTimeOrPartTimeCode: ").append(toIndentedString(fullTimeOrPartTimeCode)).append("\n");
    sb.append("    scheduledFullTimeEquivalency: ").append(toIndentedString(scheduledFullTimeEquivalency)).append("\n");
    sb.append("    scheduledPeriodWorkHours: ").append(toIndentedString(scheduledPeriodWorkHours)).append("\n");
    sb.append("    scheduledAnnualWorkHours: ").append(toIndentedString(scheduledAnnualWorkHours)).append("\n");
    sb.append("    weeklyHours: ").append(toIndentedString(weeklyHours)).append("\n");
    sb.append("    primaryShiftCode: ").append(toIndentedString(primaryShiftCode)).append("\n");
    sb.append("    primaryShiftGroupCode: ").append(toIndentedString(primaryShiftGroupCode)).append("\n");
    sb.append("    avgPayRateCurPer: ").append(toIndentedString(avgPayRateCurPer)).append("\n");
    sb.append("    bonusTotalHrs: ").append(toIndentedString(bonusTotalHrs)).append("\n");
    sb.append("    bonusTotalOtHrs: ").append(toIndentedString(bonusTotalOtHrs)).append("\n");
    sb.append("    datePaidThru: ").append(toIndentedString(datePaidThru)).append("\n");
    sb.append("    emplStatus: ").append(toIndentedString(emplStatus)).append("\n");
    sb.append("    totalAnnSalary: ").append(toIndentedString(totalAnnSalary)).append("\n");
    sb.append("    distributionCenterCode: ").append(toIndentedString(distributionCenterCode)).append("\n");
    sb.append("    numberOfPayments: ").append(toIndentedString(numberOfPayments)).append("\n");
    sb.append("    performanceReviewRating: ").append(toIndentedString(performanceReviewRating)).append("\n");
    sb.append("    performanceReviewType: ").append(toIndentedString(performanceReviewType)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("employeeID");
    openapiFields.add("companyID");
    openapiFields.add("annualSalary");
    openapiFields.add("hourlyPayRate");
    openapiFields.add("weeklyPayRate");
    openapiFields.add("payPeriodPayRate");
    openapiFields.add("currencyCode");
    openapiFields.add("otherRate1");
    openapiFields.add("otherRate2");
    openapiFields.add("otherRate3");
    openapiFields.add("otherRate4");
    openapiFields.add("payGroupDescription");
    openapiFields.add("piecePayRate");
    openapiFields.add("primaryJobCode");
    openapiFields.add("jobSalaryGrade");
    openapiFields.add("jobChangeReasonCode");
    openapiFields.add("jobGroupCode");
    openapiFields.add("jobTitle");
    openapiFields.add("dateInJob");
    openapiFields.add("dateLastPaid");
    openapiFields.add("dateLastWorked");
    openapiFields.add("dateOfLastSalaryReview");
    openapiFields.add("dateOfNextSalayrReview");
    openapiFields.add("isAutoAllocated");
    openapiFields.add("isAutoPaid");
    openapiFields.add("isSeasonalWorker");
    openapiFields.add("isHighlyCompensated");
    openapiFields.add("isMultipleJob");
    openapiFields.add("payGroupCode");
    openapiFields.add("payPeriod");
    openapiFields.add("payScaleCode");
    openapiFields.add("salaryOrHourlyCode");
    openapiFields.add("fullTimeOrPartTimeCode");
    openapiFields.add("scheduledFullTimeEquivalency");
    openapiFields.add("scheduledPeriodWorkHours");
    openapiFields.add("scheduledAnnualWorkHours");
    openapiFields.add("weeklyHours");
    openapiFields.add("primaryShiftCode");
    openapiFields.add("primaryShiftGroupCode");
    openapiFields.add("avgPayRateCurPer");
    openapiFields.add("bonusTotalHrs");
    openapiFields.add("bonusTotalOtHrs");
    openapiFields.add("datePaidThru");
    openapiFields.add("emplStatus");
    openapiFields.add("totalAnnSalary");
    openapiFields.add("distributionCenterCode");
    openapiFields.add("numberOfPayments");
    openapiFields.add("performanceReviewRating");
    openapiFields.add("performanceReviewType");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmpCompensationDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmpCompensationDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmpCompensationDetails is not found in the empty JSON string", EmpCompensationDetails.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("employeeID") != null && !jsonObj.get("employeeID").isJsonNull()) && !jsonObj.get("employeeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeID").toString()));
      }
      if ((jsonObj.get("companyID") != null && !jsonObj.get("companyID").isJsonNull()) && !jsonObj.get("companyID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyID").toString()));
      }
      if ((jsonObj.get("currencyCode") != null && !jsonObj.get("currencyCode").isJsonNull()) && !jsonObj.get("currencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currencyCode").toString()));
      }
      if ((jsonObj.get("payGroupDescription") != null && !jsonObj.get("payGroupDescription").isJsonNull()) && !jsonObj.get("payGroupDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroupDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroupDescription").toString()));
      }
      if ((jsonObj.get("primaryJobCode") != null && !jsonObj.get("primaryJobCode").isJsonNull()) && !jsonObj.get("primaryJobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryJobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryJobCode").toString()));
      }
      if ((jsonObj.get("jobSalaryGrade") != null && !jsonObj.get("jobSalaryGrade").isJsonNull()) && !jsonObj.get("jobSalaryGrade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobSalaryGrade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobSalaryGrade").toString()));
      }
      if ((jsonObj.get("jobChangeReasonCode") != null && !jsonObj.get("jobChangeReasonCode").isJsonNull()) && !jsonObj.get("jobChangeReasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobChangeReasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobChangeReasonCode").toString()));
      }
      if ((jsonObj.get("jobGroupCode") != null && !jsonObj.get("jobGroupCode").isJsonNull()) && !jsonObj.get("jobGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobGroupCode").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if ((jsonObj.get("payGroupCode") != null && !jsonObj.get("payGroupCode").isJsonNull()) && !jsonObj.get("payGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroupCode").toString()));
      }
      if ((jsonObj.get("payPeriod") != null && !jsonObj.get("payPeriod").isJsonNull()) && !jsonObj.get("payPeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payPeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payPeriod").toString()));
      }
      if ((jsonObj.get("payScaleCode") != null && !jsonObj.get("payScaleCode").isJsonNull()) && !jsonObj.get("payScaleCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payScaleCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payScaleCode").toString()));
      }
      if ((jsonObj.get("salaryOrHourlyCode") != null && !jsonObj.get("salaryOrHourlyCode").isJsonNull()) && !jsonObj.get("salaryOrHourlyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salaryOrHourlyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salaryOrHourlyCode").toString()));
      }
      if ((jsonObj.get("fullTimeOrPartTimeCode") != null && !jsonObj.get("fullTimeOrPartTimeCode").isJsonNull()) && !jsonObj.get("fullTimeOrPartTimeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullTimeOrPartTimeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullTimeOrPartTimeCode").toString()));
      }
      if ((jsonObj.get("primaryShiftCode") != null && !jsonObj.get("primaryShiftCode").isJsonNull()) && !jsonObj.get("primaryShiftCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryShiftCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryShiftCode").toString()));
      }
      if ((jsonObj.get("primaryShiftGroupCode") != null && !jsonObj.get("primaryShiftGroupCode").isJsonNull()) && !jsonObj.get("primaryShiftGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryShiftGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryShiftGroupCode").toString()));
      }
      if ((jsonObj.get("emplStatus") != null && !jsonObj.get("emplStatus").isJsonNull()) && !jsonObj.get("emplStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emplStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emplStatus").toString()));
      }
      if ((jsonObj.get("distributionCenterCode") != null && !jsonObj.get("distributionCenterCode").isJsonNull()) && !jsonObj.get("distributionCenterCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `distributionCenterCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("distributionCenterCode").toString()));
      }
      if ((jsonObj.get("performanceReviewRating") != null && !jsonObj.get("performanceReviewRating").isJsonNull()) && !jsonObj.get("performanceReviewRating").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `performanceReviewRating` to be a primitive type in the JSON string but got `%s`", jsonObj.get("performanceReviewRating").toString()));
      }
      if ((jsonObj.get("performanceReviewType") != null && !jsonObj.get("performanceReviewType").isJsonNull()) && !jsonObj.get("performanceReviewType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `performanceReviewType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("performanceReviewType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmpCompensationDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmpCompensationDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmpCompensationDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmpCompensationDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<EmpCompensationDetails>() {
           @Override
           public void write(JsonWriter out, EmpCompensationDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmpCompensationDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmpCompensationDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmpCompensationDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmpCompensationDetails
  * @throws IOException if the JSON string is invalid with respect to EmpCompensationDetails
  */
  public static EmpCompensationDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmpCompensationDetails.class);
  }

 /**
  * Convert an instance of EmpCompensationDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

