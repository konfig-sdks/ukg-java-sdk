/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * PayGroupPayPeriods
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class PayGroupPayPeriods {
  public static final String SERIALIZED_NAME_IS_ACTIVE = "isActive";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE)
  private Boolean isActive;

  public static final String SERIALIZED_NAME_DATE_TIME_CHANGED = "dateTimeChanged";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_CHANGED)
  private OffsetDateTime dateTimeChanged;

  public static final String SERIALIZED_NAME_DATE_TIME_CREATED = "dateTimeCreated";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_CREATED)
  private OffsetDateTime dateTimeCreated;

  public static final String SERIALIZED_NAME_DATE_TIME_FISCAL_END_DONE = "dateTimeFiscalEndDone";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_FISCAL_END_DONE)
  private OffsetDateTime dateTimeFiscalEndDone;

  public static final String SERIALIZED_NAME_DATE_TIME_PERIOD_CLOSED = "dateTimePeriodClosed";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_PERIOD_CLOSED)
  private OffsetDateTime dateTimePeriodClosed;

  public static final String SERIALIZED_NAME_DATE_TIME_PERIOD_OPENED = "dateTimePeriodOpened";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_PERIOD_OPENED)
  private OffsetDateTime dateTimePeriodOpened;

  public static final String SERIALIZED_NAME_FISCAL_YEAR_END = "fiscalYearEnd";
  @SerializedName(SERIALIZED_NAME_FISCAL_YEAR_END)
  private Boolean fiscalYearEnd;

  public static final String SERIALIZED_NAME_IS_CTS_CREATED = "isCtsCreated";
  @SerializedName(SERIALIZED_NAME_IS_CTS_CREATED)
  private Boolean isCtsCreated;

  public static final String SERIALIZED_NAME_IS_PERIOD_CLOSED = "isPeriodClosed";
  @SerializedName(SERIALIZED_NAME_IS_PERIOD_CLOSED)
  private Boolean isPeriodClosed;

  public static final String SERIALIZED_NAME_IS_QTDOB_PER_CONTROL = "isQtdobPerControl";
  @SerializedName(SERIALIZED_NAME_IS_QTDOB_PER_CONTROL)
  private Boolean isQtdobPerControl;

  public static final String SERIALIZED_NAME_IS_YTDOB_PER_CONTROL = "isYtdobPerControl";
  @SerializedName(SERIALIZED_NAME_IS_YTDOB_PER_CONTROL)
  private Boolean isYtdobPerControl;

  public static final String SERIALIZED_NAME_MONTHLY_PAY_PERIOD_NUMBER = "monthlyPayPeriodNumber";
  @SerializedName(SERIALIZED_NAME_MONTHLY_PAY_PERIOD_NUMBER)
  private Integer monthlyPayPeriodNumber;

  public static final String SERIALIZED_NAME_MQY_END_FLAG = "mqyEndFlag";
  @SerializedName(SERIALIZED_NAME_MQY_END_FLAG)
  private String mqyEndFlag;

  public static final String SERIALIZED_NAME_OB_TYPE = "obType";
  @SerializedName(SERIALIZED_NAME_OB_TYPE)
  private String obType;

  public static final String SERIALIZED_NAME_PAY_DATE = "payDate";
  @SerializedName(SERIALIZED_NAME_PAY_DATE)
  private OffsetDateTime payDate;

  public static final String SERIALIZED_NAME_PAY_DATE_SEQ = "payDateSeq";
  @SerializedName(SERIALIZED_NAME_PAY_DATE_SEQ)
  private Integer payDateSeq;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private String payGroup;

  public static final String SERIALIZED_NAME_PAY_PERIOD_ID = "payPeriodId";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD_ID)
  private Integer payPeriodId;

  public static final String SERIALIZED_NAME_PERIOD_CONTROL = "periodControl";
  @SerializedName(SERIALIZED_NAME_PERIOD_CONTROL)
  private String periodControl;

  public static final String SERIALIZED_NAME_PERIOD_END_DATE = "periodEndDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_END_DATE)
  private OffsetDateTime periodEndDate;

  public static final String SERIALIZED_NAME_PERIOD_START_DATE = "periodStartDate";
  @SerializedName(SERIALIZED_NAME_PERIOD_START_DATE)
  private OffsetDateTime periodStartDate;

  public static final String SERIALIZED_NAME_PERIOD_TYPE = "periodType";
  @SerializedName(SERIALIZED_NAME_PERIOD_TYPE)
  private String periodType;

  public static final String SERIALIZED_NAME_SUSP_AUTO_PAY = "suspAutoPay";
  @SerializedName(SERIALIZED_NAME_SUSP_AUTO_PAY)
  private String suspAutoPay;

  public static final String SERIALIZED_NAME_SUSP_DIRECT_DEPOSIT = "suspDirectDeposit";
  @SerializedName(SERIALIZED_NAME_SUSP_DIRECT_DEPOSIT)
  private String suspDirectDeposit;

  public static final String SERIALIZED_NAME_USER_ID_CHANGED = "userIdChanged";
  @SerializedName(SERIALIZED_NAME_USER_ID_CHANGED)
  private String userIdChanged;

  public static final String SERIALIZED_NAME_USER_ID_CREATED = "userIdCreated";
  @SerializedName(SERIALIZED_NAME_USER_ID_CREATED)
  private String userIdCreated;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_AUDIT_KEY = "auditKey";
  @SerializedName(SERIALIZED_NAME_AUDIT_KEY)
  private Integer auditKey;

  public static final String SERIALIZED_NAME_PAYROLL_STATE_ID = "payrollStateId";
  @SerializedName(SERIALIZED_NAME_PAYROLL_STATE_ID)
  private Integer payrollStateId;

  public static final String SERIALIZED_NAME_COMBINE_NACHA_FILE_NAME = "combineNachaFileName";
  @SerializedName(SERIALIZED_NAME_COMBINE_NACHA_FILE_NAME)
  private String combineNachaFileName;

  public static final String SERIALIZED_NAME_COMBINE_NACHA_FILE_OVERRIDE = "combineNachaFileOverride";
  @SerializedName(SERIALIZED_NAME_COMBINE_NACHA_FILE_OVERRIDE)
  private Boolean combineNachaFileOverride;

  public static final String SERIALIZED_NAME_TX_FIL_APP_DATE_TIME = "txFilAppDateTime";
  @SerializedName(SERIALIZED_NAME_TX_FIL_APP_DATE_TIME)
  private OffsetDateTime txFilAppDateTime;

  public static final String SERIALIZED_NAME_TX_FIL_APP_USER_ID = "txFilAppUserId";
  @SerializedName(SERIALIZED_NAME_TX_FIL_APP_USER_ID)
  private Integer txFilAppUserId;

  public static final String SERIALIZED_NAME_ALLOW_WEB_PYRL_AFTER_YE_RECON = "allowWebPyrlAfterYeRecon";
  @SerializedName(SERIALIZED_NAME_ALLOW_WEB_PYRL_AFTER_YE_RECON)
  private Boolean allowWebPyrlAfterYeRecon;

  public static final String SERIALIZED_NAME_PAYROLL_CHANGE_FLAGS = "payrollChangeFlags";
  @SerializedName(SERIALIZED_NAME_PAYROLL_CHANGE_FLAGS)
  private Integer payrollChangeFlags;

  public static final String SERIALIZED_NAME_PAYROLL_TRANSITION_FLAGS = "payrollTransitionFlags";
  @SerializedName(SERIALIZED_NAME_PAYROLL_TRANSITION_FLAGS)
  private Integer payrollTransitionFlags;

  public static final String SERIALIZED_NAME_INSTANT_CHECK_MOVE_RULE = "instantCheckMoveRule";
  @SerializedName(SERIALIZED_NAME_INSTANT_CHECK_MOVE_RULE)
  private Boolean instantCheckMoveRule;

  public static final String SERIALIZED_NAME_BRING_IN_PAYROLL_BATCH_LOAD = "bringInPayrollBatchLoad";
  @SerializedName(SERIALIZED_NAME_BRING_IN_PAYROLL_BATCH_LOAD)
  private Boolean bringInPayrollBatchLoad;

  public static final String SERIALIZED_NAME_BRING_IN_PPI_LOAD = "bringInPpiLoad";
  @SerializedName(SERIALIZED_NAME_BRING_IN_PPI_LOAD)
  private Boolean bringInPpiLoad;

  public static final String SERIALIZED_NAME_BRING_IN_RETRO_PAY_LOAD = "bringInRetroPayLoad";
  @SerializedName(SERIALIZED_NAME_BRING_IN_RETRO_PAY_LOAD)
  private Boolean bringInRetroPayLoad;

  public static final String SERIALIZED_NAME_LMW_ACTIVE = "lmwActive";
  @SerializedName(SERIALIZED_NAME_LMW_ACTIVE)
  private Boolean lmwActive;

  public static final String SERIALIZED_NAME_ROE_PAY_DATE = "roePayDate";
  @SerializedName(SERIALIZED_NAME_ROE_PAY_DATE)
  private OffsetDateTime roePayDate;

  public static final String SERIALIZED_NAME_TAX_ARREARS_COLLECT_ENABLED = "taxArrearsCollectEnabled";
  @SerializedName(SERIALIZED_NAME_TAX_ARREARS_COLLECT_ENABLED)
  private Boolean taxArrearsCollectEnabled;

  public PayGroupPayPeriods() {
  }

  public PayGroupPayPeriods isActive(Boolean isActive) {
    
    
    
    
    this.isActive = isActive;
    return this;
  }

   /**
   * Get isActive
   * @return isActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsActive() {
    return isActive;
  }


  public void setIsActive(Boolean isActive) {
    
    
    
    this.isActive = isActive;
  }


  public PayGroupPayPeriods dateTimeChanged(OffsetDateTime dateTimeChanged) {
    
    
    
    
    this.dateTimeChanged = dateTimeChanged;
    return this;
  }

   /**
   * Get dateTimeChanged
   * @return dateTimeChanged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeChanged() {
    return dateTimeChanged;
  }


  public void setDateTimeChanged(OffsetDateTime dateTimeChanged) {
    
    
    
    this.dateTimeChanged = dateTimeChanged;
  }


  public PayGroupPayPeriods dateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    
    this.dateTimeCreated = dateTimeCreated;
    return this;
  }

   /**
   * Get dateTimeCreated
   * @return dateTimeCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeCreated() {
    return dateTimeCreated;
  }


  public void setDateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    this.dateTimeCreated = dateTimeCreated;
  }


  public PayGroupPayPeriods dateTimeFiscalEndDone(OffsetDateTime dateTimeFiscalEndDone) {
    
    
    
    
    this.dateTimeFiscalEndDone = dateTimeFiscalEndDone;
    return this;
  }

   /**
   * Get dateTimeFiscalEndDone
   * @return dateTimeFiscalEndDone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeFiscalEndDone() {
    return dateTimeFiscalEndDone;
  }


  public void setDateTimeFiscalEndDone(OffsetDateTime dateTimeFiscalEndDone) {
    
    
    
    this.dateTimeFiscalEndDone = dateTimeFiscalEndDone;
  }


  public PayGroupPayPeriods dateTimePeriodClosed(OffsetDateTime dateTimePeriodClosed) {
    
    
    
    
    this.dateTimePeriodClosed = dateTimePeriodClosed;
    return this;
  }

   /**
   * Get dateTimePeriodClosed
   * @return dateTimePeriodClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimePeriodClosed() {
    return dateTimePeriodClosed;
  }


  public void setDateTimePeriodClosed(OffsetDateTime dateTimePeriodClosed) {
    
    
    
    this.dateTimePeriodClosed = dateTimePeriodClosed;
  }


  public PayGroupPayPeriods dateTimePeriodOpened(OffsetDateTime dateTimePeriodOpened) {
    
    
    
    
    this.dateTimePeriodOpened = dateTimePeriodOpened;
    return this;
  }

   /**
   * Get dateTimePeriodOpened
   * @return dateTimePeriodOpened
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimePeriodOpened() {
    return dateTimePeriodOpened;
  }


  public void setDateTimePeriodOpened(OffsetDateTime dateTimePeriodOpened) {
    
    
    
    this.dateTimePeriodOpened = dateTimePeriodOpened;
  }


  public PayGroupPayPeriods fiscalYearEnd(Boolean fiscalYearEnd) {
    
    
    
    
    this.fiscalYearEnd = fiscalYearEnd;
    return this;
  }

   /**
   * Get fiscalYearEnd
   * @return fiscalYearEnd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getFiscalYearEnd() {
    return fiscalYearEnd;
  }


  public void setFiscalYearEnd(Boolean fiscalYearEnd) {
    
    
    
    this.fiscalYearEnd = fiscalYearEnd;
  }


  public PayGroupPayPeriods isCtsCreated(Boolean isCtsCreated) {
    
    
    
    
    this.isCtsCreated = isCtsCreated;
    return this;
  }

   /**
   * Get isCtsCreated
   * @return isCtsCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsCtsCreated() {
    return isCtsCreated;
  }


  public void setIsCtsCreated(Boolean isCtsCreated) {
    
    
    
    this.isCtsCreated = isCtsCreated;
  }


  public PayGroupPayPeriods isPeriodClosed(Boolean isPeriodClosed) {
    
    
    
    
    this.isPeriodClosed = isPeriodClosed;
    return this;
  }

   /**
   * Get isPeriodClosed
   * @return isPeriodClosed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsPeriodClosed() {
    return isPeriodClosed;
  }


  public void setIsPeriodClosed(Boolean isPeriodClosed) {
    
    
    
    this.isPeriodClosed = isPeriodClosed;
  }


  public PayGroupPayPeriods isQtdobPerControl(Boolean isQtdobPerControl) {
    
    
    
    
    this.isQtdobPerControl = isQtdobPerControl;
    return this;
  }

   /**
   * Get isQtdobPerControl
   * @return isQtdobPerControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsQtdobPerControl() {
    return isQtdobPerControl;
  }


  public void setIsQtdobPerControl(Boolean isQtdobPerControl) {
    
    
    
    this.isQtdobPerControl = isQtdobPerControl;
  }


  public PayGroupPayPeriods isYtdobPerControl(Boolean isYtdobPerControl) {
    
    
    
    
    this.isYtdobPerControl = isYtdobPerControl;
    return this;
  }

   /**
   * Get isYtdobPerControl
   * @return isYtdobPerControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsYtdobPerControl() {
    return isYtdobPerControl;
  }


  public void setIsYtdobPerControl(Boolean isYtdobPerControl) {
    
    
    
    this.isYtdobPerControl = isYtdobPerControl;
  }


  public PayGroupPayPeriods monthlyPayPeriodNumber(Integer monthlyPayPeriodNumber) {
    
    
    
    
    this.monthlyPayPeriodNumber = monthlyPayPeriodNumber;
    return this;
  }

   /**
   * Get monthlyPayPeriodNumber
   * @return monthlyPayPeriodNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getMonthlyPayPeriodNumber() {
    return monthlyPayPeriodNumber;
  }


  public void setMonthlyPayPeriodNumber(Integer monthlyPayPeriodNumber) {
    
    
    
    this.monthlyPayPeriodNumber = monthlyPayPeriodNumber;
  }


  public PayGroupPayPeriods mqyEndFlag(String mqyEndFlag) {
    
    
    
    
    this.mqyEndFlag = mqyEndFlag;
    return this;
  }

   /**
   * Get mqyEndFlag
   * @return mqyEndFlag
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMqyEndFlag() {
    return mqyEndFlag;
  }


  public void setMqyEndFlag(String mqyEndFlag) {
    
    
    
    this.mqyEndFlag = mqyEndFlag;
  }


  public PayGroupPayPeriods obType(String obType) {
    
    
    
    
    this.obType = obType;
    return this;
  }

   /**
   * Get obType
   * @return obType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getObType() {
    return obType;
  }


  public void setObType(String obType) {
    
    
    
    this.obType = obType;
  }


  public PayGroupPayPeriods payDate(OffsetDateTime payDate) {
    
    
    
    
    this.payDate = payDate;
    return this;
  }

   /**
   * Get payDate
   * @return payDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPayDate() {
    return payDate;
  }


  public void setPayDate(OffsetDateTime payDate) {
    
    
    
    this.payDate = payDate;
  }


  public PayGroupPayPeriods payDateSeq(Integer payDateSeq) {
    
    
    
    
    this.payDateSeq = payDateSeq;
    return this;
  }

   /**
   * Get payDateSeq
   * @return payDateSeq
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPayDateSeq() {
    return payDateSeq;
  }


  public void setPayDateSeq(Integer payDateSeq) {
    
    
    
    this.payDateSeq = payDateSeq;
  }


  public PayGroupPayPeriods payGroup(String payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(String payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public PayGroupPayPeriods payPeriodId(Integer payPeriodId) {
    
    
    
    
    this.payPeriodId = payPeriodId;
    return this;
  }

   /**
   * Get payPeriodId
   * @return payPeriodId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPayPeriodId() {
    return payPeriodId;
  }


  public void setPayPeriodId(Integer payPeriodId) {
    
    
    
    this.payPeriodId = payPeriodId;
  }


  public PayGroupPayPeriods periodControl(String periodControl) {
    
    
    
    
    this.periodControl = periodControl;
    return this;
  }

   /**
   * Get periodControl
   * @return periodControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodControl() {
    return periodControl;
  }


  public void setPeriodControl(String periodControl) {
    
    
    
    this.periodControl = periodControl;
  }


  public PayGroupPayPeriods periodEndDate(OffsetDateTime periodEndDate) {
    
    
    
    
    this.periodEndDate = periodEndDate;
    return this;
  }

   /**
   * Get periodEndDate
   * @return periodEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPeriodEndDate() {
    return periodEndDate;
  }


  public void setPeriodEndDate(OffsetDateTime periodEndDate) {
    
    
    
    this.periodEndDate = periodEndDate;
  }


  public PayGroupPayPeriods periodStartDate(OffsetDateTime periodStartDate) {
    
    
    
    
    this.periodStartDate = periodStartDate;
    return this;
  }

   /**
   * Get periodStartDate
   * @return periodStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPeriodStartDate() {
    return periodStartDate;
  }


  public void setPeriodStartDate(OffsetDateTime periodStartDate) {
    
    
    
    this.periodStartDate = periodStartDate;
  }


  public PayGroupPayPeriods periodType(String periodType) {
    
    
    
    
    this.periodType = periodType;
    return this;
  }

   /**
   * Get periodType
   * @return periodType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodType() {
    return periodType;
  }


  public void setPeriodType(String periodType) {
    
    
    
    this.periodType = periodType;
  }


  public PayGroupPayPeriods suspAutoPay(String suspAutoPay) {
    
    
    
    
    this.suspAutoPay = suspAutoPay;
    return this;
  }

   /**
   * Get suspAutoPay
   * @return suspAutoPay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSuspAutoPay() {
    return suspAutoPay;
  }


  public void setSuspAutoPay(String suspAutoPay) {
    
    
    
    this.suspAutoPay = suspAutoPay;
  }


  public PayGroupPayPeriods suspDirectDeposit(String suspDirectDeposit) {
    
    
    
    
    this.suspDirectDeposit = suspDirectDeposit;
    return this;
  }

   /**
   * Get suspDirectDeposit
   * @return suspDirectDeposit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSuspDirectDeposit() {
    return suspDirectDeposit;
  }


  public void setSuspDirectDeposit(String suspDirectDeposit) {
    
    
    
    this.suspDirectDeposit = suspDirectDeposit;
  }


  public PayGroupPayPeriods userIdChanged(String userIdChanged) {
    
    
    
    
    this.userIdChanged = userIdChanged;
    return this;
  }

   /**
   * Get userIdChanged
   * @return userIdChanged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserIdChanged() {
    return userIdChanged;
  }


  public void setUserIdChanged(String userIdChanged) {
    
    
    
    this.userIdChanged = userIdChanged;
  }


  public PayGroupPayPeriods userIdCreated(String userIdCreated) {
    
    
    
    
    this.userIdCreated = userIdCreated;
    return this;
  }

   /**
   * Get userIdCreated
   * @return userIdCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUserIdCreated() {
    return userIdCreated;
  }


  public void setUserIdCreated(String userIdCreated) {
    
    
    
    this.userIdCreated = userIdCreated;
  }


  public PayGroupPayPeriods notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public PayGroupPayPeriods auditKey(Integer auditKey) {
    
    
    
    
    this.auditKey = auditKey;
    return this;
  }

   /**
   * Get auditKey
   * @return auditKey
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getAuditKey() {
    return auditKey;
  }


  public void setAuditKey(Integer auditKey) {
    
    
    
    this.auditKey = auditKey;
  }


  public PayGroupPayPeriods payrollStateId(Integer payrollStateId) {
    
    
    
    
    this.payrollStateId = payrollStateId;
    return this;
  }

   /**
   * Get payrollStateId
   * @return payrollStateId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPayrollStateId() {
    return payrollStateId;
  }


  public void setPayrollStateId(Integer payrollStateId) {
    
    
    
    this.payrollStateId = payrollStateId;
  }


  public PayGroupPayPeriods combineNachaFileName(String combineNachaFileName) {
    
    
    
    
    this.combineNachaFileName = combineNachaFileName;
    return this;
  }

   /**
   * Get combineNachaFileName
   * @return combineNachaFileName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCombineNachaFileName() {
    return combineNachaFileName;
  }


  public void setCombineNachaFileName(String combineNachaFileName) {
    
    
    
    this.combineNachaFileName = combineNachaFileName;
  }


  public PayGroupPayPeriods combineNachaFileOverride(Boolean combineNachaFileOverride) {
    
    
    
    
    this.combineNachaFileOverride = combineNachaFileOverride;
    return this;
  }

   /**
   * Get combineNachaFileOverride
   * @return combineNachaFileOverride
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getCombineNachaFileOverride() {
    return combineNachaFileOverride;
  }


  public void setCombineNachaFileOverride(Boolean combineNachaFileOverride) {
    
    
    
    this.combineNachaFileOverride = combineNachaFileOverride;
  }


  public PayGroupPayPeriods txFilAppDateTime(OffsetDateTime txFilAppDateTime) {
    
    
    
    
    this.txFilAppDateTime = txFilAppDateTime;
    return this;
  }

   /**
   * Get txFilAppDateTime
   * @return txFilAppDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getTxFilAppDateTime() {
    return txFilAppDateTime;
  }


  public void setTxFilAppDateTime(OffsetDateTime txFilAppDateTime) {
    
    
    
    this.txFilAppDateTime = txFilAppDateTime;
  }


  public PayGroupPayPeriods txFilAppUserId(Integer txFilAppUserId) {
    
    
    
    
    this.txFilAppUserId = txFilAppUserId;
    return this;
  }

   /**
   * Get txFilAppUserId
   * @return txFilAppUserId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getTxFilAppUserId() {
    return txFilAppUserId;
  }


  public void setTxFilAppUserId(Integer txFilAppUserId) {
    
    
    
    this.txFilAppUserId = txFilAppUserId;
  }


  public PayGroupPayPeriods allowWebPyrlAfterYeRecon(Boolean allowWebPyrlAfterYeRecon) {
    
    
    
    
    this.allowWebPyrlAfterYeRecon = allowWebPyrlAfterYeRecon;
    return this;
  }

   /**
   * Get allowWebPyrlAfterYeRecon
   * @return allowWebPyrlAfterYeRecon
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAllowWebPyrlAfterYeRecon() {
    return allowWebPyrlAfterYeRecon;
  }


  public void setAllowWebPyrlAfterYeRecon(Boolean allowWebPyrlAfterYeRecon) {
    
    
    
    this.allowWebPyrlAfterYeRecon = allowWebPyrlAfterYeRecon;
  }


  public PayGroupPayPeriods payrollChangeFlags(Integer payrollChangeFlags) {
    
    
    
    
    this.payrollChangeFlags = payrollChangeFlags;
    return this;
  }

   /**
   * Get payrollChangeFlags
   * @return payrollChangeFlags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPayrollChangeFlags() {
    return payrollChangeFlags;
  }


  public void setPayrollChangeFlags(Integer payrollChangeFlags) {
    
    
    
    this.payrollChangeFlags = payrollChangeFlags;
  }


  public PayGroupPayPeriods payrollTransitionFlags(Integer payrollTransitionFlags) {
    
    
    
    
    this.payrollTransitionFlags = payrollTransitionFlags;
    return this;
  }

   /**
   * Get payrollTransitionFlags
   * @return payrollTransitionFlags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPayrollTransitionFlags() {
    return payrollTransitionFlags;
  }


  public void setPayrollTransitionFlags(Integer payrollTransitionFlags) {
    
    
    
    this.payrollTransitionFlags = payrollTransitionFlags;
  }


  public PayGroupPayPeriods instantCheckMoveRule(Boolean instantCheckMoveRule) {
    
    
    
    
    this.instantCheckMoveRule = instantCheckMoveRule;
    return this;
  }

   /**
   * Get instantCheckMoveRule
   * @return instantCheckMoveRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getInstantCheckMoveRule() {
    return instantCheckMoveRule;
  }


  public void setInstantCheckMoveRule(Boolean instantCheckMoveRule) {
    
    
    
    this.instantCheckMoveRule = instantCheckMoveRule;
  }


  public PayGroupPayPeriods bringInPayrollBatchLoad(Boolean bringInPayrollBatchLoad) {
    
    
    
    
    this.bringInPayrollBatchLoad = bringInPayrollBatchLoad;
    return this;
  }

   /**
   * Get bringInPayrollBatchLoad
   * @return bringInPayrollBatchLoad
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBringInPayrollBatchLoad() {
    return bringInPayrollBatchLoad;
  }


  public void setBringInPayrollBatchLoad(Boolean bringInPayrollBatchLoad) {
    
    
    
    this.bringInPayrollBatchLoad = bringInPayrollBatchLoad;
  }


  public PayGroupPayPeriods bringInPpiLoad(Boolean bringInPpiLoad) {
    
    
    
    
    this.bringInPpiLoad = bringInPpiLoad;
    return this;
  }

   /**
   * Get bringInPpiLoad
   * @return bringInPpiLoad
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBringInPpiLoad() {
    return bringInPpiLoad;
  }


  public void setBringInPpiLoad(Boolean bringInPpiLoad) {
    
    
    
    this.bringInPpiLoad = bringInPpiLoad;
  }


  public PayGroupPayPeriods bringInRetroPayLoad(Boolean bringInRetroPayLoad) {
    
    
    
    
    this.bringInRetroPayLoad = bringInRetroPayLoad;
    return this;
  }

   /**
   * Get bringInRetroPayLoad
   * @return bringInRetroPayLoad
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getBringInRetroPayLoad() {
    return bringInRetroPayLoad;
  }


  public void setBringInRetroPayLoad(Boolean bringInRetroPayLoad) {
    
    
    
    this.bringInRetroPayLoad = bringInRetroPayLoad;
  }


  public PayGroupPayPeriods lmwActive(Boolean lmwActive) {
    
    
    
    
    this.lmwActive = lmwActive;
    return this;
  }

   /**
   * Get lmwActive
   * @return lmwActive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getLmwActive() {
    return lmwActive;
  }


  public void setLmwActive(Boolean lmwActive) {
    
    
    
    this.lmwActive = lmwActive;
  }


  public PayGroupPayPeriods roePayDate(OffsetDateTime roePayDate) {
    
    
    
    
    this.roePayDate = roePayDate;
    return this;
  }

   /**
   * Get roePayDate
   * @return roePayDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getRoePayDate() {
    return roePayDate;
  }


  public void setRoePayDate(OffsetDateTime roePayDate) {
    
    
    
    this.roePayDate = roePayDate;
  }


  public PayGroupPayPeriods taxArrearsCollectEnabled(Boolean taxArrearsCollectEnabled) {
    
    
    
    
    this.taxArrearsCollectEnabled = taxArrearsCollectEnabled;
    return this;
  }

   /**
   * Get taxArrearsCollectEnabled
   * @return taxArrearsCollectEnabled
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTaxArrearsCollectEnabled() {
    return taxArrearsCollectEnabled;
  }


  public void setTaxArrearsCollectEnabled(Boolean taxArrearsCollectEnabled) {
    
    
    
    this.taxArrearsCollectEnabled = taxArrearsCollectEnabled;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the PayGroupPayPeriods instance itself
   */
  public PayGroupPayPeriods putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayGroupPayPeriods payGroupPayPeriods = (PayGroupPayPeriods) o;
    return Objects.equals(this.isActive, payGroupPayPeriods.isActive) &&
        Objects.equals(this.dateTimeChanged, payGroupPayPeriods.dateTimeChanged) &&
        Objects.equals(this.dateTimeCreated, payGroupPayPeriods.dateTimeCreated) &&
        Objects.equals(this.dateTimeFiscalEndDone, payGroupPayPeriods.dateTimeFiscalEndDone) &&
        Objects.equals(this.dateTimePeriodClosed, payGroupPayPeriods.dateTimePeriodClosed) &&
        Objects.equals(this.dateTimePeriodOpened, payGroupPayPeriods.dateTimePeriodOpened) &&
        Objects.equals(this.fiscalYearEnd, payGroupPayPeriods.fiscalYearEnd) &&
        Objects.equals(this.isCtsCreated, payGroupPayPeriods.isCtsCreated) &&
        Objects.equals(this.isPeriodClosed, payGroupPayPeriods.isPeriodClosed) &&
        Objects.equals(this.isQtdobPerControl, payGroupPayPeriods.isQtdobPerControl) &&
        Objects.equals(this.isYtdobPerControl, payGroupPayPeriods.isYtdobPerControl) &&
        Objects.equals(this.monthlyPayPeriodNumber, payGroupPayPeriods.monthlyPayPeriodNumber) &&
        Objects.equals(this.mqyEndFlag, payGroupPayPeriods.mqyEndFlag) &&
        Objects.equals(this.obType, payGroupPayPeriods.obType) &&
        Objects.equals(this.payDate, payGroupPayPeriods.payDate) &&
        Objects.equals(this.payDateSeq, payGroupPayPeriods.payDateSeq) &&
        Objects.equals(this.payGroup, payGroupPayPeriods.payGroup) &&
        Objects.equals(this.payPeriodId, payGroupPayPeriods.payPeriodId) &&
        Objects.equals(this.periodControl, payGroupPayPeriods.periodControl) &&
        Objects.equals(this.periodEndDate, payGroupPayPeriods.periodEndDate) &&
        Objects.equals(this.periodStartDate, payGroupPayPeriods.periodStartDate) &&
        Objects.equals(this.periodType, payGroupPayPeriods.periodType) &&
        Objects.equals(this.suspAutoPay, payGroupPayPeriods.suspAutoPay) &&
        Objects.equals(this.suspDirectDeposit, payGroupPayPeriods.suspDirectDeposit) &&
        Objects.equals(this.userIdChanged, payGroupPayPeriods.userIdChanged) &&
        Objects.equals(this.userIdCreated, payGroupPayPeriods.userIdCreated) &&
        Objects.equals(this.notes, payGroupPayPeriods.notes) &&
        Objects.equals(this.auditKey, payGroupPayPeriods.auditKey) &&
        Objects.equals(this.payrollStateId, payGroupPayPeriods.payrollStateId) &&
        Objects.equals(this.combineNachaFileName, payGroupPayPeriods.combineNachaFileName) &&
        Objects.equals(this.combineNachaFileOverride, payGroupPayPeriods.combineNachaFileOverride) &&
        Objects.equals(this.txFilAppDateTime, payGroupPayPeriods.txFilAppDateTime) &&
        Objects.equals(this.txFilAppUserId, payGroupPayPeriods.txFilAppUserId) &&
        Objects.equals(this.allowWebPyrlAfterYeRecon, payGroupPayPeriods.allowWebPyrlAfterYeRecon) &&
        Objects.equals(this.payrollChangeFlags, payGroupPayPeriods.payrollChangeFlags) &&
        Objects.equals(this.payrollTransitionFlags, payGroupPayPeriods.payrollTransitionFlags) &&
        Objects.equals(this.instantCheckMoveRule, payGroupPayPeriods.instantCheckMoveRule) &&
        Objects.equals(this.bringInPayrollBatchLoad, payGroupPayPeriods.bringInPayrollBatchLoad) &&
        Objects.equals(this.bringInPpiLoad, payGroupPayPeriods.bringInPpiLoad) &&
        Objects.equals(this.bringInRetroPayLoad, payGroupPayPeriods.bringInRetroPayLoad) &&
        Objects.equals(this.lmwActive, payGroupPayPeriods.lmwActive) &&
        Objects.equals(this.roePayDate, payGroupPayPeriods.roePayDate) &&
        Objects.equals(this.taxArrearsCollectEnabled, payGroupPayPeriods.taxArrearsCollectEnabled)&&
        Objects.equals(this.additionalProperties, payGroupPayPeriods.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isActive, dateTimeChanged, dateTimeCreated, dateTimeFiscalEndDone, dateTimePeriodClosed, dateTimePeriodOpened, fiscalYearEnd, isCtsCreated, isPeriodClosed, isQtdobPerControl, isYtdobPerControl, monthlyPayPeriodNumber, mqyEndFlag, obType, payDate, payDateSeq, payGroup, payPeriodId, periodControl, periodEndDate, periodStartDate, periodType, suspAutoPay, suspDirectDeposit, userIdChanged, userIdCreated, notes, auditKey, payrollStateId, combineNachaFileName, combineNachaFileOverride, txFilAppDateTime, txFilAppUserId, allowWebPyrlAfterYeRecon, payrollChangeFlags, payrollTransitionFlags, instantCheckMoveRule, bringInPayrollBatchLoad, bringInPpiLoad, bringInRetroPayLoad, lmwActive, roePayDate, taxArrearsCollectEnabled, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayGroupPayPeriods {\n");
    sb.append("    isActive: ").append(toIndentedString(isActive)).append("\n");
    sb.append("    dateTimeChanged: ").append(toIndentedString(dateTimeChanged)).append("\n");
    sb.append("    dateTimeCreated: ").append(toIndentedString(dateTimeCreated)).append("\n");
    sb.append("    dateTimeFiscalEndDone: ").append(toIndentedString(dateTimeFiscalEndDone)).append("\n");
    sb.append("    dateTimePeriodClosed: ").append(toIndentedString(dateTimePeriodClosed)).append("\n");
    sb.append("    dateTimePeriodOpened: ").append(toIndentedString(dateTimePeriodOpened)).append("\n");
    sb.append("    fiscalYearEnd: ").append(toIndentedString(fiscalYearEnd)).append("\n");
    sb.append("    isCtsCreated: ").append(toIndentedString(isCtsCreated)).append("\n");
    sb.append("    isPeriodClosed: ").append(toIndentedString(isPeriodClosed)).append("\n");
    sb.append("    isQtdobPerControl: ").append(toIndentedString(isQtdobPerControl)).append("\n");
    sb.append("    isYtdobPerControl: ").append(toIndentedString(isYtdobPerControl)).append("\n");
    sb.append("    monthlyPayPeriodNumber: ").append(toIndentedString(monthlyPayPeriodNumber)).append("\n");
    sb.append("    mqyEndFlag: ").append(toIndentedString(mqyEndFlag)).append("\n");
    sb.append("    obType: ").append(toIndentedString(obType)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    payDateSeq: ").append(toIndentedString(payDateSeq)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    payPeriodId: ").append(toIndentedString(payPeriodId)).append("\n");
    sb.append("    periodControl: ").append(toIndentedString(periodControl)).append("\n");
    sb.append("    periodEndDate: ").append(toIndentedString(periodEndDate)).append("\n");
    sb.append("    periodStartDate: ").append(toIndentedString(periodStartDate)).append("\n");
    sb.append("    periodType: ").append(toIndentedString(periodType)).append("\n");
    sb.append("    suspAutoPay: ").append(toIndentedString(suspAutoPay)).append("\n");
    sb.append("    suspDirectDeposit: ").append(toIndentedString(suspDirectDeposit)).append("\n");
    sb.append("    userIdChanged: ").append(toIndentedString(userIdChanged)).append("\n");
    sb.append("    userIdCreated: ").append(toIndentedString(userIdCreated)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    auditKey: ").append(toIndentedString(auditKey)).append("\n");
    sb.append("    payrollStateId: ").append(toIndentedString(payrollStateId)).append("\n");
    sb.append("    combineNachaFileName: ").append(toIndentedString(combineNachaFileName)).append("\n");
    sb.append("    combineNachaFileOverride: ").append(toIndentedString(combineNachaFileOverride)).append("\n");
    sb.append("    txFilAppDateTime: ").append(toIndentedString(txFilAppDateTime)).append("\n");
    sb.append("    txFilAppUserId: ").append(toIndentedString(txFilAppUserId)).append("\n");
    sb.append("    allowWebPyrlAfterYeRecon: ").append(toIndentedString(allowWebPyrlAfterYeRecon)).append("\n");
    sb.append("    payrollChangeFlags: ").append(toIndentedString(payrollChangeFlags)).append("\n");
    sb.append("    payrollTransitionFlags: ").append(toIndentedString(payrollTransitionFlags)).append("\n");
    sb.append("    instantCheckMoveRule: ").append(toIndentedString(instantCheckMoveRule)).append("\n");
    sb.append("    bringInPayrollBatchLoad: ").append(toIndentedString(bringInPayrollBatchLoad)).append("\n");
    sb.append("    bringInPpiLoad: ").append(toIndentedString(bringInPpiLoad)).append("\n");
    sb.append("    bringInRetroPayLoad: ").append(toIndentedString(bringInRetroPayLoad)).append("\n");
    sb.append("    lmwActive: ").append(toIndentedString(lmwActive)).append("\n");
    sb.append("    roePayDate: ").append(toIndentedString(roePayDate)).append("\n");
    sb.append("    taxArrearsCollectEnabled: ").append(toIndentedString(taxArrearsCollectEnabled)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("isActive");
    openapiFields.add("dateTimeChanged");
    openapiFields.add("dateTimeCreated");
    openapiFields.add("dateTimeFiscalEndDone");
    openapiFields.add("dateTimePeriodClosed");
    openapiFields.add("dateTimePeriodOpened");
    openapiFields.add("fiscalYearEnd");
    openapiFields.add("isCtsCreated");
    openapiFields.add("isPeriodClosed");
    openapiFields.add("isQtdobPerControl");
    openapiFields.add("isYtdobPerControl");
    openapiFields.add("monthlyPayPeriodNumber");
    openapiFields.add("mqyEndFlag");
    openapiFields.add("obType");
    openapiFields.add("payDate");
    openapiFields.add("payDateSeq");
    openapiFields.add("payGroup");
    openapiFields.add("payPeriodId");
    openapiFields.add("periodControl");
    openapiFields.add("periodEndDate");
    openapiFields.add("periodStartDate");
    openapiFields.add("periodType");
    openapiFields.add("suspAutoPay");
    openapiFields.add("suspDirectDeposit");
    openapiFields.add("userIdChanged");
    openapiFields.add("userIdCreated");
    openapiFields.add("notes");
    openapiFields.add("auditKey");
    openapiFields.add("payrollStateId");
    openapiFields.add("combineNachaFileName");
    openapiFields.add("combineNachaFileOverride");
    openapiFields.add("txFilAppDateTime");
    openapiFields.add("txFilAppUserId");
    openapiFields.add("allowWebPyrlAfterYeRecon");
    openapiFields.add("payrollChangeFlags");
    openapiFields.add("payrollTransitionFlags");
    openapiFields.add("instantCheckMoveRule");
    openapiFields.add("bringInPayrollBatchLoad");
    openapiFields.add("bringInPpiLoad");
    openapiFields.add("bringInRetroPayLoad");
    openapiFields.add("lmwActive");
    openapiFields.add("roePayDate");
    openapiFields.add("taxArrearsCollectEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to PayGroupPayPeriods
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!PayGroupPayPeriods.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PayGroupPayPeriods is not found in the empty JSON string", PayGroupPayPeriods.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("mqyEndFlag") != null && !jsonObj.get("mqyEndFlag").isJsonNull()) && !jsonObj.get("mqyEndFlag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mqyEndFlag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mqyEndFlag").toString()));
      }
      if ((jsonObj.get("obType") != null && !jsonObj.get("obType").isJsonNull()) && !jsonObj.get("obType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `obType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("obType").toString()));
      }
      if ((jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) && !jsonObj.get("payGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroup").toString()));
      }
      if ((jsonObj.get("periodControl") != null && !jsonObj.get("periodControl").isJsonNull()) && !jsonObj.get("periodControl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodControl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodControl").toString()));
      }
      if ((jsonObj.get("periodType") != null && !jsonObj.get("periodType").isJsonNull()) && !jsonObj.get("periodType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodType").toString()));
      }
      if ((jsonObj.get("suspAutoPay") != null && !jsonObj.get("suspAutoPay").isJsonNull()) && !jsonObj.get("suspAutoPay").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspAutoPay` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suspAutoPay").toString()));
      }
      if ((jsonObj.get("suspDirectDeposit") != null && !jsonObj.get("suspDirectDeposit").isJsonNull()) && !jsonObj.get("suspDirectDeposit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `suspDirectDeposit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("suspDirectDeposit").toString()));
      }
      if ((jsonObj.get("userIdChanged") != null && !jsonObj.get("userIdChanged").isJsonNull()) && !jsonObj.get("userIdChanged").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userIdChanged` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userIdChanged").toString()));
      }
      if ((jsonObj.get("userIdCreated") != null && !jsonObj.get("userIdCreated").isJsonNull()) && !jsonObj.get("userIdCreated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userIdCreated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userIdCreated").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("combineNachaFileName") != null && !jsonObj.get("combineNachaFileName").isJsonNull()) && !jsonObj.get("combineNachaFileName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `combineNachaFileName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("combineNachaFileName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PayGroupPayPeriods.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PayGroupPayPeriods' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PayGroupPayPeriods> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PayGroupPayPeriods.class));

       return (TypeAdapter<T>) new TypeAdapter<PayGroupPayPeriods>() {
           @Override
           public void write(JsonWriter out, PayGroupPayPeriods value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public PayGroupPayPeriods read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             PayGroupPayPeriods instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PayGroupPayPeriods given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PayGroupPayPeriods
  * @throws IOException if the JSON string is invalid with respect to PayGroupPayPeriods
  */
  public static PayGroupPayPeriods fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PayGroupPayPeriods.class);
  }

 /**
  * Convert an instance of PayGroupPayPeriods to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

