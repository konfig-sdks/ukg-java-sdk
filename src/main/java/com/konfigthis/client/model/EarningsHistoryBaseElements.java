/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EarningsHistoryBaseElements
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EarningsHistoryBaseElements {
  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_EARNING_CODE = "earningCode";
  @SerializedName(SERIALIZED_NAME_EARNING_CODE)
  private String earningCode;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_GEN_NUMBER = "genNumber";
  @SerializedName(SERIALIZED_NAME_GEN_NUMBER)
  private String genNumber;

  public static final String SERIALIZED_NAME_PERIOD_CONTROL = "periodControl";
  @SerializedName(SERIALIZED_NAME_PERIOD_CONTROL)
  private String periodControl;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private String payGroup;

  public static final String SERIALIZED_NAME_ACCRUAL_CODE = "accrualCode";
  @SerializedName(SERIALIZED_NAME_ACCRUAL_CODE)
  private String accrualCode;

  public static final String SERIALIZED_NAME_BASE_AMOUNT = "baseAmount";
  @SerializedName(SERIALIZED_NAME_BASE_AMOUNT)
  private Double baseAmount;

  public static final String SERIALIZED_NAME_BATCH_I_D = "batchID";
  @SerializedName(SERIALIZED_NAME_BATCH_I_D)
  private String batchID;

  public static final String SERIALIZED_NAME_CALCULATION_RULE = "calculationRule";
  @SerializedName(SERIALIZED_NAME_CALCULATION_RULE)
  private String calculationRule;

  public static final String SERIALIZED_NAME_CALCULATION_SEQUENCE = "calculationSequence";
  @SerializedName(SERIALIZED_NAME_CALCULATION_SEQUENCE)
  private String calculationSequence;

  public static final String SERIALIZED_NAME_CURRENT_AMOUNT = "currentAmount";
  @SerializedName(SERIALIZED_NAME_CURRENT_AMOUNT)
  private Double currentAmount;

  public static final String SERIALIZED_NAME_CURRENT_HOURS = "currentHours";
  @SerializedName(SERIALIZED_NAME_CURRENT_HOURS)
  private Double currentHours;

  public static final String SERIALIZED_NAME_GL_BASE_SEGMENT_ID = "glBaseSegmentId";
  @SerializedName(SERIALIZED_NAME_GL_BASE_SEGMENT_ID)
  private String glBaseSegmentId;

  public static final String SERIALIZED_NAME_GL_FOLLOW_BASE_ACCOUNT_ALLOCATION = "glFollowBaseAccountAllocation";
  @SerializedName(SERIALIZED_NAME_GL_FOLLOW_BASE_ACCOUNT_ALLOCATION)
  private String glFollowBaseAccountAllocation;

  public static final String SERIALIZED_NAME_GROSS_UP = "grossUp";
  @SerializedName(SERIALIZED_NAME_GROSS_UP)
  private String grossUp;

  public static final String SERIALIZED_NAME_GROSS_UP_TARGET = "grossUpTarget";
  @SerializedName(SERIALIZED_NAME_GROSS_UP_TARGET)
  private Double grossUpTarget;

  public static final String SERIALIZED_NAME_GROSS_UP_TAX_CALCULATION_METHOD = "grossUpTaxCalculationMethod";
  @SerializedName(SERIALIZED_NAME_GROSS_UP_TAX_CALCULATION_METHOD)
  private Integer grossUpTaxCalculationMethod;

  public static final String SERIALIZED_NAME_HOURLY_PAY_RATE = "hourlyPayRate";
  @SerializedName(SERIALIZED_NAME_HOURLY_PAY_RATE)
  private Double hourlyPayRate;

  public static final String SERIALIZED_NAME_INCLUDE_IN_DEFERRED_COMPENSATION = "includeInDeferredCompensation";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IN_DEFERRED_COMPENSATION)
  private Boolean includeInDeferredCompensation;

  public static final String SERIALIZED_NAME_INCLUDE_IN_DEFERRED_COMPENSATION_HOURS = "includeInDeferredCompensationHours";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IN_DEFERRED_COMPENSATION_HOURS)
  private Boolean includeInDeferredCompensationHours;

  public static final String SERIALIZED_NAME_IS_VOIDED = "isVoided";
  @SerializedName(SERIALIZED_NAME_IS_VOIDED)
  private Boolean isVoided;

  public static final String SERIALIZED_NAME_IS_VOIDING_RECORD = "isVoidingRecord";
  @SerializedName(SERIALIZED_NAME_IS_VOIDING_RECORD)
  private Boolean isVoidingRecord;

  public static final String SERIALIZED_NAME_JOB_CODE = "jobCode";
  @SerializedName(SERIALIZED_NAME_JOB_CODE)
  private String jobCode;

  public static final String SERIALIZED_NAME_JOB_PREMIUM_AMOUNT = "jobPremiumAmount";
  @SerializedName(SERIALIZED_NAME_JOB_PREMIUM_AMOUNT)
  private Double jobPremiumAmount;

  public static final String SERIALIZED_NAME_JOB_PREMIUM_RATE_OR_PERCENT = "jobPremiumRateOrPercent";
  @SerializedName(SERIALIZED_NAME_JOB_PREMIUM_RATE_OR_PERCENT)
  private Double jobPremiumRateOrPercent;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_NUMBER_OF_DAYS = "numberOfDays";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_DAYS)
  private Integer numberOfDays;

  public static final String SERIALIZED_NAME_NUMBER_OF_GAMES = "numberOfGames";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_GAMES)
  private Integer numberOfGames;

  public static final String SERIALIZED_NAME_PAY_DATE = "payDate";
  @SerializedName(SERIALIZED_NAME_PAY_DATE)
  private OffsetDateTime payDate;

  public static final String SERIALIZED_NAME_PAYOUT_RATE_TYPE = "payoutRateType";
  @SerializedName(SERIALIZED_NAME_PAYOUT_RATE_TYPE)
  private String payoutRateType;

  public static final String SERIALIZED_NAME_PAY_RATE = "payRate";
  @SerializedName(SERIALIZED_NAME_PAY_RATE)
  private Double payRate;

  public static final String SERIALIZED_NAME_PAY_SHEET_I_D = "paySheetID";
  @SerializedName(SERIALIZED_NAME_PAY_SHEET_I_D)
  private String paySheetID;

  public static final String SERIALIZED_NAME_PERIOD_PAY_RATE = "periodPayRate";
  @SerializedName(SERIALIZED_NAME_PERIOD_PAY_RATE)
  private Double periodPayRate;

  public static final String SERIALIZED_NAME_PIECE_COUNT = "pieceCount";
  @SerializedName(SERIALIZED_NAME_PIECE_COUNT)
  private Double pieceCount;

  public static final String SERIALIZED_NAME_PIECE_PAY_RATE = "piecePayRate";
  @SerializedName(SERIALIZED_NAME_PIECE_PAY_RATE)
  private Double piecePayRate;

  public static final String SERIALIZED_NAME_PLAN_YEAR = "planYear";
  @SerializedName(SERIALIZED_NAME_PLAN_YEAR)
  private String planYear;

  public static final String SERIALIZED_NAME_PROJECT = "project";
  @SerializedName(SERIALIZED_NAME_PROJECT)
  private String project;

  public static final String SERIALIZED_NAME_REPORT_CATEGORY = "reportCategory";
  @SerializedName(SERIALIZED_NAME_REPORT_CATEGORY)
  private String reportCategory;

  public static final String SERIALIZED_NAME_TAX_CALCULATION_GROUP_ID = "taxCalculationGroupId";
  @SerializedName(SERIALIZED_NAME_TAX_CALCULATION_GROUP_ID)
  private String taxCalculationGroupId;

  public static final String SERIALIZED_NAME_TAX_CATEGORY = "taxCategory";
  @SerializedName(SERIALIZED_NAME_TAX_CATEGORY)
  private String taxCategory;

  public static final String SERIALIZED_NAME_TIME_CLOCK_CODE = "timeClockCode";
  @SerializedName(SERIALIZED_NAME_TIME_CLOCK_CODE)
  private String timeClockCode;

  public static final String SERIALIZED_NAME_TIP_CREDIT = "tipCredit";
  @SerializedName(SERIALIZED_NAME_TIP_CREDIT)
  private Double tipCredit;

  public static final String SERIALIZED_NAME_TIP_GROSS_RECEIPTS = "tipGrossReceipts";
  @SerializedName(SERIALIZED_NAME_TIP_GROSS_RECEIPTS)
  private Double tipGrossReceipts;

  public static final String SERIALIZED_NAME_TIP_TYPE = "tipType";
  @SerializedName(SERIALIZED_NAME_TIP_TYPE)
  private String tipType;

  public static final String SERIALIZED_NAME_USE_DEDUCTION_OFF_SET = "useDeductionOffSet";
  @SerializedName(SERIALIZED_NAME_USE_DEDUCTION_OFF_SET)
  private Boolean useDeductionOffSet;

  public static final String SERIALIZED_NAME_YTD_AMOUNT = "ytdAmount";
  @SerializedName(SERIALIZED_NAME_YTD_AMOUNT)
  private Double ytdAmount;

  public static final String SERIALIZED_NAME_YTD_SHIFT_AMOUNT = "ytdShiftAmount";
  @SerializedName(SERIALIZED_NAME_YTD_SHIFT_AMOUNT)
  private Double ytdShiftAmount;

  public EarningsHistoryBaseElements() {
  }

  public EarningsHistoryBaseElements employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EarningsHistoryBaseElements companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EarningsHistoryBaseElements earningCode(String earningCode) {
    
    
    
    
    this.earningCode = earningCode;
    return this;
  }

   /**
   * Get earningCode
   * @return earningCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEarningCode() {
    return earningCode;
  }


  public void setEarningCode(String earningCode) {
    
    
    
    this.earningCode = earningCode;
  }


  public EarningsHistoryBaseElements employeeNumber(String employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public EarningsHistoryBaseElements genNumber(String genNumber) {
    
    
    
    
    this.genNumber = genNumber;
    return this;
  }

   /**
   * Get genNumber
   * @return genNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGenNumber() {
    return genNumber;
  }


  public void setGenNumber(String genNumber) {
    
    
    
    this.genNumber = genNumber;
  }


  public EarningsHistoryBaseElements periodControl(String periodControl) {
    
    
    
    
    this.periodControl = periodControl;
    return this;
  }

   /**
   * Get periodControl
   * @return periodControl
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPeriodControl() {
    return periodControl;
  }


  public void setPeriodControl(String periodControl) {
    
    
    
    this.periodControl = periodControl;
  }


  public EarningsHistoryBaseElements payGroup(String payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(String payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public EarningsHistoryBaseElements accrualCode(String accrualCode) {
    
    
    
    
    this.accrualCode = accrualCode;
    return this;
  }

   /**
   * Get accrualCode
   * @return accrualCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAccrualCode() {
    return accrualCode;
  }


  public void setAccrualCode(String accrualCode) {
    
    
    
    this.accrualCode = accrualCode;
  }


  public EarningsHistoryBaseElements baseAmount(Double baseAmount) {
    
    
    
    
    this.baseAmount = baseAmount;
    return this;
  }

  public EarningsHistoryBaseElements baseAmount(Integer baseAmount) {
    
    
    
    
    this.baseAmount = baseAmount.doubleValue();
    return this;
  }

   /**
   * Get baseAmount
   * @return baseAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBaseAmount() {
    return baseAmount;
  }


  public void setBaseAmount(Double baseAmount) {
    
    
    
    this.baseAmount = baseAmount;
  }


  public EarningsHistoryBaseElements batchID(String batchID) {
    
    
    
    
    this.batchID = batchID;
    return this;
  }

   /**
   * Get batchID
   * @return batchID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBatchID() {
    return batchID;
  }


  public void setBatchID(String batchID) {
    
    
    
    this.batchID = batchID;
  }


  public EarningsHistoryBaseElements calculationRule(String calculationRule) {
    
    
    
    
    this.calculationRule = calculationRule;
    return this;
  }

   /**
   * Get calculationRule
   * @return calculationRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCalculationRule() {
    return calculationRule;
  }


  public void setCalculationRule(String calculationRule) {
    
    
    
    this.calculationRule = calculationRule;
  }


  public EarningsHistoryBaseElements calculationSequence(String calculationSequence) {
    
    
    
    
    this.calculationSequence = calculationSequence;
    return this;
  }

   /**
   * Get calculationSequence
   * @return calculationSequence
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCalculationSequence() {
    return calculationSequence;
  }


  public void setCalculationSequence(String calculationSequence) {
    
    
    
    this.calculationSequence = calculationSequence;
  }


  public EarningsHistoryBaseElements currentAmount(Double currentAmount) {
    
    
    
    
    this.currentAmount = currentAmount;
    return this;
  }

  public EarningsHistoryBaseElements currentAmount(Integer currentAmount) {
    
    
    
    
    this.currentAmount = currentAmount.doubleValue();
    return this;
  }

   /**
   * Get currentAmount
   * @return currentAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCurrentAmount() {
    return currentAmount;
  }


  public void setCurrentAmount(Double currentAmount) {
    
    
    
    this.currentAmount = currentAmount;
  }


  public EarningsHistoryBaseElements currentHours(Double currentHours) {
    
    
    
    
    this.currentHours = currentHours;
    return this;
  }

  public EarningsHistoryBaseElements currentHours(Integer currentHours) {
    
    
    
    
    this.currentHours = currentHours.doubleValue();
    return this;
  }

   /**
   * Get currentHours
   * @return currentHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCurrentHours() {
    return currentHours;
  }


  public void setCurrentHours(Double currentHours) {
    
    
    
    this.currentHours = currentHours;
  }


  public EarningsHistoryBaseElements glBaseSegmentId(String glBaseSegmentId) {
    
    
    
    
    this.glBaseSegmentId = glBaseSegmentId;
    return this;
  }

   /**
   * Get glBaseSegmentId
   * @return glBaseSegmentId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlBaseSegmentId() {
    return glBaseSegmentId;
  }


  public void setGlBaseSegmentId(String glBaseSegmentId) {
    
    
    
    this.glBaseSegmentId = glBaseSegmentId;
  }


  public EarningsHistoryBaseElements glFollowBaseAccountAllocation(String glFollowBaseAccountAllocation) {
    
    
    
    
    this.glFollowBaseAccountAllocation = glFollowBaseAccountAllocation;
    return this;
  }

   /**
   * Get glFollowBaseAccountAllocation
   * @return glFollowBaseAccountAllocation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGlFollowBaseAccountAllocation() {
    return glFollowBaseAccountAllocation;
  }


  public void setGlFollowBaseAccountAllocation(String glFollowBaseAccountAllocation) {
    
    
    
    this.glFollowBaseAccountAllocation = glFollowBaseAccountAllocation;
  }


  public EarningsHistoryBaseElements grossUp(String grossUp) {
    
    
    
    
    this.grossUp = grossUp;
    return this;
  }

   /**
   * Get grossUp
   * @return grossUp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getGrossUp() {
    return grossUp;
  }


  public void setGrossUp(String grossUp) {
    
    
    
    this.grossUp = grossUp;
  }


  public EarningsHistoryBaseElements grossUpTarget(Double grossUpTarget) {
    
    
    
    
    this.grossUpTarget = grossUpTarget;
    return this;
  }

  public EarningsHistoryBaseElements grossUpTarget(Integer grossUpTarget) {
    
    
    
    
    this.grossUpTarget = grossUpTarget.doubleValue();
    return this;
  }

   /**
   * Get grossUpTarget
   * @return grossUpTarget
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getGrossUpTarget() {
    return grossUpTarget;
  }


  public void setGrossUpTarget(Double grossUpTarget) {
    
    
    
    this.grossUpTarget = grossUpTarget;
  }


  public EarningsHistoryBaseElements grossUpTaxCalculationMethod(Integer grossUpTaxCalculationMethod) {
    
    
    
    
    this.grossUpTaxCalculationMethod = grossUpTaxCalculationMethod;
    return this;
  }

   /**
   * Get grossUpTaxCalculationMethod
   * @return grossUpTaxCalculationMethod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getGrossUpTaxCalculationMethod() {
    return grossUpTaxCalculationMethod;
  }


  public void setGrossUpTaxCalculationMethod(Integer grossUpTaxCalculationMethod) {
    
    
    
    this.grossUpTaxCalculationMethod = grossUpTaxCalculationMethod;
  }


  public EarningsHistoryBaseElements hourlyPayRate(Double hourlyPayRate) {
    
    
    
    
    this.hourlyPayRate = hourlyPayRate;
    return this;
  }

  public EarningsHistoryBaseElements hourlyPayRate(Integer hourlyPayRate) {
    
    
    
    
    this.hourlyPayRate = hourlyPayRate.doubleValue();
    return this;
  }

   /**
   * Get hourlyPayRate
   * @return hourlyPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getHourlyPayRate() {
    return hourlyPayRate;
  }


  public void setHourlyPayRate(Double hourlyPayRate) {
    
    
    
    this.hourlyPayRate = hourlyPayRate;
  }


  public EarningsHistoryBaseElements includeInDeferredCompensation(Boolean includeInDeferredCompensation) {
    
    
    
    
    this.includeInDeferredCompensation = includeInDeferredCompensation;
    return this;
  }

   /**
   * Get includeInDeferredCompensation
   * @return includeInDeferredCompensation
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeInDeferredCompensation() {
    return includeInDeferredCompensation;
  }


  public void setIncludeInDeferredCompensation(Boolean includeInDeferredCompensation) {
    
    
    
    this.includeInDeferredCompensation = includeInDeferredCompensation;
  }


  public EarningsHistoryBaseElements includeInDeferredCompensationHours(Boolean includeInDeferredCompensationHours) {
    
    
    
    
    this.includeInDeferredCompensationHours = includeInDeferredCompensationHours;
    return this;
  }

   /**
   * Get includeInDeferredCompensationHours
   * @return includeInDeferredCompensationHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeInDeferredCompensationHours() {
    return includeInDeferredCompensationHours;
  }


  public void setIncludeInDeferredCompensationHours(Boolean includeInDeferredCompensationHours) {
    
    
    
    this.includeInDeferredCompensationHours = includeInDeferredCompensationHours;
  }


  public EarningsHistoryBaseElements isVoided(Boolean isVoided) {
    
    
    
    
    this.isVoided = isVoided;
    return this;
  }

   /**
   * Get isVoided
   * @return isVoided
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsVoided() {
    return isVoided;
  }


  public void setIsVoided(Boolean isVoided) {
    
    
    
    this.isVoided = isVoided;
  }


  public EarningsHistoryBaseElements isVoidingRecord(Boolean isVoidingRecord) {
    
    
    
    
    this.isVoidingRecord = isVoidingRecord;
    return this;
  }

   /**
   * Get isVoidingRecord
   * @return isVoidingRecord
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsVoidingRecord() {
    return isVoidingRecord;
  }


  public void setIsVoidingRecord(Boolean isVoidingRecord) {
    
    
    
    this.isVoidingRecord = isVoidingRecord;
  }


  public EarningsHistoryBaseElements jobCode(String jobCode) {
    
    
    
    
    this.jobCode = jobCode;
    return this;
  }

   /**
   * Get jobCode
   * @return jobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobCode() {
    return jobCode;
  }


  public void setJobCode(String jobCode) {
    
    
    
    this.jobCode = jobCode;
  }


  public EarningsHistoryBaseElements jobPremiumAmount(Double jobPremiumAmount) {
    
    
    
    
    this.jobPremiumAmount = jobPremiumAmount;
    return this;
  }

  public EarningsHistoryBaseElements jobPremiumAmount(Integer jobPremiumAmount) {
    
    
    
    
    this.jobPremiumAmount = jobPremiumAmount.doubleValue();
    return this;
  }

   /**
   * Get jobPremiumAmount
   * @return jobPremiumAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getJobPremiumAmount() {
    return jobPremiumAmount;
  }


  public void setJobPremiumAmount(Double jobPremiumAmount) {
    
    
    
    this.jobPremiumAmount = jobPremiumAmount;
  }


  public EarningsHistoryBaseElements jobPremiumRateOrPercent(Double jobPremiumRateOrPercent) {
    
    
    
    
    this.jobPremiumRateOrPercent = jobPremiumRateOrPercent;
    return this;
  }

  public EarningsHistoryBaseElements jobPremiumRateOrPercent(Integer jobPremiumRateOrPercent) {
    
    
    
    
    this.jobPremiumRateOrPercent = jobPremiumRateOrPercent.doubleValue();
    return this;
  }

   /**
   * Get jobPremiumRateOrPercent
   * @return jobPremiumRateOrPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getJobPremiumRateOrPercent() {
    return jobPremiumRateOrPercent;
  }


  public void setJobPremiumRateOrPercent(Double jobPremiumRateOrPercent) {
    
    
    
    this.jobPremiumRateOrPercent = jobPremiumRateOrPercent;
  }


  public EarningsHistoryBaseElements location(String location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    
    
    
    this.location = location;
  }


  public EarningsHistoryBaseElements numberOfDays(Integer numberOfDays) {
    
    
    
    
    this.numberOfDays = numberOfDays;
    return this;
  }

   /**
   * Get numberOfDays
   * @return numberOfDays
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNumberOfDays() {
    return numberOfDays;
  }


  public void setNumberOfDays(Integer numberOfDays) {
    
    
    
    this.numberOfDays = numberOfDays;
  }


  public EarningsHistoryBaseElements numberOfGames(Integer numberOfGames) {
    
    
    
    
    this.numberOfGames = numberOfGames;
    return this;
  }

   /**
   * Get numberOfGames
   * @return numberOfGames
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getNumberOfGames() {
    return numberOfGames;
  }


  public void setNumberOfGames(Integer numberOfGames) {
    
    
    
    this.numberOfGames = numberOfGames;
  }


  public EarningsHistoryBaseElements payDate(OffsetDateTime payDate) {
    
    
    
    
    this.payDate = payDate;
    return this;
  }

   /**
   * Get payDate
   * @return payDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPayDate() {
    return payDate;
  }


  public void setPayDate(OffsetDateTime payDate) {
    
    
    
    this.payDate = payDate;
  }


  public EarningsHistoryBaseElements payoutRateType(String payoutRateType) {
    
    
    
    
    this.payoutRateType = payoutRateType;
    return this;
  }

   /**
   * Get payoutRateType
   * @return payoutRateType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayoutRateType() {
    return payoutRateType;
  }


  public void setPayoutRateType(String payoutRateType) {
    
    
    
    this.payoutRateType = payoutRateType;
  }


  public EarningsHistoryBaseElements payRate(Double payRate) {
    
    
    
    
    this.payRate = payRate;
    return this;
  }

  public EarningsHistoryBaseElements payRate(Integer payRate) {
    
    
    
    
    this.payRate = payRate.doubleValue();
    return this;
  }

   /**
   * Get payRate
   * @return payRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPayRate() {
    return payRate;
  }


  public void setPayRate(Double payRate) {
    
    
    
    this.payRate = payRate;
  }


  public EarningsHistoryBaseElements paySheetID(String paySheetID) {
    
    
    
    
    this.paySheetID = paySheetID;
    return this;
  }

   /**
   * Get paySheetID
   * @return paySheetID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaySheetID() {
    return paySheetID;
  }


  public void setPaySheetID(String paySheetID) {
    
    
    
    this.paySheetID = paySheetID;
  }


  public EarningsHistoryBaseElements periodPayRate(Double periodPayRate) {
    
    
    
    
    this.periodPayRate = periodPayRate;
    return this;
  }

  public EarningsHistoryBaseElements periodPayRate(Integer periodPayRate) {
    
    
    
    
    this.periodPayRate = periodPayRate.doubleValue();
    return this;
  }

   /**
   * Get periodPayRate
   * @return periodPayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPeriodPayRate() {
    return periodPayRate;
  }


  public void setPeriodPayRate(Double periodPayRate) {
    
    
    
    this.periodPayRate = periodPayRate;
  }


  public EarningsHistoryBaseElements pieceCount(Double pieceCount) {
    
    
    
    
    this.pieceCount = pieceCount;
    return this;
  }

  public EarningsHistoryBaseElements pieceCount(Integer pieceCount) {
    
    
    
    
    this.pieceCount = pieceCount.doubleValue();
    return this;
  }

   /**
   * Get pieceCount
   * @return pieceCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPieceCount() {
    return pieceCount;
  }


  public void setPieceCount(Double pieceCount) {
    
    
    
    this.pieceCount = pieceCount;
  }


  public EarningsHistoryBaseElements piecePayRate(Double piecePayRate) {
    
    
    
    
    this.piecePayRate = piecePayRate;
    return this;
  }

  public EarningsHistoryBaseElements piecePayRate(Integer piecePayRate) {
    
    
    
    
    this.piecePayRate = piecePayRate.doubleValue();
    return this;
  }

   /**
   * Get piecePayRate
   * @return piecePayRate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPiecePayRate() {
    return piecePayRate;
  }


  public void setPiecePayRate(Double piecePayRate) {
    
    
    
    this.piecePayRate = piecePayRate;
  }


  public EarningsHistoryBaseElements planYear(String planYear) {
    
    
    
    
    this.planYear = planYear;
    return this;
  }

   /**
   * Get planYear
   * @return planYear
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPlanYear() {
    return planYear;
  }


  public void setPlanYear(String planYear) {
    
    
    
    this.planYear = planYear;
  }


  public EarningsHistoryBaseElements project(String project) {
    
    
    
    
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getProject() {
    return project;
  }


  public void setProject(String project) {
    
    
    
    this.project = project;
  }


  public EarningsHistoryBaseElements reportCategory(String reportCategory) {
    
    
    
    
    this.reportCategory = reportCategory;
    return this;
  }

   /**
   * Get reportCategory
   * @return reportCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getReportCategory() {
    return reportCategory;
  }


  public void setReportCategory(String reportCategory) {
    
    
    
    this.reportCategory = reportCategory;
  }


  public EarningsHistoryBaseElements taxCalculationGroupId(String taxCalculationGroupId) {
    
    
    
    
    this.taxCalculationGroupId = taxCalculationGroupId;
    return this;
  }

   /**
   * Get taxCalculationGroupId
   * @return taxCalculationGroupId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalculationGroupId() {
    return taxCalculationGroupId;
  }


  public void setTaxCalculationGroupId(String taxCalculationGroupId) {
    
    
    
    this.taxCalculationGroupId = taxCalculationGroupId;
  }


  public EarningsHistoryBaseElements taxCategory(String taxCategory) {
    
    
    
    
    this.taxCategory = taxCategory;
    return this;
  }

   /**
   * Get taxCategory
   * @return taxCategory
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCategory() {
    return taxCategory;
  }


  public void setTaxCategory(String taxCategory) {
    
    
    
    this.taxCategory = taxCategory;
  }


  public EarningsHistoryBaseElements timeClockCode(String timeClockCode) {
    
    
    
    
    this.timeClockCode = timeClockCode;
    return this;
  }

   /**
   * Get timeClockCode
   * @return timeClockCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimeClockCode() {
    return timeClockCode;
  }


  public void setTimeClockCode(String timeClockCode) {
    
    
    
    this.timeClockCode = timeClockCode;
  }


  public EarningsHistoryBaseElements tipCredit(Double tipCredit) {
    
    
    
    
    this.tipCredit = tipCredit;
    return this;
  }

  public EarningsHistoryBaseElements tipCredit(Integer tipCredit) {
    
    
    
    
    this.tipCredit = tipCredit.doubleValue();
    return this;
  }

   /**
   * Get tipCredit
   * @return tipCredit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTipCredit() {
    return tipCredit;
  }


  public void setTipCredit(Double tipCredit) {
    
    
    
    this.tipCredit = tipCredit;
  }


  public EarningsHistoryBaseElements tipGrossReceipts(Double tipGrossReceipts) {
    
    
    
    
    this.tipGrossReceipts = tipGrossReceipts;
    return this;
  }

  public EarningsHistoryBaseElements tipGrossReceipts(Integer tipGrossReceipts) {
    
    
    
    
    this.tipGrossReceipts = tipGrossReceipts.doubleValue();
    return this;
  }

   /**
   * Get tipGrossReceipts
   * @return tipGrossReceipts
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getTipGrossReceipts() {
    return tipGrossReceipts;
  }


  public void setTipGrossReceipts(Double tipGrossReceipts) {
    
    
    
    this.tipGrossReceipts = tipGrossReceipts;
  }


  public EarningsHistoryBaseElements tipType(String tipType) {
    
    
    
    
    this.tipType = tipType;
    return this;
  }

   /**
   * Get tipType
   * @return tipType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTipType() {
    return tipType;
  }


  public void setTipType(String tipType) {
    
    
    
    this.tipType = tipType;
  }


  public EarningsHistoryBaseElements useDeductionOffSet(Boolean useDeductionOffSet) {
    
    
    
    
    this.useDeductionOffSet = useDeductionOffSet;
    return this;
  }

   /**
   * Get useDeductionOffSet
   * @return useDeductionOffSet
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getUseDeductionOffSet() {
    return useDeductionOffSet;
  }


  public void setUseDeductionOffSet(Boolean useDeductionOffSet) {
    
    
    
    this.useDeductionOffSet = useDeductionOffSet;
  }


  public EarningsHistoryBaseElements ytdAmount(Double ytdAmount) {
    
    
    
    
    this.ytdAmount = ytdAmount;
    return this;
  }

  public EarningsHistoryBaseElements ytdAmount(Integer ytdAmount) {
    
    
    
    
    this.ytdAmount = ytdAmount.doubleValue();
    return this;
  }

   /**
   * Get ytdAmount
   * @return ytdAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getYtdAmount() {
    return ytdAmount;
  }


  public void setYtdAmount(Double ytdAmount) {
    
    
    
    this.ytdAmount = ytdAmount;
  }


  public EarningsHistoryBaseElements ytdShiftAmount(Double ytdShiftAmount) {
    
    
    
    
    this.ytdShiftAmount = ytdShiftAmount;
    return this;
  }

  public EarningsHistoryBaseElements ytdShiftAmount(Integer ytdShiftAmount) {
    
    
    
    
    this.ytdShiftAmount = ytdShiftAmount.doubleValue();
    return this;
  }

   /**
   * Get ytdShiftAmount
   * @return ytdShiftAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getYtdShiftAmount() {
    return ytdShiftAmount;
  }


  public void setYtdShiftAmount(Double ytdShiftAmount) {
    
    
    
    this.ytdShiftAmount = ytdShiftAmount;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EarningsHistoryBaseElements instance itself
   */
  public EarningsHistoryBaseElements putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EarningsHistoryBaseElements earningsHistoryBaseElements = (EarningsHistoryBaseElements) o;
    return Objects.equals(this.employeeId, earningsHistoryBaseElements.employeeId) &&
        Objects.equals(this.companyId, earningsHistoryBaseElements.companyId) &&
        Objects.equals(this.earningCode, earningsHistoryBaseElements.earningCode) &&
        Objects.equals(this.employeeNumber, earningsHistoryBaseElements.employeeNumber) &&
        Objects.equals(this.genNumber, earningsHistoryBaseElements.genNumber) &&
        Objects.equals(this.periodControl, earningsHistoryBaseElements.periodControl) &&
        Objects.equals(this.payGroup, earningsHistoryBaseElements.payGroup) &&
        Objects.equals(this.accrualCode, earningsHistoryBaseElements.accrualCode) &&
        Objects.equals(this.baseAmount, earningsHistoryBaseElements.baseAmount) &&
        Objects.equals(this.batchID, earningsHistoryBaseElements.batchID) &&
        Objects.equals(this.calculationRule, earningsHistoryBaseElements.calculationRule) &&
        Objects.equals(this.calculationSequence, earningsHistoryBaseElements.calculationSequence) &&
        Objects.equals(this.currentAmount, earningsHistoryBaseElements.currentAmount) &&
        Objects.equals(this.currentHours, earningsHistoryBaseElements.currentHours) &&
        Objects.equals(this.glBaseSegmentId, earningsHistoryBaseElements.glBaseSegmentId) &&
        Objects.equals(this.glFollowBaseAccountAllocation, earningsHistoryBaseElements.glFollowBaseAccountAllocation) &&
        Objects.equals(this.grossUp, earningsHistoryBaseElements.grossUp) &&
        Objects.equals(this.grossUpTarget, earningsHistoryBaseElements.grossUpTarget) &&
        Objects.equals(this.grossUpTaxCalculationMethod, earningsHistoryBaseElements.grossUpTaxCalculationMethod) &&
        Objects.equals(this.hourlyPayRate, earningsHistoryBaseElements.hourlyPayRate) &&
        Objects.equals(this.includeInDeferredCompensation, earningsHistoryBaseElements.includeInDeferredCompensation) &&
        Objects.equals(this.includeInDeferredCompensationHours, earningsHistoryBaseElements.includeInDeferredCompensationHours) &&
        Objects.equals(this.isVoided, earningsHistoryBaseElements.isVoided) &&
        Objects.equals(this.isVoidingRecord, earningsHistoryBaseElements.isVoidingRecord) &&
        Objects.equals(this.jobCode, earningsHistoryBaseElements.jobCode) &&
        Objects.equals(this.jobPremiumAmount, earningsHistoryBaseElements.jobPremiumAmount) &&
        Objects.equals(this.jobPremiumRateOrPercent, earningsHistoryBaseElements.jobPremiumRateOrPercent) &&
        Objects.equals(this.location, earningsHistoryBaseElements.location) &&
        Objects.equals(this.numberOfDays, earningsHistoryBaseElements.numberOfDays) &&
        Objects.equals(this.numberOfGames, earningsHistoryBaseElements.numberOfGames) &&
        Objects.equals(this.payDate, earningsHistoryBaseElements.payDate) &&
        Objects.equals(this.payoutRateType, earningsHistoryBaseElements.payoutRateType) &&
        Objects.equals(this.payRate, earningsHistoryBaseElements.payRate) &&
        Objects.equals(this.paySheetID, earningsHistoryBaseElements.paySheetID) &&
        Objects.equals(this.periodPayRate, earningsHistoryBaseElements.periodPayRate) &&
        Objects.equals(this.pieceCount, earningsHistoryBaseElements.pieceCount) &&
        Objects.equals(this.piecePayRate, earningsHistoryBaseElements.piecePayRate) &&
        Objects.equals(this.planYear, earningsHistoryBaseElements.planYear) &&
        Objects.equals(this.project, earningsHistoryBaseElements.project) &&
        Objects.equals(this.reportCategory, earningsHistoryBaseElements.reportCategory) &&
        Objects.equals(this.taxCalculationGroupId, earningsHistoryBaseElements.taxCalculationGroupId) &&
        Objects.equals(this.taxCategory, earningsHistoryBaseElements.taxCategory) &&
        Objects.equals(this.timeClockCode, earningsHistoryBaseElements.timeClockCode) &&
        Objects.equals(this.tipCredit, earningsHistoryBaseElements.tipCredit) &&
        Objects.equals(this.tipGrossReceipts, earningsHistoryBaseElements.tipGrossReceipts) &&
        Objects.equals(this.tipType, earningsHistoryBaseElements.tipType) &&
        Objects.equals(this.useDeductionOffSet, earningsHistoryBaseElements.useDeductionOffSet) &&
        Objects.equals(this.ytdAmount, earningsHistoryBaseElements.ytdAmount) &&
        Objects.equals(this.ytdShiftAmount, earningsHistoryBaseElements.ytdShiftAmount)&&
        Objects.equals(this.additionalProperties, earningsHistoryBaseElements.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(employeeId, companyId, earningCode, employeeNumber, genNumber, periodControl, payGroup, accrualCode, baseAmount, batchID, calculationRule, calculationSequence, currentAmount, currentHours, glBaseSegmentId, glFollowBaseAccountAllocation, grossUp, grossUpTarget, grossUpTaxCalculationMethod, hourlyPayRate, includeInDeferredCompensation, includeInDeferredCompensationHours, isVoided, isVoidingRecord, jobCode, jobPremiumAmount, jobPremiumRateOrPercent, location, numberOfDays, numberOfGames, payDate, payoutRateType, payRate, paySheetID, periodPayRate, pieceCount, piecePayRate, planYear, project, reportCategory, taxCalculationGroupId, taxCategory, timeClockCode, tipCredit, tipGrossReceipts, tipType, useDeductionOffSet, ytdAmount, ytdShiftAmount, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EarningsHistoryBaseElements {\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    earningCode: ").append(toIndentedString(earningCode)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    genNumber: ").append(toIndentedString(genNumber)).append("\n");
    sb.append("    periodControl: ").append(toIndentedString(periodControl)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    accrualCode: ").append(toIndentedString(accrualCode)).append("\n");
    sb.append("    baseAmount: ").append(toIndentedString(baseAmount)).append("\n");
    sb.append("    batchID: ").append(toIndentedString(batchID)).append("\n");
    sb.append("    calculationRule: ").append(toIndentedString(calculationRule)).append("\n");
    sb.append("    calculationSequence: ").append(toIndentedString(calculationSequence)).append("\n");
    sb.append("    currentAmount: ").append(toIndentedString(currentAmount)).append("\n");
    sb.append("    currentHours: ").append(toIndentedString(currentHours)).append("\n");
    sb.append("    glBaseSegmentId: ").append(toIndentedString(glBaseSegmentId)).append("\n");
    sb.append("    glFollowBaseAccountAllocation: ").append(toIndentedString(glFollowBaseAccountAllocation)).append("\n");
    sb.append("    grossUp: ").append(toIndentedString(grossUp)).append("\n");
    sb.append("    grossUpTarget: ").append(toIndentedString(grossUpTarget)).append("\n");
    sb.append("    grossUpTaxCalculationMethod: ").append(toIndentedString(grossUpTaxCalculationMethod)).append("\n");
    sb.append("    hourlyPayRate: ").append(toIndentedString(hourlyPayRate)).append("\n");
    sb.append("    includeInDeferredCompensation: ").append(toIndentedString(includeInDeferredCompensation)).append("\n");
    sb.append("    includeInDeferredCompensationHours: ").append(toIndentedString(includeInDeferredCompensationHours)).append("\n");
    sb.append("    isVoided: ").append(toIndentedString(isVoided)).append("\n");
    sb.append("    isVoidingRecord: ").append(toIndentedString(isVoidingRecord)).append("\n");
    sb.append("    jobCode: ").append(toIndentedString(jobCode)).append("\n");
    sb.append("    jobPremiumAmount: ").append(toIndentedString(jobPremiumAmount)).append("\n");
    sb.append("    jobPremiumRateOrPercent: ").append(toIndentedString(jobPremiumRateOrPercent)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    numberOfDays: ").append(toIndentedString(numberOfDays)).append("\n");
    sb.append("    numberOfGames: ").append(toIndentedString(numberOfGames)).append("\n");
    sb.append("    payDate: ").append(toIndentedString(payDate)).append("\n");
    sb.append("    payoutRateType: ").append(toIndentedString(payoutRateType)).append("\n");
    sb.append("    payRate: ").append(toIndentedString(payRate)).append("\n");
    sb.append("    paySheetID: ").append(toIndentedString(paySheetID)).append("\n");
    sb.append("    periodPayRate: ").append(toIndentedString(periodPayRate)).append("\n");
    sb.append("    pieceCount: ").append(toIndentedString(pieceCount)).append("\n");
    sb.append("    piecePayRate: ").append(toIndentedString(piecePayRate)).append("\n");
    sb.append("    planYear: ").append(toIndentedString(planYear)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    reportCategory: ").append(toIndentedString(reportCategory)).append("\n");
    sb.append("    taxCalculationGroupId: ").append(toIndentedString(taxCalculationGroupId)).append("\n");
    sb.append("    taxCategory: ").append(toIndentedString(taxCategory)).append("\n");
    sb.append("    timeClockCode: ").append(toIndentedString(timeClockCode)).append("\n");
    sb.append("    tipCredit: ").append(toIndentedString(tipCredit)).append("\n");
    sb.append("    tipGrossReceipts: ").append(toIndentedString(tipGrossReceipts)).append("\n");
    sb.append("    tipType: ").append(toIndentedString(tipType)).append("\n");
    sb.append("    useDeductionOffSet: ").append(toIndentedString(useDeductionOffSet)).append("\n");
    sb.append("    ytdAmount: ").append(toIndentedString(ytdAmount)).append("\n");
    sb.append("    ytdShiftAmount: ").append(toIndentedString(ytdShiftAmount)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("employeeId");
    openapiFields.add("companyId");
    openapiFields.add("earningCode");
    openapiFields.add("employeeNumber");
    openapiFields.add("genNumber");
    openapiFields.add("periodControl");
    openapiFields.add("payGroup");
    openapiFields.add("accrualCode");
    openapiFields.add("baseAmount");
    openapiFields.add("batchID");
    openapiFields.add("calculationRule");
    openapiFields.add("calculationSequence");
    openapiFields.add("currentAmount");
    openapiFields.add("currentHours");
    openapiFields.add("glBaseSegmentId");
    openapiFields.add("glFollowBaseAccountAllocation");
    openapiFields.add("grossUp");
    openapiFields.add("grossUpTarget");
    openapiFields.add("grossUpTaxCalculationMethod");
    openapiFields.add("hourlyPayRate");
    openapiFields.add("includeInDeferredCompensation");
    openapiFields.add("includeInDeferredCompensationHours");
    openapiFields.add("isVoided");
    openapiFields.add("isVoidingRecord");
    openapiFields.add("jobCode");
    openapiFields.add("jobPremiumAmount");
    openapiFields.add("jobPremiumRateOrPercent");
    openapiFields.add("location");
    openapiFields.add("numberOfDays");
    openapiFields.add("numberOfGames");
    openapiFields.add("payDate");
    openapiFields.add("payoutRateType");
    openapiFields.add("payRate");
    openapiFields.add("paySheetID");
    openapiFields.add("periodPayRate");
    openapiFields.add("pieceCount");
    openapiFields.add("piecePayRate");
    openapiFields.add("planYear");
    openapiFields.add("project");
    openapiFields.add("reportCategory");
    openapiFields.add("taxCalculationGroupId");
    openapiFields.add("taxCategory");
    openapiFields.add("timeClockCode");
    openapiFields.add("tipCredit");
    openapiFields.add("tipGrossReceipts");
    openapiFields.add("tipType");
    openapiFields.add("useDeductionOffSet");
    openapiFields.add("ytdAmount");
    openapiFields.add("ytdShiftAmount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EarningsHistoryBaseElements
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EarningsHistoryBaseElements.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EarningsHistoryBaseElements is not found in the empty JSON string", EarningsHistoryBaseElements.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("earningCode") != null && !jsonObj.get("earningCode").isJsonNull()) && !jsonObj.get("earningCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `earningCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("earningCode").toString()));
      }
      if ((jsonObj.get("employeeNumber") != null && !jsonObj.get("employeeNumber").isJsonNull()) && !jsonObj.get("employeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeNumber").toString()));
      }
      if ((jsonObj.get("genNumber") != null && !jsonObj.get("genNumber").isJsonNull()) && !jsonObj.get("genNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `genNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("genNumber").toString()));
      }
      if ((jsonObj.get("periodControl") != null && !jsonObj.get("periodControl").isJsonNull()) && !jsonObj.get("periodControl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `periodControl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("periodControl").toString()));
      }
      if ((jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) && !jsonObj.get("payGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroup").toString()));
      }
      if ((jsonObj.get("accrualCode") != null && !jsonObj.get("accrualCode").isJsonNull()) && !jsonObj.get("accrualCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accrualCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accrualCode").toString()));
      }
      if ((jsonObj.get("batchID") != null && !jsonObj.get("batchID").isJsonNull()) && !jsonObj.get("batchID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `batchID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("batchID").toString()));
      }
      if ((jsonObj.get("calculationRule") != null && !jsonObj.get("calculationRule").isJsonNull()) && !jsonObj.get("calculationRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `calculationRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("calculationRule").toString()));
      }
      if ((jsonObj.get("calculationSequence") != null && !jsonObj.get("calculationSequence").isJsonNull()) && !jsonObj.get("calculationSequence").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `calculationSequence` to be a primitive type in the JSON string but got `%s`", jsonObj.get("calculationSequence").toString()));
      }
      if ((jsonObj.get("glBaseSegmentId") != null && !jsonObj.get("glBaseSegmentId").isJsonNull()) && !jsonObj.get("glBaseSegmentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `glBaseSegmentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("glBaseSegmentId").toString()));
      }
      if ((jsonObj.get("glFollowBaseAccountAllocation") != null && !jsonObj.get("glFollowBaseAccountAllocation").isJsonNull()) && !jsonObj.get("glFollowBaseAccountAllocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `glFollowBaseAccountAllocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("glFollowBaseAccountAllocation").toString()));
      }
      if ((jsonObj.get("grossUp") != null && !jsonObj.get("grossUp").isJsonNull()) && !jsonObj.get("grossUp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `grossUp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("grossUp").toString()));
      }
      if ((jsonObj.get("jobCode") != null && !jsonObj.get("jobCode").isJsonNull()) && !jsonObj.get("jobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobCode").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("payoutRateType") != null && !jsonObj.get("payoutRateType").isJsonNull()) && !jsonObj.get("payoutRateType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payoutRateType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payoutRateType").toString()));
      }
      if ((jsonObj.get("paySheetID") != null && !jsonObj.get("paySheetID").isJsonNull()) && !jsonObj.get("paySheetID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paySheetID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paySheetID").toString()));
      }
      if ((jsonObj.get("planYear") != null && !jsonObj.get("planYear").isJsonNull()) && !jsonObj.get("planYear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `planYear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("planYear").toString()));
      }
      if ((jsonObj.get("project") != null && !jsonObj.get("project").isJsonNull()) && !jsonObj.get("project").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `project` to be a primitive type in the JSON string but got `%s`", jsonObj.get("project").toString()));
      }
      if ((jsonObj.get("reportCategory") != null && !jsonObj.get("reportCategory").isJsonNull()) && !jsonObj.get("reportCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reportCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reportCategory").toString()));
      }
      if ((jsonObj.get("taxCalculationGroupId") != null && !jsonObj.get("taxCalculationGroupId").isJsonNull()) && !jsonObj.get("taxCalculationGroupId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalculationGroupId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalculationGroupId").toString()));
      }
      if ((jsonObj.get("taxCategory") != null && !jsonObj.get("taxCategory").isJsonNull()) && !jsonObj.get("taxCategory").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCategory` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCategory").toString()));
      }
      if ((jsonObj.get("timeClockCode") != null && !jsonObj.get("timeClockCode").isJsonNull()) && !jsonObj.get("timeClockCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeClockCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeClockCode").toString()));
      }
      if ((jsonObj.get("tipType") != null && !jsonObj.get("tipType").isJsonNull()) && !jsonObj.get("tipType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tipType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tipType").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EarningsHistoryBaseElements.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EarningsHistoryBaseElements' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EarningsHistoryBaseElements> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EarningsHistoryBaseElements.class));

       return (TypeAdapter<T>) new TypeAdapter<EarningsHistoryBaseElements>() {
           @Override
           public void write(JsonWriter out, EarningsHistoryBaseElements value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EarningsHistoryBaseElements read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EarningsHistoryBaseElements instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EarningsHistoryBaseElements given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EarningsHistoryBaseElements
  * @throws IOException if the JSON string is invalid with respect to EarningsHistoryBaseElements
  */
  public static EarningsHistoryBaseElements fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EarningsHistoryBaseElements.class);
  }

 /**
  * Convert an instance of EarningsHistoryBaseElements to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

