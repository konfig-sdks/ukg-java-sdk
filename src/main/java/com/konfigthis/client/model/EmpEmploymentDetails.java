/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmpEmploymentDetails
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmpEmploymentDetails {
  public static final String SERIALIZED_NAME_COMPANY_I_D = "companyID";
  @SerializedName(SERIALIZED_NAME_COMPANY_I_D)
  private String companyID;

  public static final String SERIALIZED_NAME_COMPANY_CODE = "companyCode";
  @SerializedName(SERIALIZED_NAME_COMPANY_CODE)
  private String companyCode;

  public static final String SERIALIZED_NAME_COMPANY_NAME = "companyName";
  @SerializedName(SERIALIZED_NAME_COMPANY_NAME)
  private String companyName;

  public static final String SERIALIZED_NAME_EMPLOYEE_I_D = "employeeID";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_I_D)
  private String employeeID;

  public static final String SERIALIZED_NAME_JOB_DESCRIPTION = "jobDescription";
  @SerializedName(SERIALIZED_NAME_JOB_DESCRIPTION)
  private String jobDescription;

  public static final String SERIALIZED_NAME_PAY_GROUP_DESCRIPTION = "payGroupDescription";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP_DESCRIPTION)
  private String payGroupDescription;

  public static final String SERIALIZED_NAME_PRIMARY_JOB_CODE = "primaryJobCode";
  @SerializedName(SERIALIZED_NAME_PRIMARY_JOB_CODE)
  private String primaryJobCode;

  public static final String SERIALIZED_NAME_ORG_LEVEL1_CODE = "orgLevel1Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL1_CODE)
  private String orgLevel1Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL2_CODE = "orgLevel2Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL2_CODE)
  private String orgLevel2Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL3_CODE = "orgLevel3Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL3_CODE)
  private String orgLevel3Code;

  public static final String SERIALIZED_NAME_ORG_LEVEL4_CODE = "orgLevel4Code";
  @SerializedName(SERIALIZED_NAME_ORG_LEVEL4_CODE)
  private String orgLevel4Code;

  public static final String SERIALIZED_NAME_ORIGINAL_HIRE_DATE = "originalHireDate";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_HIRE_DATE)
  private OffsetDateTime originalHireDate;

  public static final String SERIALIZED_NAME_LAST_HIRE_DATE = "lastHireDate";
  @SerializedName(SERIALIZED_NAME_LAST_HIRE_DATE)
  private OffsetDateTime lastHireDate;

  public static final String SERIALIZED_NAME_FULL_TIME_OR_PART_TIME_CODE = "fullTimeOrPartTimeCode";
  @SerializedName(SERIALIZED_NAME_FULL_TIME_OR_PART_TIME_CODE)
  private String fullTimeOrPartTimeCode;

  public static final String SERIALIZED_NAME_PRIMARY_WORK_LOCATION_CODE = "primaryWorkLocationCode";
  @SerializedName(SERIALIZED_NAME_PRIMARY_WORK_LOCATION_CODE)
  private String primaryWorkLocationCode;

  public static final String SERIALIZED_NAME_LANGUAGE_CODE = "languageCode";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_CODE)
  private String languageCode;

  public static final String SERIALIZED_NAME_PRIMARY_PROJECT_CODE = "primaryProjectCode";
  @SerializedName(SERIALIZED_NAME_PRIMARY_PROJECT_CODE)
  private String primaryProjectCode;

  public static final String SERIALIZED_NAME_WORK_PHONE_NUMBER = "workPhoneNumber";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_NUMBER)
  private String workPhoneNumber;

  public static final String SERIALIZED_NAME_WORK_PHONE_EXTENSION = "workPhoneExtension";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_EXTENSION)
  private String workPhoneExtension;

  public static final String SERIALIZED_NAME_WORK_PHONE_COUNTRY = "workPhoneCountry";
  @SerializedName(SERIALIZED_NAME_WORK_PHONE_COUNTRY)
  private String workPhoneCountry;

  public static final String SERIALIZED_NAME_DATE_IN_JOB = "dateInJob";
  @SerializedName(SERIALIZED_NAME_DATE_IN_JOB)
  private OffsetDateTime dateInJob;

  public static final String SERIALIZED_NAME_DATE_LAST_WORKED = "dateLastWorked";
  @SerializedName(SERIALIZED_NAME_DATE_LAST_WORKED)
  private OffsetDateTime dateLastWorked;

  public static final String SERIALIZED_NAME_DATE_OF_BENEFIT_SENIORITY = "dateOfBenefitSeniority";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BENEFIT_SENIORITY)
  private OffsetDateTime dateOfBenefitSeniority;

  public static final String SERIALIZED_NAME_DATE_OF_SENIORITY = "dateOfSeniority";
  @SerializedName(SERIALIZED_NAME_DATE_OF_SENIORITY)
  private OffsetDateTime dateOfSeniority;

  public static final String SERIALIZED_NAME_DEDUCTION_GROUP_CODE = "deductionGroupCode";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_GROUP_CODE)
  private String deductionGroupCode;

  public static final String SERIALIZED_NAME_EARNING_GROUP_CODE = "earningGroupCode";
  @SerializedName(SERIALIZED_NAME_EARNING_GROUP_CODE)
  private String earningGroupCode;

  public static final String SERIALIZED_NAME_EMPLOYEE_TYPE_CODE = "employeeTypeCode";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_TYPE_CODE)
  private String employeeTypeCode;

  public static final String SERIALIZED_NAME_EMPLOYEE_STATUS_CODE = "employeeStatusCode";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_STATUS_CODE)
  private String employeeStatusCode;

  public static final String SERIALIZED_NAME_EMPLOYEE_NUMBER = "employeeNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_NUMBER)
  private String employeeNumber;

  public static final String SERIALIZED_NAME_JOB_CHANGE_REASON_CODE = "jobChangeReasonCode";
  @SerializedName(SERIALIZED_NAME_JOB_CHANGE_REASON_CODE)
  private String jobChangeReasonCode;

  public static final String SERIALIZED_NAME_JOB_TITLE = "jobTitle";
  @SerializedName(SERIALIZED_NAME_JOB_TITLE)
  private String jobTitle;

  public static final String SERIALIZED_NAME_LEAVE_REASON_CODE = "leaveReasonCode";
  @SerializedName(SERIALIZED_NAME_LEAVE_REASON_CODE)
  private String leaveReasonCode;

  public static final String SERIALIZED_NAME_SUPERVISOR_I_D = "supervisorID";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_I_D)
  private String supervisorID;

  public static final String SERIALIZED_NAME_SUPERVISOR_FIRST_NAME = "supervisorFirstName";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_FIRST_NAME)
  private String supervisorFirstName;

  public static final String SERIALIZED_NAME_SUPERVISOR_LAST_NAME = "supervisorLastName";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_LAST_NAME)
  private String supervisorLastName;

  public static final String SERIALIZED_NAME_AUTO_ALLOCATE = "autoAllocate";
  @SerializedName(SERIALIZED_NAME_AUTO_ALLOCATE)
  private String autoAllocate;

  public static final String SERIALIZED_NAME_CLOCK_CODE = "clockCode";
  @SerializedName(SERIALIZED_NAME_CLOCK_CODE)
  private String clockCode;

  public static final String SERIALIZED_NAME_DATE_LAST_PAY_DATE_PAID = "dateLastPayDatePaid";
  @SerializedName(SERIALIZED_NAME_DATE_LAST_PAY_DATE_PAID)
  private OffsetDateTime dateLastPayDatePaid;

  public static final String SERIALIZED_NAME_DATE_OF_EARLY_RETIREMENT = "dateOfEarlyRetirement";
  @SerializedName(SERIALIZED_NAME_DATE_OF_EARLY_RETIREMENT)
  private OffsetDateTime dateOfEarlyRetirement;

  public static final String SERIALIZED_NAME_DATE_OF_LOCAL_UNION = "dateOfLocalUnion";
  @SerializedName(SERIALIZED_NAME_DATE_OF_LOCAL_UNION)
  private OffsetDateTime dateOfLocalUnion;

  public static final String SERIALIZED_NAME_DATE_OF_NATIONAL_UNION = "dateOfNationalUnion";
  @SerializedName(SERIALIZED_NAME_DATE_OF_NATIONAL_UNION)
  private OffsetDateTime dateOfNationalUnion;

  public static final String SERIALIZED_NAME_DATE_OF_RETIREMENT = "dateOfRetirement";
  @SerializedName(SERIALIZED_NAME_DATE_OF_RETIREMENT)
  private OffsetDateTime dateOfRetirement;

  public static final String SERIALIZED_NAME_DATE_OF_SUSPENSION = "dateOfSuspension";
  @SerializedName(SERIALIZED_NAME_DATE_OF_SUSPENSION)
  private OffsetDateTime dateOfSuspension;

  public static final String SERIALIZED_NAME_DATE_OF_TERMINATION = "dateOfTermination";
  @SerializedName(SERIALIZED_NAME_DATE_OF_TERMINATION)
  private OffsetDateTime dateOfTermination;

  public static final String SERIALIZED_NAME_DATE_PAID_THRU = "datePaidThru";
  @SerializedName(SERIALIZED_NAME_DATE_PAID_THRU)
  private OffsetDateTime datePaidThru;

  public static final String SERIALIZED_NAME_STATUS_START_DATE = "statusStartDate";
  @SerializedName(SERIALIZED_NAME_STATUS_START_DATE)
  private OffsetDateTime statusStartDate;

  public static final String SERIALIZED_NAME_HIRE_SOURCE = "hireSource";
  @SerializedName(SERIALIZED_NAME_HIRE_SOURCE)
  private String hireSource;

  public static final String SERIALIZED_NAME_IS_AUTO_ALLOCATED = "isAutoAllocated";
  @SerializedName(SERIALIZED_NAME_IS_AUTO_ALLOCATED)
  private String isAutoAllocated;

  public static final String SERIALIZED_NAME_IS_AUTOPAID = "isAutopaid";
  @SerializedName(SERIALIZED_NAME_IS_AUTOPAID)
  private String isAutopaid;

  public static final String SERIALIZED_NAME_IS_MULTIPLE_JOB = "isMultipleJob";
  @SerializedName(SERIALIZED_NAME_IS_MULTIPLE_JOB)
  private String isMultipleJob;

  public static final String SERIALIZED_NAME_JOB_GROUP_CODE = "jobGroupCode";
  @SerializedName(SERIALIZED_NAME_JOB_GROUP_CODE)
  private String jobGroupCode;

  public static final String SERIALIZED_NAME_MAILSTOP = "mailstop";
  @SerializedName(SERIALIZED_NAME_MAILSTOP)
  private String mailstop;

  public static final String SERIALIZED_NAME_OK_TO_REHIRE = "okToRehire";
  @SerializedName(SERIALIZED_NAME_OK_TO_REHIRE)
  private String okToRehire;

  public static final String SERIALIZED_NAME_PAY_GROUP = "payGroup";
  @SerializedName(SERIALIZED_NAME_PAY_GROUP)
  private String payGroup;

  public static final String SERIALIZED_NAME_PAY_PERIOD = "payPeriod";
  @SerializedName(SERIALIZED_NAME_PAY_PERIOD)
  private String payPeriod;

  public static final String SERIALIZED_NAME_PLANNED_LEAVE_REASON = "plannedLeaveReason";
  @SerializedName(SERIALIZED_NAME_PLANNED_LEAVE_REASON)
  private String plannedLeaveReason;

  public static final String SERIALIZED_NAME_POSITION_CODE = "positionCode";
  @SerializedName(SERIALIZED_NAME_POSITION_CODE)
  private String positionCode;

  public static final String SERIALIZED_NAME_SALARY_OR_HOURLY = "salaryOrHourly";
  @SerializedName(SERIALIZED_NAME_SALARY_OR_HOURLY)
  private String salaryOrHourly;

  public static final String SERIALIZED_NAME_SCHEDULED_ANNUAL_HRS = "scheduledAnnualHrs";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_ANNUAL_HRS)
  private Double scheduledAnnualHrs;

  public static final String SERIALIZED_NAME_SCHEDULED_F_T_E = "scheduledFTE";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_F_T_E)
  private Double scheduledFTE;

  public static final String SERIALIZED_NAME_SCHEDULED_WORK_HRS = "scheduledWorkHrs";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_WORK_HRS)
  private Double scheduledWorkHrs;

  public static final String SERIALIZED_NAME_SHIFT = "shift";
  @SerializedName(SERIALIZED_NAME_SHIFT)
  private String shift;

  public static final String SERIALIZED_NAME_SHIFT_GROUP = "shiftGroup";
  @SerializedName(SERIALIZED_NAME_SHIFT_GROUP)
  private String shiftGroup;

  public static final String SERIALIZED_NAME_TERM_REASON = "termReason";
  @SerializedName(SERIALIZED_NAME_TERM_REASON)
  private String termReason;

  public static final String SERIALIZED_NAME_TERMINATION_REASON_DESCRIPTION = "terminationReasonDescription";
  @SerializedName(SERIALIZED_NAME_TERMINATION_REASON_DESCRIPTION)
  private String terminationReasonDescription;

  public static final String SERIALIZED_NAME_TERM_TYPE = "termType";
  @SerializedName(SERIALIZED_NAME_TERM_TYPE)
  private String termType;

  public static final String SERIALIZED_NAME_TIMECLOCK_I_D = "timeclockID";
  @SerializedName(SERIALIZED_NAME_TIMECLOCK_I_D)
  private String timeclockID;

  public static final String SERIALIZED_NAME_UNION_LOCAL = "unionLocal";
  @SerializedName(SERIALIZED_NAME_UNION_LOCAL)
  private String unionLocal;

  public static final String SERIALIZED_NAME_UNION_NATIONAL = "unionNational";
  @SerializedName(SERIALIZED_NAME_UNION_NATIONAL)
  private String unionNational;

  public static final String SERIALIZED_NAME_WEEKLY_HOURS = "weeklyHours";
  @SerializedName(SERIALIZED_NAME_WEEKLY_HOURS)
  private Double weeklyHours;

  public static final String SERIALIZED_NAME_DATE_TIME_CREATED = "dateTimeCreated";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_CREATED)
  private OffsetDateTime dateTimeCreated;

  public static final String SERIALIZED_NAME_DATE_TIME_CHANGED = "dateTimeChanged";
  @SerializedName(SERIALIZED_NAME_DATE_TIME_CHANGED)
  private OffsetDateTime dateTimeChanged;

  public static final String SERIALIZED_NAME_SUPERVISOR_EMPLOYEE_NUMBER = "supervisorEmployeeNumber";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_EMPLOYEE_NUMBER)
  private String supervisorEmployeeNumber;

  public static final String SERIALIZED_NAME_SUPERVISOR_C_O_I_D = "supervisorCOID";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_C_O_I_D)
  private String supervisorCOID;

  public static final String SERIALIZED_NAME_SUPERVISOR_COMPANY_CODE = "supervisorCompanyCode";
  @SerializedName(SERIALIZED_NAME_SUPERVISOR_COMPANY_CODE)
  private String supervisorCompanyCode;

  public static final String SERIALIZED_NAME_COMPANY_G_L_SEGMENT = "companyGLSegment";
  @SerializedName(SERIALIZED_NAME_COMPANY_G_L_SEGMENT)
  private String companyGLSegment;

  public static final String SERIALIZED_NAME_LOCATION_G_L_SEGMENT = "locationGLSegment";
  @SerializedName(SERIALIZED_NAME_LOCATION_G_L_SEGMENT)
  private String locationGLSegment;

  public EmpEmploymentDetails() {
  }

  public EmpEmploymentDetails companyID(String companyID) {
    
    
    
    
    this.companyID = companyID;
    return this;
  }

   /**
   * Get companyID
   * @return companyID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyID() {
    return companyID;
  }


  public void setCompanyID(String companyID) {
    
    
    
    this.companyID = companyID;
  }


  public EmpEmploymentDetails companyCode(String companyCode) {
    
    
    
    
    this.companyCode = companyCode;
    return this;
  }

   /**
   * Get companyCode
   * @return companyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyCode() {
    return companyCode;
  }


  public void setCompanyCode(String companyCode) {
    
    
    
    this.companyCode = companyCode;
  }


  public EmpEmploymentDetails companyName(String companyName) {
    
    
    
    
    this.companyName = companyName;
    return this;
  }

   /**
   * Get companyName
   * @return companyName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyName() {
    return companyName;
  }


  public void setCompanyName(String companyName) {
    
    
    
    this.companyName = companyName;
  }


  public EmpEmploymentDetails employeeID(String employeeID) {
    
    
    
    
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Get employeeID
   * @return employeeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeID() {
    return employeeID;
  }


  public void setEmployeeID(String employeeID) {
    
    
    
    this.employeeID = employeeID;
  }


  public EmpEmploymentDetails jobDescription(String jobDescription) {
    
    
    
    
    this.jobDescription = jobDescription;
    return this;
  }

   /**
   * Get jobDescription
   * @return jobDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobDescription() {
    return jobDescription;
  }


  public void setJobDescription(String jobDescription) {
    
    
    
    this.jobDescription = jobDescription;
  }


  public EmpEmploymentDetails payGroupDescription(String payGroupDescription) {
    
    
    
    
    this.payGroupDescription = payGroupDescription;
    return this;
  }

   /**
   * Get payGroupDescription
   * @return payGroupDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroupDescription() {
    return payGroupDescription;
  }


  public void setPayGroupDescription(String payGroupDescription) {
    
    
    
    this.payGroupDescription = payGroupDescription;
  }


  public EmpEmploymentDetails primaryJobCode(String primaryJobCode) {
    
    
    
    
    this.primaryJobCode = primaryJobCode;
    return this;
  }

   /**
   * Get primaryJobCode
   * @return primaryJobCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryJobCode() {
    return primaryJobCode;
  }


  public void setPrimaryJobCode(String primaryJobCode) {
    
    
    
    this.primaryJobCode = primaryJobCode;
  }


  public EmpEmploymentDetails orgLevel1Code(String orgLevel1Code) {
    
    
    
    
    this.orgLevel1Code = orgLevel1Code;
    return this;
  }

   /**
   * Get orgLevel1Code
   * @return orgLevel1Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel1Code() {
    return orgLevel1Code;
  }


  public void setOrgLevel1Code(String orgLevel1Code) {
    
    
    
    this.orgLevel1Code = orgLevel1Code;
  }


  public EmpEmploymentDetails orgLevel2Code(String orgLevel2Code) {
    
    
    
    
    this.orgLevel2Code = orgLevel2Code;
    return this;
  }

   /**
   * Get orgLevel2Code
   * @return orgLevel2Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel2Code() {
    return orgLevel2Code;
  }


  public void setOrgLevel2Code(String orgLevel2Code) {
    
    
    
    this.orgLevel2Code = orgLevel2Code;
  }


  public EmpEmploymentDetails orgLevel3Code(String orgLevel3Code) {
    
    
    
    
    this.orgLevel3Code = orgLevel3Code;
    return this;
  }

   /**
   * Get orgLevel3Code
   * @return orgLevel3Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel3Code() {
    return orgLevel3Code;
  }


  public void setOrgLevel3Code(String orgLevel3Code) {
    
    
    
    this.orgLevel3Code = orgLevel3Code;
  }


  public EmpEmploymentDetails orgLevel4Code(String orgLevel4Code) {
    
    
    
    
    this.orgLevel4Code = orgLevel4Code;
    return this;
  }

   /**
   * Get orgLevel4Code
   * @return orgLevel4Code
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrgLevel4Code() {
    return orgLevel4Code;
  }


  public void setOrgLevel4Code(String orgLevel4Code) {
    
    
    
    this.orgLevel4Code = orgLevel4Code;
  }


  public EmpEmploymentDetails originalHireDate(OffsetDateTime originalHireDate) {
    
    
    
    
    this.originalHireDate = originalHireDate;
    return this;
  }

   /**
   * Get originalHireDate
   * @return originalHireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getOriginalHireDate() {
    return originalHireDate;
  }


  public void setOriginalHireDate(OffsetDateTime originalHireDate) {
    
    
    
    this.originalHireDate = originalHireDate;
  }


  public EmpEmploymentDetails lastHireDate(OffsetDateTime lastHireDate) {
    
    
    
    
    this.lastHireDate = lastHireDate;
    return this;
  }

   /**
   * Get lastHireDate
   * @return lastHireDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getLastHireDate() {
    return lastHireDate;
  }


  public void setLastHireDate(OffsetDateTime lastHireDate) {
    
    
    
    this.lastHireDate = lastHireDate;
  }


  public EmpEmploymentDetails fullTimeOrPartTimeCode(String fullTimeOrPartTimeCode) {
    
    
    
    
    this.fullTimeOrPartTimeCode = fullTimeOrPartTimeCode;
    return this;
  }

   /**
   * Get fullTimeOrPartTimeCode
   * @return fullTimeOrPartTimeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullTimeOrPartTimeCode() {
    return fullTimeOrPartTimeCode;
  }


  public void setFullTimeOrPartTimeCode(String fullTimeOrPartTimeCode) {
    
    
    
    this.fullTimeOrPartTimeCode = fullTimeOrPartTimeCode;
  }


  public EmpEmploymentDetails primaryWorkLocationCode(String primaryWorkLocationCode) {
    
    
    
    
    this.primaryWorkLocationCode = primaryWorkLocationCode;
    return this;
  }

   /**
   * Get primaryWorkLocationCode
   * @return primaryWorkLocationCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryWorkLocationCode() {
    return primaryWorkLocationCode;
  }


  public void setPrimaryWorkLocationCode(String primaryWorkLocationCode) {
    
    
    
    this.primaryWorkLocationCode = primaryWorkLocationCode;
  }


  public EmpEmploymentDetails languageCode(String languageCode) {
    
    
    
    
    this.languageCode = languageCode;
    return this;
  }

   /**
   * Get languageCode
   * @return languageCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLanguageCode() {
    return languageCode;
  }


  public void setLanguageCode(String languageCode) {
    
    
    
    this.languageCode = languageCode;
  }


  public EmpEmploymentDetails primaryProjectCode(String primaryProjectCode) {
    
    
    
    
    this.primaryProjectCode = primaryProjectCode;
    return this;
  }

   /**
   * Get primaryProjectCode
   * @return primaryProjectCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryProjectCode() {
    return primaryProjectCode;
  }


  public void setPrimaryProjectCode(String primaryProjectCode) {
    
    
    
    this.primaryProjectCode = primaryProjectCode;
  }


  public EmpEmploymentDetails workPhoneNumber(String workPhoneNumber) {
    
    
    
    
    this.workPhoneNumber = workPhoneNumber;
    return this;
  }

   /**
   * Get workPhoneNumber
   * @return workPhoneNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhoneNumber() {
    return workPhoneNumber;
  }


  public void setWorkPhoneNumber(String workPhoneNumber) {
    
    
    
    this.workPhoneNumber = workPhoneNumber;
  }


  public EmpEmploymentDetails workPhoneExtension(String workPhoneExtension) {
    
    
    
    
    this.workPhoneExtension = workPhoneExtension;
    return this;
  }

   /**
   * Get workPhoneExtension
   * @return workPhoneExtension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhoneExtension() {
    return workPhoneExtension;
  }


  public void setWorkPhoneExtension(String workPhoneExtension) {
    
    
    
    this.workPhoneExtension = workPhoneExtension;
  }


  public EmpEmploymentDetails workPhoneCountry(String workPhoneCountry) {
    
    
    
    
    this.workPhoneCountry = workPhoneCountry;
    return this;
  }

   /**
   * Get workPhoneCountry
   * @return workPhoneCountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkPhoneCountry() {
    return workPhoneCountry;
  }


  public void setWorkPhoneCountry(String workPhoneCountry) {
    
    
    
    this.workPhoneCountry = workPhoneCountry;
  }


  public EmpEmploymentDetails dateInJob(OffsetDateTime dateInJob) {
    
    
    
    
    this.dateInJob = dateInJob;
    return this;
  }

   /**
   * Get dateInJob
   * @return dateInJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateInJob() {
    return dateInJob;
  }


  public void setDateInJob(OffsetDateTime dateInJob) {
    
    
    
    this.dateInJob = dateInJob;
  }


  public EmpEmploymentDetails dateLastWorked(OffsetDateTime dateLastWorked) {
    
    
    
    
    this.dateLastWorked = dateLastWorked;
    return this;
  }

   /**
   * Get dateLastWorked
   * @return dateLastWorked
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateLastWorked() {
    return dateLastWorked;
  }


  public void setDateLastWorked(OffsetDateTime dateLastWorked) {
    
    
    
    this.dateLastWorked = dateLastWorked;
  }


  public EmpEmploymentDetails dateOfBenefitSeniority(OffsetDateTime dateOfBenefitSeniority) {
    
    
    
    
    this.dateOfBenefitSeniority = dateOfBenefitSeniority;
    return this;
  }

   /**
   * Get dateOfBenefitSeniority
   * @return dateOfBenefitSeniority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfBenefitSeniority() {
    return dateOfBenefitSeniority;
  }


  public void setDateOfBenefitSeniority(OffsetDateTime dateOfBenefitSeniority) {
    
    
    
    this.dateOfBenefitSeniority = dateOfBenefitSeniority;
  }


  public EmpEmploymentDetails dateOfSeniority(OffsetDateTime dateOfSeniority) {
    
    
    
    
    this.dateOfSeniority = dateOfSeniority;
    return this;
  }

   /**
   * Get dateOfSeniority
   * @return dateOfSeniority
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfSeniority() {
    return dateOfSeniority;
  }


  public void setDateOfSeniority(OffsetDateTime dateOfSeniority) {
    
    
    
    this.dateOfSeniority = dateOfSeniority;
  }


  public EmpEmploymentDetails deductionGroupCode(String deductionGroupCode) {
    
    
    
    
    this.deductionGroupCode = deductionGroupCode;
    return this;
  }

   /**
   * Get deductionGroupCode
   * @return deductionGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionGroupCode() {
    return deductionGroupCode;
  }


  public void setDeductionGroupCode(String deductionGroupCode) {
    
    
    
    this.deductionGroupCode = deductionGroupCode;
  }


  public EmpEmploymentDetails earningGroupCode(String earningGroupCode) {
    
    
    
    
    this.earningGroupCode = earningGroupCode;
    return this;
  }

   /**
   * Get earningGroupCode
   * @return earningGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEarningGroupCode() {
    return earningGroupCode;
  }


  public void setEarningGroupCode(String earningGroupCode) {
    
    
    
    this.earningGroupCode = earningGroupCode;
  }


  public EmpEmploymentDetails employeeTypeCode(String employeeTypeCode) {
    
    
    
    
    this.employeeTypeCode = employeeTypeCode;
    return this;
  }

   /**
   * Get employeeTypeCode
   * @return employeeTypeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeTypeCode() {
    return employeeTypeCode;
  }


  public void setEmployeeTypeCode(String employeeTypeCode) {
    
    
    
    this.employeeTypeCode = employeeTypeCode;
  }


  public EmpEmploymentDetails employeeStatusCode(String employeeStatusCode) {
    
    
    
    
    this.employeeStatusCode = employeeStatusCode;
    return this;
  }

   /**
   * Get employeeStatusCode
   * @return employeeStatusCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeStatusCode() {
    return employeeStatusCode;
  }


  public void setEmployeeStatusCode(String employeeStatusCode) {
    
    
    
    this.employeeStatusCode = employeeStatusCode;
  }


  public EmpEmploymentDetails employeeNumber(String employeeNumber) {
    
    
    
    
    this.employeeNumber = employeeNumber;
    return this;
  }

   /**
   * Get employeeNumber
   * @return employeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeNumber() {
    return employeeNumber;
  }


  public void setEmployeeNumber(String employeeNumber) {
    
    
    
    this.employeeNumber = employeeNumber;
  }


  public EmpEmploymentDetails jobChangeReasonCode(String jobChangeReasonCode) {
    
    
    
    
    this.jobChangeReasonCode = jobChangeReasonCode;
    return this;
  }

   /**
   * Get jobChangeReasonCode
   * @return jobChangeReasonCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobChangeReasonCode() {
    return jobChangeReasonCode;
  }


  public void setJobChangeReasonCode(String jobChangeReasonCode) {
    
    
    
    this.jobChangeReasonCode = jobChangeReasonCode;
  }


  public EmpEmploymentDetails jobTitle(String jobTitle) {
    
    
    
    
    this.jobTitle = jobTitle;
    return this;
  }

   /**
   * Get jobTitle
   * @return jobTitle
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobTitle() {
    return jobTitle;
  }


  public void setJobTitle(String jobTitle) {
    
    
    
    this.jobTitle = jobTitle;
  }


  public EmpEmploymentDetails leaveReasonCode(String leaveReasonCode) {
    
    
    
    
    this.leaveReasonCode = leaveReasonCode;
    return this;
  }

   /**
   * Get leaveReasonCode
   * @return leaveReasonCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLeaveReasonCode() {
    return leaveReasonCode;
  }


  public void setLeaveReasonCode(String leaveReasonCode) {
    
    
    
    this.leaveReasonCode = leaveReasonCode;
  }


  public EmpEmploymentDetails supervisorID(String supervisorID) {
    
    
    
    
    this.supervisorID = supervisorID;
    return this;
  }

   /**
   * Get supervisorID
   * @return supervisorID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorID() {
    return supervisorID;
  }


  public void setSupervisorID(String supervisorID) {
    
    
    
    this.supervisorID = supervisorID;
  }


  public EmpEmploymentDetails supervisorFirstName(String supervisorFirstName) {
    
    
    
    
    this.supervisorFirstName = supervisorFirstName;
    return this;
  }

   /**
   * Get supervisorFirstName
   * @return supervisorFirstName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorFirstName() {
    return supervisorFirstName;
  }


  public void setSupervisorFirstName(String supervisorFirstName) {
    
    
    
    this.supervisorFirstName = supervisorFirstName;
  }


  public EmpEmploymentDetails supervisorLastName(String supervisorLastName) {
    
    
    
    
    this.supervisorLastName = supervisorLastName;
    return this;
  }

   /**
   * Get supervisorLastName
   * @return supervisorLastName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorLastName() {
    return supervisorLastName;
  }


  public void setSupervisorLastName(String supervisorLastName) {
    
    
    
    this.supervisorLastName = supervisorLastName;
  }


  public EmpEmploymentDetails autoAllocate(String autoAllocate) {
    
    
    
    
    this.autoAllocate = autoAllocate;
    return this;
  }

   /**
   * Get autoAllocate
   * @return autoAllocate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAutoAllocate() {
    return autoAllocate;
  }


  public void setAutoAllocate(String autoAllocate) {
    
    
    
    this.autoAllocate = autoAllocate;
  }


  public EmpEmploymentDetails clockCode(String clockCode) {
    
    
    
    
    this.clockCode = clockCode;
    return this;
  }

   /**
   * Get clockCode
   * @return clockCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getClockCode() {
    return clockCode;
  }


  public void setClockCode(String clockCode) {
    
    
    
    this.clockCode = clockCode;
  }


  public EmpEmploymentDetails dateLastPayDatePaid(OffsetDateTime dateLastPayDatePaid) {
    
    
    
    
    this.dateLastPayDatePaid = dateLastPayDatePaid;
    return this;
  }

   /**
   * Get dateLastPayDatePaid
   * @return dateLastPayDatePaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateLastPayDatePaid() {
    return dateLastPayDatePaid;
  }


  public void setDateLastPayDatePaid(OffsetDateTime dateLastPayDatePaid) {
    
    
    
    this.dateLastPayDatePaid = dateLastPayDatePaid;
  }


  public EmpEmploymentDetails dateOfEarlyRetirement(OffsetDateTime dateOfEarlyRetirement) {
    
    
    
    
    this.dateOfEarlyRetirement = dateOfEarlyRetirement;
    return this;
  }

   /**
   * Get dateOfEarlyRetirement
   * @return dateOfEarlyRetirement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfEarlyRetirement() {
    return dateOfEarlyRetirement;
  }


  public void setDateOfEarlyRetirement(OffsetDateTime dateOfEarlyRetirement) {
    
    
    
    this.dateOfEarlyRetirement = dateOfEarlyRetirement;
  }


  public EmpEmploymentDetails dateOfLocalUnion(OffsetDateTime dateOfLocalUnion) {
    
    
    
    
    this.dateOfLocalUnion = dateOfLocalUnion;
    return this;
  }

   /**
   * Get dateOfLocalUnion
   * @return dateOfLocalUnion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfLocalUnion() {
    return dateOfLocalUnion;
  }


  public void setDateOfLocalUnion(OffsetDateTime dateOfLocalUnion) {
    
    
    
    this.dateOfLocalUnion = dateOfLocalUnion;
  }


  public EmpEmploymentDetails dateOfNationalUnion(OffsetDateTime dateOfNationalUnion) {
    
    
    
    
    this.dateOfNationalUnion = dateOfNationalUnion;
    return this;
  }

   /**
   * Get dateOfNationalUnion
   * @return dateOfNationalUnion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfNationalUnion() {
    return dateOfNationalUnion;
  }


  public void setDateOfNationalUnion(OffsetDateTime dateOfNationalUnion) {
    
    
    
    this.dateOfNationalUnion = dateOfNationalUnion;
  }


  public EmpEmploymentDetails dateOfRetirement(OffsetDateTime dateOfRetirement) {
    
    
    
    
    this.dateOfRetirement = dateOfRetirement;
    return this;
  }

   /**
   * Get dateOfRetirement
   * @return dateOfRetirement
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfRetirement() {
    return dateOfRetirement;
  }


  public void setDateOfRetirement(OffsetDateTime dateOfRetirement) {
    
    
    
    this.dateOfRetirement = dateOfRetirement;
  }


  public EmpEmploymentDetails dateOfSuspension(OffsetDateTime dateOfSuspension) {
    
    
    
    
    this.dateOfSuspension = dateOfSuspension;
    return this;
  }

   /**
   * Get dateOfSuspension
   * @return dateOfSuspension
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfSuspension() {
    return dateOfSuspension;
  }


  public void setDateOfSuspension(OffsetDateTime dateOfSuspension) {
    
    
    
    this.dateOfSuspension = dateOfSuspension;
  }


  public EmpEmploymentDetails dateOfTermination(OffsetDateTime dateOfTermination) {
    
    
    
    
    this.dateOfTermination = dateOfTermination;
    return this;
  }

   /**
   * Get dateOfTermination
   * @return dateOfTermination
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateOfTermination() {
    return dateOfTermination;
  }


  public void setDateOfTermination(OffsetDateTime dateOfTermination) {
    
    
    
    this.dateOfTermination = dateOfTermination;
  }


  public EmpEmploymentDetails datePaidThru(OffsetDateTime datePaidThru) {
    
    
    
    
    this.datePaidThru = datePaidThru;
    return this;
  }

   /**
   * Get datePaidThru
   * @return datePaidThru
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDatePaidThru() {
    return datePaidThru;
  }


  public void setDatePaidThru(OffsetDateTime datePaidThru) {
    
    
    
    this.datePaidThru = datePaidThru;
  }


  public EmpEmploymentDetails statusStartDate(OffsetDateTime statusStartDate) {
    
    
    
    
    this.statusStartDate = statusStartDate;
    return this;
  }

   /**
   * Get statusStartDate
   * @return statusStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStatusStartDate() {
    return statusStartDate;
  }


  public void setStatusStartDate(OffsetDateTime statusStartDate) {
    
    
    
    this.statusStartDate = statusStartDate;
  }


  public EmpEmploymentDetails hireSource(String hireSource) {
    
    
    
    
    this.hireSource = hireSource;
    return this;
  }

   /**
   * Get hireSource
   * @return hireSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getHireSource() {
    return hireSource;
  }


  public void setHireSource(String hireSource) {
    
    
    
    this.hireSource = hireSource;
  }


  public EmpEmploymentDetails isAutoAllocated(String isAutoAllocated) {
    
    
    
    
    this.isAutoAllocated = isAutoAllocated;
    return this;
  }

   /**
   * Get isAutoAllocated
   * @return isAutoAllocated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsAutoAllocated() {
    return isAutoAllocated;
  }


  public void setIsAutoAllocated(String isAutoAllocated) {
    
    
    
    this.isAutoAllocated = isAutoAllocated;
  }


  public EmpEmploymentDetails isAutopaid(String isAutopaid) {
    
    
    
    
    this.isAutopaid = isAutopaid;
    return this;
  }

   /**
   * Get isAutopaid
   * @return isAutopaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsAutopaid() {
    return isAutopaid;
  }


  public void setIsAutopaid(String isAutopaid) {
    
    
    
    this.isAutopaid = isAutopaid;
  }


  public EmpEmploymentDetails isMultipleJob(String isMultipleJob) {
    
    
    
    
    this.isMultipleJob = isMultipleJob;
    return this;
  }

   /**
   * Get isMultipleJob
   * @return isMultipleJob
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getIsMultipleJob() {
    return isMultipleJob;
  }


  public void setIsMultipleJob(String isMultipleJob) {
    
    
    
    this.isMultipleJob = isMultipleJob;
  }


  public EmpEmploymentDetails jobGroupCode(String jobGroupCode) {
    
    
    
    
    this.jobGroupCode = jobGroupCode;
    return this;
  }

   /**
   * Get jobGroupCode
   * @return jobGroupCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJobGroupCode() {
    return jobGroupCode;
  }


  public void setJobGroupCode(String jobGroupCode) {
    
    
    
    this.jobGroupCode = jobGroupCode;
  }


  public EmpEmploymentDetails mailstop(String mailstop) {
    
    
    
    
    this.mailstop = mailstop;
    return this;
  }

   /**
   * Get mailstop
   * @return mailstop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMailstop() {
    return mailstop;
  }


  public void setMailstop(String mailstop) {
    
    
    
    this.mailstop = mailstop;
  }


  public EmpEmploymentDetails okToRehire(String okToRehire) {
    
    
    
    
    this.okToRehire = okToRehire;
    return this;
  }

   /**
   * Get okToRehire
   * @return okToRehire
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOkToRehire() {
    return okToRehire;
  }


  public void setOkToRehire(String okToRehire) {
    
    
    
    this.okToRehire = okToRehire;
  }


  public EmpEmploymentDetails payGroup(String payGroup) {
    
    
    
    
    this.payGroup = payGroup;
    return this;
  }

   /**
   * Get payGroup
   * @return payGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayGroup() {
    return payGroup;
  }


  public void setPayGroup(String payGroup) {
    
    
    
    this.payGroup = payGroup;
  }


  public EmpEmploymentDetails payPeriod(String payPeriod) {
    
    
    
    
    this.payPeriod = payPeriod;
    return this;
  }

   /**
   * Get payPeriod
   * @return payPeriod
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayPeriod() {
    return payPeriod;
  }


  public void setPayPeriod(String payPeriod) {
    
    
    
    this.payPeriod = payPeriod;
  }


  public EmpEmploymentDetails plannedLeaveReason(String plannedLeaveReason) {
    
    
    
    
    this.plannedLeaveReason = plannedLeaveReason;
    return this;
  }

   /**
   * Get plannedLeaveReason
   * @return plannedLeaveReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPlannedLeaveReason() {
    return plannedLeaveReason;
  }


  public void setPlannedLeaveReason(String plannedLeaveReason) {
    
    
    
    this.plannedLeaveReason = plannedLeaveReason;
  }


  public EmpEmploymentDetails positionCode(String positionCode) {
    
    
    
    
    this.positionCode = positionCode;
    return this;
  }

   /**
   * Get positionCode
   * @return positionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPositionCode() {
    return positionCode;
  }


  public void setPositionCode(String positionCode) {
    
    
    
    this.positionCode = positionCode;
  }


  public EmpEmploymentDetails salaryOrHourly(String salaryOrHourly) {
    
    
    
    
    this.salaryOrHourly = salaryOrHourly;
    return this;
  }

   /**
   * Get salaryOrHourly
   * @return salaryOrHourly
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSalaryOrHourly() {
    return salaryOrHourly;
  }


  public void setSalaryOrHourly(String salaryOrHourly) {
    
    
    
    this.salaryOrHourly = salaryOrHourly;
  }


  public EmpEmploymentDetails scheduledAnnualHrs(Double scheduledAnnualHrs) {
    
    
    
    
    this.scheduledAnnualHrs = scheduledAnnualHrs;
    return this;
  }

   /**
   * Get scheduledAnnualHrs
   * @return scheduledAnnualHrs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledAnnualHrs() {
    return scheduledAnnualHrs;
  }


  public void setScheduledAnnualHrs(Double scheduledAnnualHrs) {
    
    
    
    this.scheduledAnnualHrs = scheduledAnnualHrs;
  }


  public EmpEmploymentDetails scheduledFTE(Double scheduledFTE) {
    
    
    
    
    this.scheduledFTE = scheduledFTE;
    return this;
  }

   /**
   * Get scheduledFTE
   * @return scheduledFTE
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledFTE() {
    return scheduledFTE;
  }


  public void setScheduledFTE(Double scheduledFTE) {
    
    
    
    this.scheduledFTE = scheduledFTE;
  }


  public EmpEmploymentDetails scheduledWorkHrs(Double scheduledWorkHrs) {
    
    
    
    
    this.scheduledWorkHrs = scheduledWorkHrs;
    return this;
  }

   /**
   * Get scheduledWorkHrs
   * @return scheduledWorkHrs
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getScheduledWorkHrs() {
    return scheduledWorkHrs;
  }


  public void setScheduledWorkHrs(Double scheduledWorkHrs) {
    
    
    
    this.scheduledWorkHrs = scheduledWorkHrs;
  }


  public EmpEmploymentDetails shift(String shift) {
    
    
    
    
    this.shift = shift;
    return this;
  }

   /**
   * Get shift
   * @return shift
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShift() {
    return shift;
  }


  public void setShift(String shift) {
    
    
    
    this.shift = shift;
  }


  public EmpEmploymentDetails shiftGroup(String shiftGroup) {
    
    
    
    
    this.shiftGroup = shiftGroup;
    return this;
  }

   /**
   * Get shiftGroup
   * @return shiftGroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getShiftGroup() {
    return shiftGroup;
  }


  public void setShiftGroup(String shiftGroup) {
    
    
    
    this.shiftGroup = shiftGroup;
  }


  public EmpEmploymentDetails termReason(String termReason) {
    
    
    
    
    this.termReason = termReason;
    return this;
  }

   /**
   * Get termReason
   * @return termReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTermReason() {
    return termReason;
  }


  public void setTermReason(String termReason) {
    
    
    
    this.termReason = termReason;
  }


  public EmpEmploymentDetails terminationReasonDescription(String terminationReasonDescription) {
    
    
    
    
    this.terminationReasonDescription = terminationReasonDescription;
    return this;
  }

   /**
   * Get terminationReasonDescription
   * @return terminationReasonDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTerminationReasonDescription() {
    return terminationReasonDescription;
  }


  public void setTerminationReasonDescription(String terminationReasonDescription) {
    
    
    
    this.terminationReasonDescription = terminationReasonDescription;
  }


  public EmpEmploymentDetails termType(String termType) {
    
    
    
    
    this.termType = termType;
    return this;
  }

   /**
   * Get termType
   * @return termType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTermType() {
    return termType;
  }


  public void setTermType(String termType) {
    
    
    
    this.termType = termType;
  }


  public EmpEmploymentDetails timeclockID(String timeclockID) {
    
    
    
    
    this.timeclockID = timeclockID;
    return this;
  }

   /**
   * Get timeclockID
   * @return timeclockID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTimeclockID() {
    return timeclockID;
  }


  public void setTimeclockID(String timeclockID) {
    
    
    
    this.timeclockID = timeclockID;
  }


  public EmpEmploymentDetails unionLocal(String unionLocal) {
    
    
    
    
    this.unionLocal = unionLocal;
    return this;
  }

   /**
   * Get unionLocal
   * @return unionLocal
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnionLocal() {
    return unionLocal;
  }


  public void setUnionLocal(String unionLocal) {
    
    
    
    this.unionLocal = unionLocal;
  }


  public EmpEmploymentDetails unionNational(String unionNational) {
    
    
    
    
    this.unionNational = unionNational;
    return this;
  }

   /**
   * Get unionNational
   * @return unionNational
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getUnionNational() {
    return unionNational;
  }


  public void setUnionNational(String unionNational) {
    
    
    
    this.unionNational = unionNational;
  }


  public EmpEmploymentDetails weeklyHours(Double weeklyHours) {
    
    
    
    
    this.weeklyHours = weeklyHours;
    return this;
  }

   /**
   * Get weeklyHours
   * @return weeklyHours
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getWeeklyHours() {
    return weeklyHours;
  }


  public void setWeeklyHours(Double weeklyHours) {
    
    
    
    this.weeklyHours = weeklyHours;
  }


  public EmpEmploymentDetails dateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    
    this.dateTimeCreated = dateTimeCreated;
    return this;
  }

   /**
   * Get dateTimeCreated
   * @return dateTimeCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeCreated() {
    return dateTimeCreated;
  }


  public void setDateTimeCreated(OffsetDateTime dateTimeCreated) {
    
    
    
    this.dateTimeCreated = dateTimeCreated;
  }


  public EmpEmploymentDetails dateTimeChanged(OffsetDateTime dateTimeChanged) {
    
    
    
    
    this.dateTimeChanged = dateTimeChanged;
    return this;
  }

   /**
   * Get dateTimeChanged
   * @return dateTimeChanged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateTimeChanged() {
    return dateTimeChanged;
  }


  public void setDateTimeChanged(OffsetDateTime dateTimeChanged) {
    
    
    
    this.dateTimeChanged = dateTimeChanged;
  }


  public EmpEmploymentDetails supervisorEmployeeNumber(String supervisorEmployeeNumber) {
    
    
    
    
    this.supervisorEmployeeNumber = supervisorEmployeeNumber;
    return this;
  }

   /**
   * Get supervisorEmployeeNumber
   * @return supervisorEmployeeNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorEmployeeNumber() {
    return supervisorEmployeeNumber;
  }


  public void setSupervisorEmployeeNumber(String supervisorEmployeeNumber) {
    
    
    
    this.supervisorEmployeeNumber = supervisorEmployeeNumber;
  }


  public EmpEmploymentDetails supervisorCOID(String supervisorCOID) {
    
    
    
    
    this.supervisorCOID = supervisorCOID;
    return this;
  }

   /**
   * Get supervisorCOID
   * @return supervisorCOID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorCOID() {
    return supervisorCOID;
  }


  public void setSupervisorCOID(String supervisorCOID) {
    
    
    
    this.supervisorCOID = supervisorCOID;
  }


  public EmpEmploymentDetails supervisorCompanyCode(String supervisorCompanyCode) {
    
    
    
    
    this.supervisorCompanyCode = supervisorCompanyCode;
    return this;
  }

   /**
   * Get supervisorCompanyCode
   * @return supervisorCompanyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSupervisorCompanyCode() {
    return supervisorCompanyCode;
  }


  public void setSupervisorCompanyCode(String supervisorCompanyCode) {
    
    
    
    this.supervisorCompanyCode = supervisorCompanyCode;
  }


  public EmpEmploymentDetails companyGLSegment(String companyGLSegment) {
    
    
    
    
    this.companyGLSegment = companyGLSegment;
    return this;
  }

   /**
   * Get companyGLSegment
   * @return companyGLSegment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyGLSegment() {
    return companyGLSegment;
  }


  public void setCompanyGLSegment(String companyGLSegment) {
    
    
    
    this.companyGLSegment = companyGLSegment;
  }


  public EmpEmploymentDetails locationGLSegment(String locationGLSegment) {
    
    
    
    
    this.locationGLSegment = locationGLSegment;
    return this;
  }

   /**
   * Get locationGLSegment
   * @return locationGLSegment
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocationGLSegment() {
    return locationGLSegment;
  }


  public void setLocationGLSegment(String locationGLSegment) {
    
    
    
    this.locationGLSegment = locationGLSegment;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmpEmploymentDetails instance itself
   */
  public EmpEmploymentDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmpEmploymentDetails empEmploymentDetails = (EmpEmploymentDetails) o;
    return Objects.equals(this.companyID, empEmploymentDetails.companyID) &&
        Objects.equals(this.companyCode, empEmploymentDetails.companyCode) &&
        Objects.equals(this.companyName, empEmploymentDetails.companyName) &&
        Objects.equals(this.employeeID, empEmploymentDetails.employeeID) &&
        Objects.equals(this.jobDescription, empEmploymentDetails.jobDescription) &&
        Objects.equals(this.payGroupDescription, empEmploymentDetails.payGroupDescription) &&
        Objects.equals(this.primaryJobCode, empEmploymentDetails.primaryJobCode) &&
        Objects.equals(this.orgLevel1Code, empEmploymentDetails.orgLevel1Code) &&
        Objects.equals(this.orgLevel2Code, empEmploymentDetails.orgLevel2Code) &&
        Objects.equals(this.orgLevel3Code, empEmploymentDetails.orgLevel3Code) &&
        Objects.equals(this.orgLevel4Code, empEmploymentDetails.orgLevel4Code) &&
        Objects.equals(this.originalHireDate, empEmploymentDetails.originalHireDate) &&
        Objects.equals(this.lastHireDate, empEmploymentDetails.lastHireDate) &&
        Objects.equals(this.fullTimeOrPartTimeCode, empEmploymentDetails.fullTimeOrPartTimeCode) &&
        Objects.equals(this.primaryWorkLocationCode, empEmploymentDetails.primaryWorkLocationCode) &&
        Objects.equals(this.languageCode, empEmploymentDetails.languageCode) &&
        Objects.equals(this.primaryProjectCode, empEmploymentDetails.primaryProjectCode) &&
        Objects.equals(this.workPhoneNumber, empEmploymentDetails.workPhoneNumber) &&
        Objects.equals(this.workPhoneExtension, empEmploymentDetails.workPhoneExtension) &&
        Objects.equals(this.workPhoneCountry, empEmploymentDetails.workPhoneCountry) &&
        Objects.equals(this.dateInJob, empEmploymentDetails.dateInJob) &&
        Objects.equals(this.dateLastWorked, empEmploymentDetails.dateLastWorked) &&
        Objects.equals(this.dateOfBenefitSeniority, empEmploymentDetails.dateOfBenefitSeniority) &&
        Objects.equals(this.dateOfSeniority, empEmploymentDetails.dateOfSeniority) &&
        Objects.equals(this.deductionGroupCode, empEmploymentDetails.deductionGroupCode) &&
        Objects.equals(this.earningGroupCode, empEmploymentDetails.earningGroupCode) &&
        Objects.equals(this.employeeTypeCode, empEmploymentDetails.employeeTypeCode) &&
        Objects.equals(this.employeeStatusCode, empEmploymentDetails.employeeStatusCode) &&
        Objects.equals(this.employeeNumber, empEmploymentDetails.employeeNumber) &&
        Objects.equals(this.jobChangeReasonCode, empEmploymentDetails.jobChangeReasonCode) &&
        Objects.equals(this.jobTitle, empEmploymentDetails.jobTitle) &&
        Objects.equals(this.leaveReasonCode, empEmploymentDetails.leaveReasonCode) &&
        Objects.equals(this.supervisorID, empEmploymentDetails.supervisorID) &&
        Objects.equals(this.supervisorFirstName, empEmploymentDetails.supervisorFirstName) &&
        Objects.equals(this.supervisorLastName, empEmploymentDetails.supervisorLastName) &&
        Objects.equals(this.autoAllocate, empEmploymentDetails.autoAllocate) &&
        Objects.equals(this.clockCode, empEmploymentDetails.clockCode) &&
        Objects.equals(this.dateLastPayDatePaid, empEmploymentDetails.dateLastPayDatePaid) &&
        Objects.equals(this.dateOfEarlyRetirement, empEmploymentDetails.dateOfEarlyRetirement) &&
        Objects.equals(this.dateOfLocalUnion, empEmploymentDetails.dateOfLocalUnion) &&
        Objects.equals(this.dateOfNationalUnion, empEmploymentDetails.dateOfNationalUnion) &&
        Objects.equals(this.dateOfRetirement, empEmploymentDetails.dateOfRetirement) &&
        Objects.equals(this.dateOfSuspension, empEmploymentDetails.dateOfSuspension) &&
        Objects.equals(this.dateOfTermination, empEmploymentDetails.dateOfTermination) &&
        Objects.equals(this.datePaidThru, empEmploymentDetails.datePaidThru) &&
        Objects.equals(this.statusStartDate, empEmploymentDetails.statusStartDate) &&
        Objects.equals(this.hireSource, empEmploymentDetails.hireSource) &&
        Objects.equals(this.isAutoAllocated, empEmploymentDetails.isAutoAllocated) &&
        Objects.equals(this.isAutopaid, empEmploymentDetails.isAutopaid) &&
        Objects.equals(this.isMultipleJob, empEmploymentDetails.isMultipleJob) &&
        Objects.equals(this.jobGroupCode, empEmploymentDetails.jobGroupCode) &&
        Objects.equals(this.mailstop, empEmploymentDetails.mailstop) &&
        Objects.equals(this.okToRehire, empEmploymentDetails.okToRehire) &&
        Objects.equals(this.payGroup, empEmploymentDetails.payGroup) &&
        Objects.equals(this.payPeriod, empEmploymentDetails.payPeriod) &&
        Objects.equals(this.plannedLeaveReason, empEmploymentDetails.plannedLeaveReason) &&
        Objects.equals(this.positionCode, empEmploymentDetails.positionCode) &&
        Objects.equals(this.salaryOrHourly, empEmploymentDetails.salaryOrHourly) &&
        Objects.equals(this.scheduledAnnualHrs, empEmploymentDetails.scheduledAnnualHrs) &&
        Objects.equals(this.scheduledFTE, empEmploymentDetails.scheduledFTE) &&
        Objects.equals(this.scheduledWorkHrs, empEmploymentDetails.scheduledWorkHrs) &&
        Objects.equals(this.shift, empEmploymentDetails.shift) &&
        Objects.equals(this.shiftGroup, empEmploymentDetails.shiftGroup) &&
        Objects.equals(this.termReason, empEmploymentDetails.termReason) &&
        Objects.equals(this.terminationReasonDescription, empEmploymentDetails.terminationReasonDescription) &&
        Objects.equals(this.termType, empEmploymentDetails.termType) &&
        Objects.equals(this.timeclockID, empEmploymentDetails.timeclockID) &&
        Objects.equals(this.unionLocal, empEmploymentDetails.unionLocal) &&
        Objects.equals(this.unionNational, empEmploymentDetails.unionNational) &&
        Objects.equals(this.weeklyHours, empEmploymentDetails.weeklyHours) &&
        Objects.equals(this.dateTimeCreated, empEmploymentDetails.dateTimeCreated) &&
        Objects.equals(this.dateTimeChanged, empEmploymentDetails.dateTimeChanged) &&
        Objects.equals(this.supervisorEmployeeNumber, empEmploymentDetails.supervisorEmployeeNumber) &&
        Objects.equals(this.supervisorCOID, empEmploymentDetails.supervisorCOID) &&
        Objects.equals(this.supervisorCompanyCode, empEmploymentDetails.supervisorCompanyCode) &&
        Objects.equals(this.companyGLSegment, empEmploymentDetails.companyGLSegment) &&
        Objects.equals(this.locationGLSegment, empEmploymentDetails.locationGLSegment)&&
        Objects.equals(this.additionalProperties, empEmploymentDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(companyID, companyCode, companyName, employeeID, jobDescription, payGroupDescription, primaryJobCode, orgLevel1Code, orgLevel2Code, orgLevel3Code, orgLevel4Code, originalHireDate, lastHireDate, fullTimeOrPartTimeCode, primaryWorkLocationCode, languageCode, primaryProjectCode, workPhoneNumber, workPhoneExtension, workPhoneCountry, dateInJob, dateLastWorked, dateOfBenefitSeniority, dateOfSeniority, deductionGroupCode, earningGroupCode, employeeTypeCode, employeeStatusCode, employeeNumber, jobChangeReasonCode, jobTitle, leaveReasonCode, supervisorID, supervisorFirstName, supervisorLastName, autoAllocate, clockCode, dateLastPayDatePaid, dateOfEarlyRetirement, dateOfLocalUnion, dateOfNationalUnion, dateOfRetirement, dateOfSuspension, dateOfTermination, datePaidThru, statusStartDate, hireSource, isAutoAllocated, isAutopaid, isMultipleJob, jobGroupCode, mailstop, okToRehire, payGroup, payPeriod, plannedLeaveReason, positionCode, salaryOrHourly, scheduledAnnualHrs, scheduledFTE, scheduledWorkHrs, shift, shiftGroup, termReason, terminationReasonDescription, termType, timeclockID, unionLocal, unionNational, weeklyHours, dateTimeCreated, dateTimeChanged, supervisorEmployeeNumber, supervisorCOID, supervisorCompanyCode, companyGLSegment, locationGLSegment, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmpEmploymentDetails {\n");
    sb.append("    companyID: ").append(toIndentedString(companyID)).append("\n");
    sb.append("    companyCode: ").append(toIndentedString(companyCode)).append("\n");
    sb.append("    companyName: ").append(toIndentedString(companyName)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    jobDescription: ").append(toIndentedString(jobDescription)).append("\n");
    sb.append("    payGroupDescription: ").append(toIndentedString(payGroupDescription)).append("\n");
    sb.append("    primaryJobCode: ").append(toIndentedString(primaryJobCode)).append("\n");
    sb.append("    orgLevel1Code: ").append(toIndentedString(orgLevel1Code)).append("\n");
    sb.append("    orgLevel2Code: ").append(toIndentedString(orgLevel2Code)).append("\n");
    sb.append("    orgLevel3Code: ").append(toIndentedString(orgLevel3Code)).append("\n");
    sb.append("    orgLevel4Code: ").append(toIndentedString(orgLevel4Code)).append("\n");
    sb.append("    originalHireDate: ").append(toIndentedString(originalHireDate)).append("\n");
    sb.append("    lastHireDate: ").append(toIndentedString(lastHireDate)).append("\n");
    sb.append("    fullTimeOrPartTimeCode: ").append(toIndentedString(fullTimeOrPartTimeCode)).append("\n");
    sb.append("    primaryWorkLocationCode: ").append(toIndentedString(primaryWorkLocationCode)).append("\n");
    sb.append("    languageCode: ").append(toIndentedString(languageCode)).append("\n");
    sb.append("    primaryProjectCode: ").append(toIndentedString(primaryProjectCode)).append("\n");
    sb.append("    workPhoneNumber: ").append(toIndentedString(workPhoneNumber)).append("\n");
    sb.append("    workPhoneExtension: ").append(toIndentedString(workPhoneExtension)).append("\n");
    sb.append("    workPhoneCountry: ").append(toIndentedString(workPhoneCountry)).append("\n");
    sb.append("    dateInJob: ").append(toIndentedString(dateInJob)).append("\n");
    sb.append("    dateLastWorked: ").append(toIndentedString(dateLastWorked)).append("\n");
    sb.append("    dateOfBenefitSeniority: ").append(toIndentedString(dateOfBenefitSeniority)).append("\n");
    sb.append("    dateOfSeniority: ").append(toIndentedString(dateOfSeniority)).append("\n");
    sb.append("    deductionGroupCode: ").append(toIndentedString(deductionGroupCode)).append("\n");
    sb.append("    earningGroupCode: ").append(toIndentedString(earningGroupCode)).append("\n");
    sb.append("    employeeTypeCode: ").append(toIndentedString(employeeTypeCode)).append("\n");
    sb.append("    employeeStatusCode: ").append(toIndentedString(employeeStatusCode)).append("\n");
    sb.append("    employeeNumber: ").append(toIndentedString(employeeNumber)).append("\n");
    sb.append("    jobChangeReasonCode: ").append(toIndentedString(jobChangeReasonCode)).append("\n");
    sb.append("    jobTitle: ").append(toIndentedString(jobTitle)).append("\n");
    sb.append("    leaveReasonCode: ").append(toIndentedString(leaveReasonCode)).append("\n");
    sb.append("    supervisorID: ").append(toIndentedString(supervisorID)).append("\n");
    sb.append("    supervisorFirstName: ").append(toIndentedString(supervisorFirstName)).append("\n");
    sb.append("    supervisorLastName: ").append(toIndentedString(supervisorLastName)).append("\n");
    sb.append("    autoAllocate: ").append(toIndentedString(autoAllocate)).append("\n");
    sb.append("    clockCode: ").append(toIndentedString(clockCode)).append("\n");
    sb.append("    dateLastPayDatePaid: ").append(toIndentedString(dateLastPayDatePaid)).append("\n");
    sb.append("    dateOfEarlyRetirement: ").append(toIndentedString(dateOfEarlyRetirement)).append("\n");
    sb.append("    dateOfLocalUnion: ").append(toIndentedString(dateOfLocalUnion)).append("\n");
    sb.append("    dateOfNationalUnion: ").append(toIndentedString(dateOfNationalUnion)).append("\n");
    sb.append("    dateOfRetirement: ").append(toIndentedString(dateOfRetirement)).append("\n");
    sb.append("    dateOfSuspension: ").append(toIndentedString(dateOfSuspension)).append("\n");
    sb.append("    dateOfTermination: ").append(toIndentedString(dateOfTermination)).append("\n");
    sb.append("    datePaidThru: ").append(toIndentedString(datePaidThru)).append("\n");
    sb.append("    statusStartDate: ").append(toIndentedString(statusStartDate)).append("\n");
    sb.append("    hireSource: ").append(toIndentedString(hireSource)).append("\n");
    sb.append("    isAutoAllocated: ").append(toIndentedString(isAutoAllocated)).append("\n");
    sb.append("    isAutopaid: ").append(toIndentedString(isAutopaid)).append("\n");
    sb.append("    isMultipleJob: ").append(toIndentedString(isMultipleJob)).append("\n");
    sb.append("    jobGroupCode: ").append(toIndentedString(jobGroupCode)).append("\n");
    sb.append("    mailstop: ").append(toIndentedString(mailstop)).append("\n");
    sb.append("    okToRehire: ").append(toIndentedString(okToRehire)).append("\n");
    sb.append("    payGroup: ").append(toIndentedString(payGroup)).append("\n");
    sb.append("    payPeriod: ").append(toIndentedString(payPeriod)).append("\n");
    sb.append("    plannedLeaveReason: ").append(toIndentedString(plannedLeaveReason)).append("\n");
    sb.append("    positionCode: ").append(toIndentedString(positionCode)).append("\n");
    sb.append("    salaryOrHourly: ").append(toIndentedString(salaryOrHourly)).append("\n");
    sb.append("    scheduledAnnualHrs: ").append(toIndentedString(scheduledAnnualHrs)).append("\n");
    sb.append("    scheduledFTE: ").append(toIndentedString(scheduledFTE)).append("\n");
    sb.append("    scheduledWorkHrs: ").append(toIndentedString(scheduledWorkHrs)).append("\n");
    sb.append("    shift: ").append(toIndentedString(shift)).append("\n");
    sb.append("    shiftGroup: ").append(toIndentedString(shiftGroup)).append("\n");
    sb.append("    termReason: ").append(toIndentedString(termReason)).append("\n");
    sb.append("    terminationReasonDescription: ").append(toIndentedString(terminationReasonDescription)).append("\n");
    sb.append("    termType: ").append(toIndentedString(termType)).append("\n");
    sb.append("    timeclockID: ").append(toIndentedString(timeclockID)).append("\n");
    sb.append("    unionLocal: ").append(toIndentedString(unionLocal)).append("\n");
    sb.append("    unionNational: ").append(toIndentedString(unionNational)).append("\n");
    sb.append("    weeklyHours: ").append(toIndentedString(weeklyHours)).append("\n");
    sb.append("    dateTimeCreated: ").append(toIndentedString(dateTimeCreated)).append("\n");
    sb.append("    dateTimeChanged: ").append(toIndentedString(dateTimeChanged)).append("\n");
    sb.append("    supervisorEmployeeNumber: ").append(toIndentedString(supervisorEmployeeNumber)).append("\n");
    sb.append("    supervisorCOID: ").append(toIndentedString(supervisorCOID)).append("\n");
    sb.append("    supervisorCompanyCode: ").append(toIndentedString(supervisorCompanyCode)).append("\n");
    sb.append("    companyGLSegment: ").append(toIndentedString(companyGLSegment)).append("\n");
    sb.append("    locationGLSegment: ").append(toIndentedString(locationGLSegment)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("companyID");
    openapiFields.add("companyCode");
    openapiFields.add("companyName");
    openapiFields.add("employeeID");
    openapiFields.add("jobDescription");
    openapiFields.add("payGroupDescription");
    openapiFields.add("primaryJobCode");
    openapiFields.add("orgLevel1Code");
    openapiFields.add("orgLevel2Code");
    openapiFields.add("orgLevel3Code");
    openapiFields.add("orgLevel4Code");
    openapiFields.add("originalHireDate");
    openapiFields.add("lastHireDate");
    openapiFields.add("fullTimeOrPartTimeCode");
    openapiFields.add("primaryWorkLocationCode");
    openapiFields.add("languageCode");
    openapiFields.add("primaryProjectCode");
    openapiFields.add("workPhoneNumber");
    openapiFields.add("workPhoneExtension");
    openapiFields.add("workPhoneCountry");
    openapiFields.add("dateInJob");
    openapiFields.add("dateLastWorked");
    openapiFields.add("dateOfBenefitSeniority");
    openapiFields.add("dateOfSeniority");
    openapiFields.add("deductionGroupCode");
    openapiFields.add("earningGroupCode");
    openapiFields.add("employeeTypeCode");
    openapiFields.add("employeeStatusCode");
    openapiFields.add("employeeNumber");
    openapiFields.add("jobChangeReasonCode");
    openapiFields.add("jobTitle");
    openapiFields.add("leaveReasonCode");
    openapiFields.add("supervisorID");
    openapiFields.add("supervisorFirstName");
    openapiFields.add("supervisorLastName");
    openapiFields.add("autoAllocate");
    openapiFields.add("clockCode");
    openapiFields.add("dateLastPayDatePaid");
    openapiFields.add("dateOfEarlyRetirement");
    openapiFields.add("dateOfLocalUnion");
    openapiFields.add("dateOfNationalUnion");
    openapiFields.add("dateOfRetirement");
    openapiFields.add("dateOfSuspension");
    openapiFields.add("dateOfTermination");
    openapiFields.add("datePaidThru");
    openapiFields.add("statusStartDate");
    openapiFields.add("hireSource");
    openapiFields.add("isAutoAllocated");
    openapiFields.add("isAutopaid");
    openapiFields.add("isMultipleJob");
    openapiFields.add("jobGroupCode");
    openapiFields.add("mailstop");
    openapiFields.add("okToRehire");
    openapiFields.add("payGroup");
    openapiFields.add("payPeriod");
    openapiFields.add("plannedLeaveReason");
    openapiFields.add("positionCode");
    openapiFields.add("salaryOrHourly");
    openapiFields.add("scheduledAnnualHrs");
    openapiFields.add("scheduledFTE");
    openapiFields.add("scheduledWorkHrs");
    openapiFields.add("shift");
    openapiFields.add("shiftGroup");
    openapiFields.add("termReason");
    openapiFields.add("terminationReasonDescription");
    openapiFields.add("termType");
    openapiFields.add("timeclockID");
    openapiFields.add("unionLocal");
    openapiFields.add("unionNational");
    openapiFields.add("weeklyHours");
    openapiFields.add("dateTimeCreated");
    openapiFields.add("dateTimeChanged");
    openapiFields.add("supervisorEmployeeNumber");
    openapiFields.add("supervisorCOID");
    openapiFields.add("supervisorCompanyCode");
    openapiFields.add("companyGLSegment");
    openapiFields.add("locationGLSegment");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmpEmploymentDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmpEmploymentDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmpEmploymentDetails is not found in the empty JSON string", EmpEmploymentDetails.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("companyID") != null && !jsonObj.get("companyID").isJsonNull()) && !jsonObj.get("companyID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyID").toString()));
      }
      if ((jsonObj.get("companyCode") != null && !jsonObj.get("companyCode").isJsonNull()) && !jsonObj.get("companyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyCode").toString()));
      }
      if ((jsonObj.get("companyName") != null && !jsonObj.get("companyName").isJsonNull()) && !jsonObj.get("companyName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyName").toString()));
      }
      if ((jsonObj.get("employeeID") != null && !jsonObj.get("employeeID").isJsonNull()) && !jsonObj.get("employeeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeID").toString()));
      }
      if ((jsonObj.get("jobDescription") != null && !jsonObj.get("jobDescription").isJsonNull()) && !jsonObj.get("jobDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobDescription").toString()));
      }
      if ((jsonObj.get("payGroupDescription") != null && !jsonObj.get("payGroupDescription").isJsonNull()) && !jsonObj.get("payGroupDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroupDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroupDescription").toString()));
      }
      if ((jsonObj.get("primaryJobCode") != null && !jsonObj.get("primaryJobCode").isJsonNull()) && !jsonObj.get("primaryJobCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryJobCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryJobCode").toString()));
      }
      if ((jsonObj.get("orgLevel1Code") != null && !jsonObj.get("orgLevel1Code").isJsonNull()) && !jsonObj.get("orgLevel1Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel1Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel1Code").toString()));
      }
      if ((jsonObj.get("orgLevel2Code") != null && !jsonObj.get("orgLevel2Code").isJsonNull()) && !jsonObj.get("orgLevel2Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel2Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel2Code").toString()));
      }
      if ((jsonObj.get("orgLevel3Code") != null && !jsonObj.get("orgLevel3Code").isJsonNull()) && !jsonObj.get("orgLevel3Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel3Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel3Code").toString()));
      }
      if ((jsonObj.get("orgLevel4Code") != null && !jsonObj.get("orgLevel4Code").isJsonNull()) && !jsonObj.get("orgLevel4Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orgLevel4Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orgLevel4Code").toString()));
      }
      if ((jsonObj.get("fullTimeOrPartTimeCode") != null && !jsonObj.get("fullTimeOrPartTimeCode").isJsonNull()) && !jsonObj.get("fullTimeOrPartTimeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullTimeOrPartTimeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullTimeOrPartTimeCode").toString()));
      }
      if ((jsonObj.get("primaryWorkLocationCode") != null && !jsonObj.get("primaryWorkLocationCode").isJsonNull()) && !jsonObj.get("primaryWorkLocationCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryWorkLocationCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryWorkLocationCode").toString()));
      }
      if ((jsonObj.get("languageCode") != null && !jsonObj.get("languageCode").isJsonNull()) && !jsonObj.get("languageCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageCode").toString()));
      }
      if ((jsonObj.get("primaryProjectCode") != null && !jsonObj.get("primaryProjectCode").isJsonNull()) && !jsonObj.get("primaryProjectCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryProjectCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryProjectCode").toString()));
      }
      if ((jsonObj.get("workPhoneNumber") != null && !jsonObj.get("workPhoneNumber").isJsonNull()) && !jsonObj.get("workPhoneNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneNumber").toString()));
      }
      if ((jsonObj.get("workPhoneExtension") != null && !jsonObj.get("workPhoneExtension").isJsonNull()) && !jsonObj.get("workPhoneExtension").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneExtension` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneExtension").toString()));
      }
      if ((jsonObj.get("workPhoneCountry") != null && !jsonObj.get("workPhoneCountry").isJsonNull()) && !jsonObj.get("workPhoneCountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workPhoneCountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workPhoneCountry").toString()));
      }
      if ((jsonObj.get("deductionGroupCode") != null && !jsonObj.get("deductionGroupCode").isJsonNull()) && !jsonObj.get("deductionGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionGroupCode").toString()));
      }
      if ((jsonObj.get("earningGroupCode") != null && !jsonObj.get("earningGroupCode").isJsonNull()) && !jsonObj.get("earningGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `earningGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("earningGroupCode").toString()));
      }
      if ((jsonObj.get("employeeTypeCode") != null && !jsonObj.get("employeeTypeCode").isJsonNull()) && !jsonObj.get("employeeTypeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeTypeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeTypeCode").toString()));
      }
      if ((jsonObj.get("employeeStatusCode") != null && !jsonObj.get("employeeStatusCode").isJsonNull()) && !jsonObj.get("employeeStatusCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeStatusCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeStatusCode").toString()));
      }
      if ((jsonObj.get("employeeNumber") != null && !jsonObj.get("employeeNumber").isJsonNull()) && !jsonObj.get("employeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeNumber").toString()));
      }
      if ((jsonObj.get("jobChangeReasonCode") != null && !jsonObj.get("jobChangeReasonCode").isJsonNull()) && !jsonObj.get("jobChangeReasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobChangeReasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobChangeReasonCode").toString()));
      }
      if ((jsonObj.get("jobTitle") != null && !jsonObj.get("jobTitle").isJsonNull()) && !jsonObj.get("jobTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobTitle").toString()));
      }
      if ((jsonObj.get("leaveReasonCode") != null && !jsonObj.get("leaveReasonCode").isJsonNull()) && !jsonObj.get("leaveReasonCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `leaveReasonCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("leaveReasonCode").toString()));
      }
      if ((jsonObj.get("supervisorID") != null && !jsonObj.get("supervisorID").isJsonNull()) && !jsonObj.get("supervisorID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorID").toString()));
      }
      if ((jsonObj.get("supervisorFirstName") != null && !jsonObj.get("supervisorFirstName").isJsonNull()) && !jsonObj.get("supervisorFirstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorFirstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorFirstName").toString()));
      }
      if ((jsonObj.get("supervisorLastName") != null && !jsonObj.get("supervisorLastName").isJsonNull()) && !jsonObj.get("supervisorLastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorLastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorLastName").toString()));
      }
      if ((jsonObj.get("autoAllocate") != null && !jsonObj.get("autoAllocate").isJsonNull()) && !jsonObj.get("autoAllocate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `autoAllocate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("autoAllocate").toString()));
      }
      if ((jsonObj.get("clockCode") != null && !jsonObj.get("clockCode").isJsonNull()) && !jsonObj.get("clockCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clockCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clockCode").toString()));
      }
      if ((jsonObj.get("hireSource") != null && !jsonObj.get("hireSource").isJsonNull()) && !jsonObj.get("hireSource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hireSource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hireSource").toString()));
      }
      if ((jsonObj.get("isAutoAllocated") != null && !jsonObj.get("isAutoAllocated").isJsonNull()) && !jsonObj.get("isAutoAllocated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isAutoAllocated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isAutoAllocated").toString()));
      }
      if ((jsonObj.get("isAutopaid") != null && !jsonObj.get("isAutopaid").isJsonNull()) && !jsonObj.get("isAutopaid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isAutopaid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isAutopaid").toString()));
      }
      if ((jsonObj.get("isMultipleJob") != null && !jsonObj.get("isMultipleJob").isJsonNull()) && !jsonObj.get("isMultipleJob").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `isMultipleJob` to be a primitive type in the JSON string but got `%s`", jsonObj.get("isMultipleJob").toString()));
      }
      if ((jsonObj.get("jobGroupCode") != null && !jsonObj.get("jobGroupCode").isJsonNull()) && !jsonObj.get("jobGroupCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `jobGroupCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("jobGroupCode").toString()));
      }
      if ((jsonObj.get("mailstop") != null && !jsonObj.get("mailstop").isJsonNull()) && !jsonObj.get("mailstop").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mailstop` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mailstop").toString()));
      }
      if ((jsonObj.get("okToRehire") != null && !jsonObj.get("okToRehire").isJsonNull()) && !jsonObj.get("okToRehire").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `okToRehire` to be a primitive type in the JSON string but got `%s`", jsonObj.get("okToRehire").toString()));
      }
      if ((jsonObj.get("payGroup") != null && !jsonObj.get("payGroup").isJsonNull()) && !jsonObj.get("payGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payGroup").toString()));
      }
      if ((jsonObj.get("payPeriod") != null && !jsonObj.get("payPeriod").isJsonNull()) && !jsonObj.get("payPeriod").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payPeriod` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payPeriod").toString()));
      }
      if ((jsonObj.get("plannedLeaveReason") != null && !jsonObj.get("plannedLeaveReason").isJsonNull()) && !jsonObj.get("plannedLeaveReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `plannedLeaveReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("plannedLeaveReason").toString()));
      }
      if ((jsonObj.get("positionCode") != null && !jsonObj.get("positionCode").isJsonNull()) && !jsonObj.get("positionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `positionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("positionCode").toString()));
      }
      if ((jsonObj.get("salaryOrHourly") != null && !jsonObj.get("salaryOrHourly").isJsonNull()) && !jsonObj.get("salaryOrHourly").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salaryOrHourly` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salaryOrHourly").toString()));
      }
      if ((jsonObj.get("shift") != null && !jsonObj.get("shift").isJsonNull()) && !jsonObj.get("shift").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shift` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shift").toString()));
      }
      if ((jsonObj.get("shiftGroup") != null && !jsonObj.get("shiftGroup").isJsonNull()) && !jsonObj.get("shiftGroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shiftGroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shiftGroup").toString()));
      }
      if ((jsonObj.get("termReason") != null && !jsonObj.get("termReason").isJsonNull()) && !jsonObj.get("termReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `termReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("termReason").toString()));
      }
      if ((jsonObj.get("terminationReasonDescription") != null && !jsonObj.get("terminationReasonDescription").isJsonNull()) && !jsonObj.get("terminationReasonDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `terminationReasonDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("terminationReasonDescription").toString()));
      }
      if ((jsonObj.get("termType") != null && !jsonObj.get("termType").isJsonNull()) && !jsonObj.get("termType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `termType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("termType").toString()));
      }
      if ((jsonObj.get("timeclockID") != null && !jsonObj.get("timeclockID").isJsonNull()) && !jsonObj.get("timeclockID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timeclockID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timeclockID").toString()));
      }
      if ((jsonObj.get("unionLocal") != null && !jsonObj.get("unionLocal").isJsonNull()) && !jsonObj.get("unionLocal").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unionLocal` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unionLocal").toString()));
      }
      if ((jsonObj.get("unionNational") != null && !jsonObj.get("unionNational").isJsonNull()) && !jsonObj.get("unionNational").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `unionNational` to be a primitive type in the JSON string but got `%s`", jsonObj.get("unionNational").toString()));
      }
      if ((jsonObj.get("supervisorEmployeeNumber") != null && !jsonObj.get("supervisorEmployeeNumber").isJsonNull()) && !jsonObj.get("supervisorEmployeeNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorEmployeeNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorEmployeeNumber").toString()));
      }
      if ((jsonObj.get("supervisorCOID") != null && !jsonObj.get("supervisorCOID").isJsonNull()) && !jsonObj.get("supervisorCOID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorCOID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorCOID").toString()));
      }
      if ((jsonObj.get("supervisorCompanyCode") != null && !jsonObj.get("supervisorCompanyCode").isJsonNull()) && !jsonObj.get("supervisorCompanyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `supervisorCompanyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("supervisorCompanyCode").toString()));
      }
      if ((jsonObj.get("companyGLSegment") != null && !jsonObj.get("companyGLSegment").isJsonNull()) && !jsonObj.get("companyGLSegment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyGLSegment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyGLSegment").toString()));
      }
      if ((jsonObj.get("locationGLSegment") != null && !jsonObj.get("locationGLSegment").isJsonNull()) && !jsonObj.get("locationGLSegment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locationGLSegment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locationGLSegment").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmpEmploymentDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmpEmploymentDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmpEmploymentDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmpEmploymentDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<EmpEmploymentDetails>() {
           @Override
           public void write(JsonWriter out, EmpEmploymentDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmpEmploymentDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmpEmploymentDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmpEmploymentDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmpEmploymentDetails
  * @throws IOException if the JSON string is invalid with respect to EmpEmploymentDetails
  */
  public static EmpEmploymentDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmpEmploymentDetails.class);
  }

 /**
  * Convert an instance of EmpEmploymentDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

