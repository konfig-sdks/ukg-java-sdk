/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * TaxGroupsDetails
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class TaxGroupsDetails {
  public static final String SERIALIZED_NAME_TAX_CALC_GROUP_ID_CODE = "taxCalcGroupIdCode";
  @SerializedName(SERIALIZED_NAME_TAX_CALC_GROUP_ID_CODE)
  private String taxCalcGroupIdCode;

  public static final String SERIALIZED_NAME_TAX_CALC_GROUP_DESCRIPTION = "taxCalcGroupDescription";
  @SerializedName(SERIALIZED_NAME_TAX_CALC_GROUP_DESCRIPTION)
  private String taxCalcGroupDescription;

  public static final String SERIALIZED_NAME_DEPOSIT_FREQUENCY_CODE = "depositFrequencyCode";
  @SerializedName(SERIALIZED_NAME_DEPOSIT_FREQUENCY_CODE)
  private String depositFrequencyCode;

  public static final String SERIALIZED_NAME_DEPOSIT_FREQUENCY_DESCRIPTION = "depositFrequencyDescription";
  @SerializedName(SERIALIZED_NAME_DEPOSIT_FREQUENCY_DESCRIPTION)
  private String depositFrequencyDescription;

  public static final String SERIALIZED_NAME_TAX_CALC_GROUP_TYPE_CODE = "taxCalcGroupTypeCode";
  @SerializedName(SERIALIZED_NAME_TAX_CALC_GROUP_TYPE_CODE)
  private String taxCalcGroupTypeCode;

  public static final String SERIALIZED_NAME_TAX_CALC_GROUP_TYPE_DESCRIPTION = "taxCalcGroupTypeDescription";
  @SerializedName(SERIALIZED_NAME_TAX_CALC_GROUP_TYPE_DESCRIPTION)
  private String taxCalcGroupTypeDescription;

  public static final String SERIALIZED_NAME_TAX_CALC_GROUP_REPORT_ID = "taxCalcGroupReportId";
  @SerializedName(SERIALIZED_NAME_TAX_CALC_GROUP_REPORT_ID)
  private String taxCalcGroupReportId;

  public static final String SERIALIZED_NAME_TAX_GROUP_COUNTRY_CODE = "taxGroupCountryCode";
  @SerializedName(SERIALIZED_NAME_TAX_GROUP_COUNTRY_CODE)
  private String taxGroupCountryCode;

  public static final String SERIALIZED_NAME_DATE_FINAL_WAGES_PAID = "dateFinalWagesPaid";
  @SerializedName(SERIALIZED_NAME_DATE_FINAL_WAGES_PAID)
  private OffsetDateTime dateFinalWagesPaid;

  public static final String SERIALIZED_NAME_DATE_MONTH_RESET = "dateMonthReset";
  @SerializedName(SERIALIZED_NAME_DATE_MONTH_RESET)
  private OffsetDateTime dateMonthReset;

  public static final String SERIALIZED_NAME_DATE_QUARTER_RESET = "dateQuarterReset";
  @SerializedName(SERIALIZED_NAME_DATE_QUARTER_RESET)
  private OffsetDateTime dateQuarterReset;

  public static final String SERIALIZED_NAME_DATE_YEAR_RESET = "dateYearReset";
  @SerializedName(SERIALIZED_NAME_DATE_YEAR_RESET)
  private OffsetDateTime dateYearReset;

  public static final String SERIALIZED_NAME_TAX_GROUP_IS_NOT_SUBJECT_TO_SOC_MED_TAX = "taxGroupIsNotSubjectToSocMedTax";
  @SerializedName(SERIALIZED_NAME_TAX_GROUP_IS_NOT_SUBJECT_TO_SOC_MED_TAX)
  private Boolean taxGroupIsNotSubjectToSocMedTax;

  public static final String SERIALIZED_NAME_TAX_GROUP_IS_NOT_PAYING_WAGES = "taxGroupIsNotPayingWages";
  @SerializedName(SERIALIZED_NAME_TAX_GROUP_IS_NOT_PAYING_WAGES)
  private Boolean taxGroupIsNotPayingWages;

  public static final String SERIALIZED_NAME_TAX_GROUP_IS_INACTIVE = "taxGroupIsInactive";
  @SerializedName(SERIALIZED_NAME_TAX_GROUP_IS_INACTIVE)
  private Boolean taxGroupIsInactive;

  public TaxGroupsDetails() {
  }

  public TaxGroupsDetails taxCalcGroupIdCode(String taxCalcGroupIdCode) {
    
    
    
    
    this.taxCalcGroupIdCode = taxCalcGroupIdCode;
    return this;
  }

   /**
   * Get taxCalcGroupIdCode
   * @return taxCalcGroupIdCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalcGroupIdCode() {
    return taxCalcGroupIdCode;
  }


  public void setTaxCalcGroupIdCode(String taxCalcGroupIdCode) {
    
    
    
    this.taxCalcGroupIdCode = taxCalcGroupIdCode;
  }


  public TaxGroupsDetails taxCalcGroupDescription(String taxCalcGroupDescription) {
    
    
    
    
    this.taxCalcGroupDescription = taxCalcGroupDescription;
    return this;
  }

   /**
   * Get taxCalcGroupDescription
   * @return taxCalcGroupDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalcGroupDescription() {
    return taxCalcGroupDescription;
  }


  public void setTaxCalcGroupDescription(String taxCalcGroupDescription) {
    
    
    
    this.taxCalcGroupDescription = taxCalcGroupDescription;
  }


  public TaxGroupsDetails depositFrequencyCode(String depositFrequencyCode) {
    
    
    
    
    this.depositFrequencyCode = depositFrequencyCode;
    return this;
  }

   /**
   * Get depositFrequencyCode
   * @return depositFrequencyCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDepositFrequencyCode() {
    return depositFrequencyCode;
  }


  public void setDepositFrequencyCode(String depositFrequencyCode) {
    
    
    
    this.depositFrequencyCode = depositFrequencyCode;
  }


  public TaxGroupsDetails depositFrequencyDescription(String depositFrequencyDescription) {
    
    
    
    
    this.depositFrequencyDescription = depositFrequencyDescription;
    return this;
  }

   /**
   * Get depositFrequencyDescription
   * @return depositFrequencyDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDepositFrequencyDescription() {
    return depositFrequencyDescription;
  }


  public void setDepositFrequencyDescription(String depositFrequencyDescription) {
    
    
    
    this.depositFrequencyDescription = depositFrequencyDescription;
  }


  public TaxGroupsDetails taxCalcGroupTypeCode(String taxCalcGroupTypeCode) {
    
    
    
    
    this.taxCalcGroupTypeCode = taxCalcGroupTypeCode;
    return this;
  }

   /**
   * Get taxCalcGroupTypeCode
   * @return taxCalcGroupTypeCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalcGroupTypeCode() {
    return taxCalcGroupTypeCode;
  }


  public void setTaxCalcGroupTypeCode(String taxCalcGroupTypeCode) {
    
    
    
    this.taxCalcGroupTypeCode = taxCalcGroupTypeCode;
  }


  public TaxGroupsDetails taxCalcGroupTypeDescription(String taxCalcGroupTypeDescription) {
    
    
    
    
    this.taxCalcGroupTypeDescription = taxCalcGroupTypeDescription;
    return this;
  }

   /**
   * Get taxCalcGroupTypeDescription
   * @return taxCalcGroupTypeDescription
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalcGroupTypeDescription() {
    return taxCalcGroupTypeDescription;
  }


  public void setTaxCalcGroupTypeDescription(String taxCalcGroupTypeDescription) {
    
    
    
    this.taxCalcGroupTypeDescription = taxCalcGroupTypeDescription;
  }


  public TaxGroupsDetails taxCalcGroupReportId(String taxCalcGroupReportId) {
    
    
    
    
    this.taxCalcGroupReportId = taxCalcGroupReportId;
    return this;
  }

   /**
   * Get taxCalcGroupReportId
   * @return taxCalcGroupReportId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxCalcGroupReportId() {
    return taxCalcGroupReportId;
  }


  public void setTaxCalcGroupReportId(String taxCalcGroupReportId) {
    
    
    
    this.taxCalcGroupReportId = taxCalcGroupReportId;
  }


  public TaxGroupsDetails taxGroupCountryCode(String taxGroupCountryCode) {
    
    
    
    
    this.taxGroupCountryCode = taxGroupCountryCode;
    return this;
  }

   /**
   * Get taxGroupCountryCode
   * @return taxGroupCountryCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getTaxGroupCountryCode() {
    return taxGroupCountryCode;
  }


  public void setTaxGroupCountryCode(String taxGroupCountryCode) {
    
    
    
    this.taxGroupCountryCode = taxGroupCountryCode;
  }


  public TaxGroupsDetails dateFinalWagesPaid(OffsetDateTime dateFinalWagesPaid) {
    
    
    
    
    this.dateFinalWagesPaid = dateFinalWagesPaid;
    return this;
  }

   /**
   * Get dateFinalWagesPaid
   * @return dateFinalWagesPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateFinalWagesPaid() {
    return dateFinalWagesPaid;
  }


  public void setDateFinalWagesPaid(OffsetDateTime dateFinalWagesPaid) {
    
    
    
    this.dateFinalWagesPaid = dateFinalWagesPaid;
  }


  public TaxGroupsDetails dateMonthReset(OffsetDateTime dateMonthReset) {
    
    
    
    
    this.dateMonthReset = dateMonthReset;
    return this;
  }

   /**
   * Get dateMonthReset
   * @return dateMonthReset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateMonthReset() {
    return dateMonthReset;
  }


  public void setDateMonthReset(OffsetDateTime dateMonthReset) {
    
    
    
    this.dateMonthReset = dateMonthReset;
  }


  public TaxGroupsDetails dateQuarterReset(OffsetDateTime dateQuarterReset) {
    
    
    
    
    this.dateQuarterReset = dateQuarterReset;
    return this;
  }

   /**
   * Get dateQuarterReset
   * @return dateQuarterReset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateQuarterReset() {
    return dateQuarterReset;
  }


  public void setDateQuarterReset(OffsetDateTime dateQuarterReset) {
    
    
    
    this.dateQuarterReset = dateQuarterReset;
  }


  public TaxGroupsDetails dateYearReset(OffsetDateTime dateYearReset) {
    
    
    
    
    this.dateYearReset = dateYearReset;
    return this;
  }

   /**
   * Get dateYearReset
   * @return dateYearReset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateYearReset() {
    return dateYearReset;
  }


  public void setDateYearReset(OffsetDateTime dateYearReset) {
    
    
    
    this.dateYearReset = dateYearReset;
  }


  public TaxGroupsDetails taxGroupIsNotSubjectToSocMedTax(Boolean taxGroupIsNotSubjectToSocMedTax) {
    
    
    
    
    this.taxGroupIsNotSubjectToSocMedTax = taxGroupIsNotSubjectToSocMedTax;
    return this;
  }

   /**
   * Get taxGroupIsNotSubjectToSocMedTax
   * @return taxGroupIsNotSubjectToSocMedTax
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTaxGroupIsNotSubjectToSocMedTax() {
    return taxGroupIsNotSubjectToSocMedTax;
  }


  public void setTaxGroupIsNotSubjectToSocMedTax(Boolean taxGroupIsNotSubjectToSocMedTax) {
    
    
    
    this.taxGroupIsNotSubjectToSocMedTax = taxGroupIsNotSubjectToSocMedTax;
  }


  public TaxGroupsDetails taxGroupIsNotPayingWages(Boolean taxGroupIsNotPayingWages) {
    
    
    
    
    this.taxGroupIsNotPayingWages = taxGroupIsNotPayingWages;
    return this;
  }

   /**
   * Get taxGroupIsNotPayingWages
   * @return taxGroupIsNotPayingWages
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTaxGroupIsNotPayingWages() {
    return taxGroupIsNotPayingWages;
  }


  public void setTaxGroupIsNotPayingWages(Boolean taxGroupIsNotPayingWages) {
    
    
    
    this.taxGroupIsNotPayingWages = taxGroupIsNotPayingWages;
  }


  public TaxGroupsDetails taxGroupIsInactive(Boolean taxGroupIsInactive) {
    
    
    
    
    this.taxGroupIsInactive = taxGroupIsInactive;
    return this;
  }

   /**
   * Get taxGroupIsInactive
   * @return taxGroupIsInactive
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getTaxGroupIsInactive() {
    return taxGroupIsInactive;
  }


  public void setTaxGroupIsInactive(Boolean taxGroupIsInactive) {
    
    
    
    this.taxGroupIsInactive = taxGroupIsInactive;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the TaxGroupsDetails instance itself
   */
  public TaxGroupsDetails putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TaxGroupsDetails taxGroupsDetails = (TaxGroupsDetails) o;
    return Objects.equals(this.taxCalcGroupIdCode, taxGroupsDetails.taxCalcGroupIdCode) &&
        Objects.equals(this.taxCalcGroupDescription, taxGroupsDetails.taxCalcGroupDescription) &&
        Objects.equals(this.depositFrequencyCode, taxGroupsDetails.depositFrequencyCode) &&
        Objects.equals(this.depositFrequencyDescription, taxGroupsDetails.depositFrequencyDescription) &&
        Objects.equals(this.taxCalcGroupTypeCode, taxGroupsDetails.taxCalcGroupTypeCode) &&
        Objects.equals(this.taxCalcGroupTypeDescription, taxGroupsDetails.taxCalcGroupTypeDescription) &&
        Objects.equals(this.taxCalcGroupReportId, taxGroupsDetails.taxCalcGroupReportId) &&
        Objects.equals(this.taxGroupCountryCode, taxGroupsDetails.taxGroupCountryCode) &&
        Objects.equals(this.dateFinalWagesPaid, taxGroupsDetails.dateFinalWagesPaid) &&
        Objects.equals(this.dateMonthReset, taxGroupsDetails.dateMonthReset) &&
        Objects.equals(this.dateQuarterReset, taxGroupsDetails.dateQuarterReset) &&
        Objects.equals(this.dateYearReset, taxGroupsDetails.dateYearReset) &&
        Objects.equals(this.taxGroupIsNotSubjectToSocMedTax, taxGroupsDetails.taxGroupIsNotSubjectToSocMedTax) &&
        Objects.equals(this.taxGroupIsNotPayingWages, taxGroupsDetails.taxGroupIsNotPayingWages) &&
        Objects.equals(this.taxGroupIsInactive, taxGroupsDetails.taxGroupIsInactive)&&
        Objects.equals(this.additionalProperties, taxGroupsDetails.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(taxCalcGroupIdCode, taxCalcGroupDescription, depositFrequencyCode, depositFrequencyDescription, taxCalcGroupTypeCode, taxCalcGroupTypeDescription, taxCalcGroupReportId, taxGroupCountryCode, dateFinalWagesPaid, dateMonthReset, dateQuarterReset, dateYearReset, taxGroupIsNotSubjectToSocMedTax, taxGroupIsNotPayingWages, taxGroupIsInactive, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TaxGroupsDetails {\n");
    sb.append("    taxCalcGroupIdCode: ").append(toIndentedString(taxCalcGroupIdCode)).append("\n");
    sb.append("    taxCalcGroupDescription: ").append(toIndentedString(taxCalcGroupDescription)).append("\n");
    sb.append("    depositFrequencyCode: ").append(toIndentedString(depositFrequencyCode)).append("\n");
    sb.append("    depositFrequencyDescription: ").append(toIndentedString(depositFrequencyDescription)).append("\n");
    sb.append("    taxCalcGroupTypeCode: ").append(toIndentedString(taxCalcGroupTypeCode)).append("\n");
    sb.append("    taxCalcGroupTypeDescription: ").append(toIndentedString(taxCalcGroupTypeDescription)).append("\n");
    sb.append("    taxCalcGroupReportId: ").append(toIndentedString(taxCalcGroupReportId)).append("\n");
    sb.append("    taxGroupCountryCode: ").append(toIndentedString(taxGroupCountryCode)).append("\n");
    sb.append("    dateFinalWagesPaid: ").append(toIndentedString(dateFinalWagesPaid)).append("\n");
    sb.append("    dateMonthReset: ").append(toIndentedString(dateMonthReset)).append("\n");
    sb.append("    dateQuarterReset: ").append(toIndentedString(dateQuarterReset)).append("\n");
    sb.append("    dateYearReset: ").append(toIndentedString(dateYearReset)).append("\n");
    sb.append("    taxGroupIsNotSubjectToSocMedTax: ").append(toIndentedString(taxGroupIsNotSubjectToSocMedTax)).append("\n");
    sb.append("    taxGroupIsNotPayingWages: ").append(toIndentedString(taxGroupIsNotPayingWages)).append("\n");
    sb.append("    taxGroupIsInactive: ").append(toIndentedString(taxGroupIsInactive)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("taxCalcGroupIdCode");
    openapiFields.add("taxCalcGroupDescription");
    openapiFields.add("depositFrequencyCode");
    openapiFields.add("depositFrequencyDescription");
    openapiFields.add("taxCalcGroupTypeCode");
    openapiFields.add("taxCalcGroupTypeDescription");
    openapiFields.add("taxCalcGroupReportId");
    openapiFields.add("taxGroupCountryCode");
    openapiFields.add("dateFinalWagesPaid");
    openapiFields.add("dateMonthReset");
    openapiFields.add("dateQuarterReset");
    openapiFields.add("dateYearReset");
    openapiFields.add("taxGroupIsNotSubjectToSocMedTax");
    openapiFields.add("taxGroupIsNotPayingWages");
    openapiFields.add("taxGroupIsInactive");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to TaxGroupsDetails
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!TaxGroupsDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TaxGroupsDetails is not found in the empty JSON string", TaxGroupsDetails.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("taxCalcGroupIdCode") != null && !jsonObj.get("taxCalcGroupIdCode").isJsonNull()) && !jsonObj.get("taxCalcGroupIdCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalcGroupIdCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalcGroupIdCode").toString()));
      }
      if ((jsonObj.get("taxCalcGroupDescription") != null && !jsonObj.get("taxCalcGroupDescription").isJsonNull()) && !jsonObj.get("taxCalcGroupDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalcGroupDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalcGroupDescription").toString()));
      }
      if ((jsonObj.get("depositFrequencyCode") != null && !jsonObj.get("depositFrequencyCode").isJsonNull()) && !jsonObj.get("depositFrequencyCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `depositFrequencyCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("depositFrequencyCode").toString()));
      }
      if ((jsonObj.get("depositFrequencyDescription") != null && !jsonObj.get("depositFrequencyDescription").isJsonNull()) && !jsonObj.get("depositFrequencyDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `depositFrequencyDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("depositFrequencyDescription").toString()));
      }
      if ((jsonObj.get("taxCalcGroupTypeCode") != null && !jsonObj.get("taxCalcGroupTypeCode").isJsonNull()) && !jsonObj.get("taxCalcGroupTypeCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalcGroupTypeCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalcGroupTypeCode").toString()));
      }
      if ((jsonObj.get("taxCalcGroupTypeDescription") != null && !jsonObj.get("taxCalcGroupTypeDescription").isJsonNull()) && !jsonObj.get("taxCalcGroupTypeDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalcGroupTypeDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalcGroupTypeDescription").toString()));
      }
      if ((jsonObj.get("taxCalcGroupReportId") != null && !jsonObj.get("taxCalcGroupReportId").isJsonNull()) && !jsonObj.get("taxCalcGroupReportId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxCalcGroupReportId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxCalcGroupReportId").toString()));
      }
      if ((jsonObj.get("taxGroupCountryCode") != null && !jsonObj.get("taxGroupCountryCode").isJsonNull()) && !jsonObj.get("taxGroupCountryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxGroupCountryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxGroupCountryCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TaxGroupsDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TaxGroupsDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TaxGroupsDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TaxGroupsDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<TaxGroupsDetails>() {
           @Override
           public void write(JsonWriter out, TaxGroupsDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public TaxGroupsDetails read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             TaxGroupsDetails instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TaxGroupsDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TaxGroupsDetails
  * @throws IOException if the JSON string is invalid with respect to TaxGroupsDetails
  */
  public static TaxGroupsDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TaxGroupsDetails.class);
  }

 /**
  * Convert an instance of TaxGroupsDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

