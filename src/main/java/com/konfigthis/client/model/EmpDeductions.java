/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmpDeductions
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmpDeductions {
  public static final String SERIALIZED_NAME_ARREARS_AMT = "arrearsAmt";
  @SerializedName(SERIALIZED_NAME_ARREARS_AMT)
  private Double arrearsAmt;

  public static final String SERIALIZED_NAME_BENEFIT_AMOUNT = "benefitAmount";
  @SerializedName(SERIALIZED_NAME_BENEFIT_AMOUNT)
  private Double benefitAmount;

  public static final String SERIALIZED_NAME_BENEFIT_AMOUNT_CALC_RULE = "benefitAmountCalcRule";
  @SerializedName(SERIALIZED_NAME_BENEFIT_AMOUNT_CALC_RULE)
  private String benefitAmountCalcRule;

  public static final String SERIALIZED_NAME_BENEFIT_AMOUNT_RATE_OR_PERCENT = "benefitAmountRateOrPercent";
  @SerializedName(SERIALIZED_NAME_BENEFIT_AMOUNT_RATE_OR_PERCENT)
  private Double benefitAmountRateOrPercent;

  public static final String SERIALIZED_NAME_BENEFIT_OPTION = "benefitOption";
  @SerializedName(SERIALIZED_NAME_BENEFIT_OPTION)
  private String benefitOption;

  public static final String SERIALIZED_NAME_BENEFIT_START_DATE = "benefitStartDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_START_DATE)
  private OffsetDateTime benefitStartDate;

  public static final String SERIALIZED_NAME_BENEFIT_STATUS = "benefitStatus";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STATUS)
  private String benefitStatus;

  public static final String SERIALIZED_NAME_BENEFIT_STATUS_DATE = "benefitStatusDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STATUS_DATE)
  private OffsetDateTime benefitStatusDate;

  public static final String SERIALIZED_NAME_BENEFIT_STOP_DATE = "benefitStopDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STOP_DATE)
  private OffsetDateTime benefitStopDate;

  public static final String SERIALIZED_NAME_COMPANY_I_D = "companyID";
  @SerializedName(SERIALIZED_NAME_COMPANY_I_D)
  private String companyID;

  public static final String SERIALIZED_NAME_CUSTOM_AMOUNT1 = "customAmount1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_AMOUNT1)
  private Double customAmount1;

  public static final String SERIALIZED_NAME_CUSTOM_AMOUNT2 = "customAmount2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_AMOUNT2)
  private Double customAmount2;

  public static final String SERIALIZED_NAME_CUSTOM_DATE = "customDate";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATE)
  private OffsetDateTime customDate;

  public static final String SERIALIZED_NAME_DATE_SUSPENDED_FROM = "dateSuspendedFrom";
  @SerializedName(SERIALIZED_NAME_DATE_SUSPENDED_FROM)
  private OffsetDateTime dateSuspendedFrom;

  public static final String SERIALIZED_NAME_DATE_SUSPENDED_TO = "dateSuspendedTo";
  @SerializedName(SERIALIZED_NAME_DATE_SUSPENDED_TO)
  private OffsetDateTime dateSuspendedTo;

  public static final String SERIALIZED_NAME_DATETIME_CHANGED = "datetimeChanged";
  @SerializedName(SERIALIZED_NAME_DATETIME_CHANGED)
  private OffsetDateTime datetimeChanged;

  public static final String SERIALIZED_NAME_DATETIME_CREATED = "datetimeCreated";
  @SerializedName(SERIALIZED_NAME_DATETIME_CREATED)
  private OffsetDateTime datetimeCreated;

  public static final String SERIALIZED_NAME_DECLINED_BY_CARRIER = "declinedByCarrier";
  @SerializedName(SERIALIZED_NAME_DECLINED_BY_CARRIER)
  private String declinedByCarrier;

  public static final String SERIALIZED_NAME_DECLINED_BY_CARRIER_DATE = "declinedByCarrierDate";
  @SerializedName(SERIALIZED_NAME_DECLINED_BY_CARRIER_DATE)
  private OffsetDateTime declinedByCarrierDate;

  public static final String SERIALIZED_NAME_DECLINED_BY_CARRIER_REASON = "declinedByCarrierReason";
  @SerializedName(SERIALIZED_NAME_DECLINED_BY_CARRIER_REASON)
  private String declinedByCarrierReason;

  public static final String SERIALIZED_NAME_DEDUCTION_CODE = "deductionCode";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_CODE)
  private String deductionCode;

  public static final String SERIALIZED_NAME_EFFECTIVE_RECORD_I_D = "effectiveRecordID";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_RECORD_I_D)
  private String effectiveRecordID;

  public static final String SERIALIZED_NAME_CONTACT_I_D = "contactID";
  @SerializedName(SERIALIZED_NAME_CONTACT_I_D)
  private String contactID;

  public static final String SERIALIZED_NAME_MEMBER_OR_CASE_NUMBER = "memberOrCaseNumber";
  @SerializedName(SERIALIZED_NAME_MEMBER_OR_CASE_NUMBER)
  private String memberOrCaseNumber;

  public static final String SERIALIZED_NAME_EMPLOYEE_AMOUNT = "employeeAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_AMOUNT)
  private Double employeeAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_CALC_RATE_OR_PCT = "employeeCalcRateOrPct";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_CALC_RATE_OR_PCT)
  private Double employeeCalcRateOrPct;

  public static final String SERIALIZED_NAME_EMPLOYEE_CALC_RULE = "employeeCalcRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_CALC_RULE)
  private String employeeCalcRule;

  public static final String SERIALIZED_NAME_EMPLOYEE_CAUSE_NUMBER = "employeeCauseNumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_CAUSE_NUMBER)
  private String employeeCauseNumber;

  public static final String SERIALIZED_NAME_EMPLOYEE_DED_LAST_PAID = "employeeDedLastPaid";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_DED_LAST_PAID)
  private OffsetDateTime employeeDedLastPaid;

  public static final String SERIALIZED_NAME_EMPLOYEE_ELIGIBILITY_DATE = "employeeEligibilityDate";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ELIGIBILITY_DATE)
  private OffsetDateTime employeeEligibilityDate;

  public static final String SERIALIZED_NAME_EMPLOYEE_FISCAL_Y_T_D_AMT = "employeeFiscalYTDAmt";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_FISCAL_Y_T_D_AMT)
  private Double employeeFiscalYTDAmt;

  public static final String SERIALIZED_NAME_EMPLOYEE_GOAL_AMT = "employeeGoalAmt";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_GOAL_AMT)
  private Double employeeGoalAmt;

  public static final String SERIALIZED_NAME_EMPLOYEE_GOAL_TO_DATE_AMT = "employeeGoalToDateAmt";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_GOAL_TO_DATE_AMT)
  private Double employeeGoalToDateAmt;

  public static final String SERIALIZED_NAME_EMPLOYEE_I_D = "employeeID";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_I_D)
  private String employeeID;

  public static final String SERIALIZED_NAME_EMPLOYEE_LAST_AMOUNT = "employeeLastAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_LAST_AMOUNT)
  private Double employeeLastAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_MONTH_TO_DATE_AMOUNT = "employeeMonthToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_MONTH_TO_DATE_AMOUNT)
  private Double employeeMonthToDateAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_QUARTER_TO_DATE_AMOUNT = "employeeQuarterToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_QUARTER_TO_DATE_AMOUNT)
  private Double employeeQuarterToDateAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_YEAR_TO_DATE_AMOUNT = "employeeYearToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_YEAR_TO_DATE_AMOUNT)
  private Double employeeYearToDateAmount;

  public static final String SERIALIZED_NAME_EVIDENCE_OF_INSURABILITY_DATE = "evidenceOfInsurabilityDate";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_OF_INSURABILITY_DATE)
  private OffsetDateTime evidenceOfInsurabilityDate;

  public static final String SERIALIZED_NAME_EVIDENCE_OF_INSURABILITY_DESIRED_AMT = "evidenceOfInsurabilityDesiredAmt";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_OF_INSURABILITY_DESIRED_AMT)
  private Double evidenceOfInsurabilityDesiredAmt;

  public static final String SERIALIZED_NAME_EVIDENCE_OF_INSURABILITY_DESIRED_CALC_RATE_OR_PCT = "evidenceOfInsurabilityDesiredCalcRateOrPct";
  @SerializedName(SERIALIZED_NAME_EVIDENCE_OF_INSURABILITY_DESIRED_CALC_RATE_OR_PCT)
  private Double evidenceOfInsurabilityDesiredCalcRateOrPct;

  public static final String SERIALIZED_NAME_EMPLOYER_AMOUNT = "employerAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_AMOUNT)
  private Double employerAmount;

  public static final String SERIALIZED_NAME_EMPLOYER_CALC_RATE_OR_PCT = "employerCalcRateOrPct";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_CALC_RATE_OR_PCT)
  private Double employerCalcRateOrPct;

  public static final String SERIALIZED_NAME_EMPLOYER_CALC_RULE = "employerCalcRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_CALC_RULE)
  private String employerCalcRule;

  public static final String SERIALIZED_NAME_EMPLOYER_FISCAL_YEAR_TO_DATE_AMOUNT = "employerFiscalYearToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_FISCAL_YEAR_TO_DATE_AMOUNT)
  private Double employerFiscalYearToDateAmount;

  public static final String SERIALIZED_NAME_EMPLOYER_LAST_AMOUNT = "employerLastAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_LAST_AMOUNT)
  private Double employerLastAmount;

  public static final String SERIALIZED_NAME_EMPLOYER_MONTH_TO_DATE_AMOUNT = "employerMonthToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_MONTH_TO_DATE_AMOUNT)
  private Double employerMonthToDateAmount;

  public static final String SERIALIZED_NAME_EMPLOYER_QUARTER_TO_DATE_AMOUNT = "employerQuarterToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_QUARTER_TO_DATE_AMOUNT)
  private Double employerQuarterToDateAmount;

  public static final String SERIALIZED_NAME_EMPLOYER_YEAR_TO_DATE_AMOUNT = "employerYearToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_YEAR_TO_DATE_AMOUNT)
  private Double employerYearToDateAmount;

  public static final String SERIALIZED_NAME_INTEREST_AMOUNT = "interestAmount";
  @SerializedName(SERIALIZED_NAME_INTEREST_AMOUNT)
  private Double interestAmount;

  public static final String SERIALIZED_NAME_IS_DEDUCTION_OFFSET = "isDeductionOffset";
  @SerializedName(SERIALIZED_NAME_IS_DEDUCTION_OFFSET)
  private Boolean isDeductionOffset;

  public static final String SERIALIZED_NAME_MEDICAL_INDICATOR = "medicalIndicator";
  @SerializedName(SERIALIZED_NAME_MEDICAL_INDICATOR)
  private Boolean medicalIndicator;

  public static final String SERIALIZED_NAME_NEED_EVIDENCE_OF_INSURABILITY = "needEvidenceOfInsurability";
  @SerializedName(SERIALIZED_NAME_NEED_EVIDENCE_OF_INSURABILITY)
  private Boolean needEvidenceOfInsurability;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN = "primaryCarePhysician";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN)
  private String primaryCarePhysician;

  public static final String SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN_ID = "primaryCarePhysicianId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN_ID)
  private String primaryCarePhysicianId;

  public static final String SERIALIZED_NAME_PRIOR_EMPLOYEE_AMOUNT = "priorEmployeeAmount";
  @SerializedName(SERIALIZED_NAME_PRIOR_EMPLOYEE_AMOUNT)
  private Double priorEmployeeAmount;

  public static final String SERIALIZED_NAME_PRIOR_EMPLOYEE_GOAL_AMOUNT = "priorEmployeeGoalAmount";
  @SerializedName(SERIALIZED_NAME_PRIOR_EMPLOYEE_GOAL_AMOUNT)
  private Double priorEmployeeGoalAmount;

  public static final String SERIALIZED_NAME_PRIOR_EMPLOYEE_YEAR_TO_DATE_AMOUNT = "priorEmployeeYearToDateAmount";
  @SerializedName(SERIALIZED_NAME_PRIOR_EMPLOYEE_YEAR_TO_DATE_AMOUNT)
  private Double priorEmployeeYearToDateAmount;

  public static final String SERIALIZED_NAME_PRIOR_EMPLOYER_YEAR_TO_DATE_AMOUNT = "priorEmployerYearToDateAmount";
  @SerializedName(SERIALIZED_NAME_PRIOR_EMPLOYER_YEAR_TO_DATE_AMOUNT)
  private Double priorEmployerYearToDateAmount;

  public static final String SERIALIZED_NAME_DEDUCTION_START_DATE = "deductionStartDate";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_START_DATE)
  private OffsetDateTime deductionStartDate;

  public static final String SERIALIZED_NAME_DEDUCTION_STOP_DATE = "deductionStopDate";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_STOP_DATE)
  private OffsetDateTime deductionStopDate;

  public static final String SERIALIZED_NAME_SYSTEM_I_D = "systemID";
  @SerializedName(SERIALIZED_NAME_SYSTEM_I_D)
  private String systemID;

  public static final String SERIALIZED_NAME_WAIVE_REASON = "waiveReason";
  @SerializedName(SERIALIZED_NAME_WAIVE_REASON)
  private String waiveReason;

  public static final String SERIALIZED_NAME_IS_HOME_COMPANY = "isHomeCompany";
  @SerializedName(SERIALIZED_NAME_IS_HOME_COMPANY)
  private Boolean isHomeCompany;

  public static final String SERIALIZED_NAME_IS_WAIVED = "isWaived";
  @SerializedName(SERIALIZED_NAME_IS_WAIVED)
  private Boolean isWaived;

  public static final String SERIALIZED_NAME_INCLUDE_IN_ADDITIONAL_CHECK = "includeInAdditionalCheck";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IN_ADDITIONAL_CHECK)
  private Boolean includeInAdditionalCheck;

  public static final String SERIALIZED_NAME_INCLUDE_IN_MANUAL_CHECK = "includeInManualCheck";
  @SerializedName(SERIALIZED_NAME_INCLUDE_IN_MANUAL_CHECK)
  private Boolean includeInManualCheck;

  public static final String SERIALIZED_NAME_EMPLOYEE_PER_CAP_AMOUNT = "employeePerCapAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_PER_CAP_AMOUNT)
  private Double employeePerCapAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_PER_CAP_PERCENT = "employeePerCapPercent";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_PER_CAP_PERCENT)
  private Double employeePerCapPercent;

  public static final String SERIALIZED_NAME_EMPLOYEE_PER_CAP_CALC_RULE = "employeePerCapCalcRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_PER_CAP_CALC_RULE)
  private String employeePerCapCalcRule;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_DED_CODE = "dedCode";
  @SerializedName(SERIALIZED_NAME_DED_CODE)
  private String dedCode;

  public static final String SERIALIZED_NAME_BEN_STATUS = "benStatus";
  @SerializedName(SERIALIZED_NAME_BEN_STATUS)
  private String benStatus;

  public static final String SERIALIZED_NAME_END_DATE_TIME = "endDateTime";
  @SerializedName(SERIALIZED_NAME_END_DATE_TIME)
  private OffsetDateTime endDateTime;

  public static final String SERIALIZED_NAME_PAGE = "page";
  @SerializedName(SERIALIZED_NAME_PAGE)
  private Integer page;

  public static final String SERIALIZED_NAME_PER_PAGE = "per_Page";
  @SerializedName(SERIALIZED_NAME_PER_PAGE)
  private Integer perPage;

  public EmpDeductions() {
  }

  public EmpDeductions arrearsAmt(Double arrearsAmt) {
    
    
    
    
    this.arrearsAmt = arrearsAmt;
    return this;
  }

   /**
   * Get arrearsAmt
   * @return arrearsAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getArrearsAmt() {
    return arrearsAmt;
  }


  public void setArrearsAmt(Double arrearsAmt) {
    
    
    
    this.arrearsAmt = arrearsAmt;
  }


  public EmpDeductions benefitAmount(Double benefitAmount) {
    
    
    
    
    this.benefitAmount = benefitAmount;
    return this;
  }

   /**
   * Get benefitAmount
   * @return benefitAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBenefitAmount() {
    return benefitAmount;
  }


  public void setBenefitAmount(Double benefitAmount) {
    
    
    
    this.benefitAmount = benefitAmount;
  }


  public EmpDeductions benefitAmountCalcRule(String benefitAmountCalcRule) {
    
    
    
    
    this.benefitAmountCalcRule = benefitAmountCalcRule;
    return this;
  }

   /**
   * Get benefitAmountCalcRule
   * @return benefitAmountCalcRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitAmountCalcRule() {
    return benefitAmountCalcRule;
  }


  public void setBenefitAmountCalcRule(String benefitAmountCalcRule) {
    
    
    
    this.benefitAmountCalcRule = benefitAmountCalcRule;
  }


  public EmpDeductions benefitAmountRateOrPercent(Double benefitAmountRateOrPercent) {
    
    
    
    
    this.benefitAmountRateOrPercent = benefitAmountRateOrPercent;
    return this;
  }

   /**
   * Get benefitAmountRateOrPercent
   * @return benefitAmountRateOrPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBenefitAmountRateOrPercent() {
    return benefitAmountRateOrPercent;
  }


  public void setBenefitAmountRateOrPercent(Double benefitAmountRateOrPercent) {
    
    
    
    this.benefitAmountRateOrPercent = benefitAmountRateOrPercent;
  }


  public EmpDeductions benefitOption(String benefitOption) {
    
    
    
    
    this.benefitOption = benefitOption;
    return this;
  }

   /**
   * Get benefitOption
   * @return benefitOption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitOption() {
    return benefitOption;
  }


  public void setBenefitOption(String benefitOption) {
    
    
    
    this.benefitOption = benefitOption;
  }


  public EmpDeductions benefitStartDate(OffsetDateTime benefitStartDate) {
    
    
    
    
    this.benefitStartDate = benefitStartDate;
    return this;
  }

   /**
   * Get benefitStartDate
   * @return benefitStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStartDate() {
    return benefitStartDate;
  }


  public void setBenefitStartDate(OffsetDateTime benefitStartDate) {
    
    
    
    this.benefitStartDate = benefitStartDate;
  }


  public EmpDeductions benefitStatus(String benefitStatus) {
    
    
    
    
    this.benefitStatus = benefitStatus;
    return this;
  }

   /**
   * Get benefitStatus
   * @return benefitStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitStatus() {
    return benefitStatus;
  }


  public void setBenefitStatus(String benefitStatus) {
    
    
    
    this.benefitStatus = benefitStatus;
  }


  public EmpDeductions benefitStatusDate(OffsetDateTime benefitStatusDate) {
    
    
    
    
    this.benefitStatusDate = benefitStatusDate;
    return this;
  }

   /**
   * Get benefitStatusDate
   * @return benefitStatusDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStatusDate() {
    return benefitStatusDate;
  }


  public void setBenefitStatusDate(OffsetDateTime benefitStatusDate) {
    
    
    
    this.benefitStatusDate = benefitStatusDate;
  }


  public EmpDeductions benefitStopDate(OffsetDateTime benefitStopDate) {
    
    
    
    
    this.benefitStopDate = benefitStopDate;
    return this;
  }

   /**
   * Get benefitStopDate
   * @return benefitStopDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStopDate() {
    return benefitStopDate;
  }


  public void setBenefitStopDate(OffsetDateTime benefitStopDate) {
    
    
    
    this.benefitStopDate = benefitStopDate;
  }


  public EmpDeductions companyID(String companyID) {
    
    
    
    
    this.companyID = companyID;
    return this;
  }

   /**
   * Get companyID
   * @return companyID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyID() {
    return companyID;
  }


  public void setCompanyID(String companyID) {
    
    
    
    this.companyID = companyID;
  }


  public EmpDeductions customAmount1(Double customAmount1) {
    
    
    
    
    this.customAmount1 = customAmount1;
    return this;
  }

   /**
   * Get customAmount1
   * @return customAmount1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCustomAmount1() {
    return customAmount1;
  }


  public void setCustomAmount1(Double customAmount1) {
    
    
    
    this.customAmount1 = customAmount1;
  }


  public EmpDeductions customAmount2(Double customAmount2) {
    
    
    
    
    this.customAmount2 = customAmount2;
    return this;
  }

   /**
   * Get customAmount2
   * @return customAmount2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCustomAmount2() {
    return customAmount2;
  }


  public void setCustomAmount2(Double customAmount2) {
    
    
    
    this.customAmount2 = customAmount2;
  }


  public EmpDeductions customDate(OffsetDateTime customDate) {
    
    
    
    
    this.customDate = customDate;
    return this;
  }

   /**
   * Get customDate
   * @return customDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCustomDate() {
    return customDate;
  }


  public void setCustomDate(OffsetDateTime customDate) {
    
    
    
    this.customDate = customDate;
  }


  public EmpDeductions dateSuspendedFrom(OffsetDateTime dateSuspendedFrom) {
    
    
    
    
    this.dateSuspendedFrom = dateSuspendedFrom;
    return this;
  }

   /**
   * Get dateSuspendedFrom
   * @return dateSuspendedFrom
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateSuspendedFrom() {
    return dateSuspendedFrom;
  }


  public void setDateSuspendedFrom(OffsetDateTime dateSuspendedFrom) {
    
    
    
    this.dateSuspendedFrom = dateSuspendedFrom;
  }


  public EmpDeductions dateSuspendedTo(OffsetDateTime dateSuspendedTo) {
    
    
    
    
    this.dateSuspendedTo = dateSuspendedTo;
    return this;
  }

   /**
   * Get dateSuspendedTo
   * @return dateSuspendedTo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDateSuspendedTo() {
    return dateSuspendedTo;
  }


  public void setDateSuspendedTo(OffsetDateTime dateSuspendedTo) {
    
    
    
    this.dateSuspendedTo = dateSuspendedTo;
  }


  public EmpDeductions datetimeChanged(OffsetDateTime datetimeChanged) {
    
    
    
    
    this.datetimeChanged = datetimeChanged;
    return this;
  }

   /**
   * Get datetimeChanged
   * @return datetimeChanged
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDatetimeChanged() {
    return datetimeChanged;
  }


  public void setDatetimeChanged(OffsetDateTime datetimeChanged) {
    
    
    
    this.datetimeChanged = datetimeChanged;
  }


  public EmpDeductions datetimeCreated(OffsetDateTime datetimeCreated) {
    
    
    
    
    this.datetimeCreated = datetimeCreated;
    return this;
  }

   /**
   * Get datetimeCreated
   * @return datetimeCreated
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDatetimeCreated() {
    return datetimeCreated;
  }


  public void setDatetimeCreated(OffsetDateTime datetimeCreated) {
    
    
    
    this.datetimeCreated = datetimeCreated;
  }


  public EmpDeductions declinedByCarrier(String declinedByCarrier) {
    
    
    
    
    this.declinedByCarrier = declinedByCarrier;
    return this;
  }

   /**
   * Get declinedByCarrier
   * @return declinedByCarrier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeclinedByCarrier() {
    return declinedByCarrier;
  }


  public void setDeclinedByCarrier(String declinedByCarrier) {
    
    
    
    this.declinedByCarrier = declinedByCarrier;
  }


  public EmpDeductions declinedByCarrierDate(OffsetDateTime declinedByCarrierDate) {
    
    
    
    
    this.declinedByCarrierDate = declinedByCarrierDate;
    return this;
  }

   /**
   * Get declinedByCarrierDate
   * @return declinedByCarrierDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeclinedByCarrierDate() {
    return declinedByCarrierDate;
  }


  public void setDeclinedByCarrierDate(OffsetDateTime declinedByCarrierDate) {
    
    
    
    this.declinedByCarrierDate = declinedByCarrierDate;
  }


  public EmpDeductions declinedByCarrierReason(String declinedByCarrierReason) {
    
    
    
    
    this.declinedByCarrierReason = declinedByCarrierReason;
    return this;
  }

   /**
   * Get declinedByCarrierReason
   * @return declinedByCarrierReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeclinedByCarrierReason() {
    return declinedByCarrierReason;
  }


  public void setDeclinedByCarrierReason(String declinedByCarrierReason) {
    
    
    
    this.declinedByCarrierReason = declinedByCarrierReason;
  }


  public EmpDeductions deductionCode(String deductionCode) {
    
    
    
    
    this.deductionCode = deductionCode;
    return this;
  }

   /**
   * Get deductionCode
   * @return deductionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionCode() {
    return deductionCode;
  }


  public void setDeductionCode(String deductionCode) {
    
    
    
    this.deductionCode = deductionCode;
  }


  public EmpDeductions effectiveRecordID(String effectiveRecordID) {
    
    
    
    
    this.effectiveRecordID = effectiveRecordID;
    return this;
  }

   /**
   * Get effectiveRecordID
   * @return effectiveRecordID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEffectiveRecordID() {
    return effectiveRecordID;
  }


  public void setEffectiveRecordID(String effectiveRecordID) {
    
    
    
    this.effectiveRecordID = effectiveRecordID;
  }


  public EmpDeductions contactID(String contactID) {
    
    
    
    
    this.contactID = contactID;
    return this;
  }

   /**
   * Get contactID
   * @return contactID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getContactID() {
    return contactID;
  }


  public void setContactID(String contactID) {
    
    
    
    this.contactID = contactID;
  }


  public EmpDeductions memberOrCaseNumber(String memberOrCaseNumber) {
    
    
    
    
    this.memberOrCaseNumber = memberOrCaseNumber;
    return this;
  }

   /**
   * Get memberOrCaseNumber
   * @return memberOrCaseNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getMemberOrCaseNumber() {
    return memberOrCaseNumber;
  }


  public void setMemberOrCaseNumber(String memberOrCaseNumber) {
    
    
    
    this.memberOrCaseNumber = memberOrCaseNumber;
  }


  public EmpDeductions employeeAmount(Double employeeAmount) {
    
    
    
    
    this.employeeAmount = employeeAmount;
    return this;
  }

   /**
   * Get employeeAmount
   * @return employeeAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeAmount() {
    return employeeAmount;
  }


  public void setEmployeeAmount(Double employeeAmount) {
    
    
    
    this.employeeAmount = employeeAmount;
  }


  public EmpDeductions employeeCalcRateOrPct(Double employeeCalcRateOrPct) {
    
    
    
    
    this.employeeCalcRateOrPct = employeeCalcRateOrPct;
    return this;
  }

   /**
   * Get employeeCalcRateOrPct
   * @return employeeCalcRateOrPct
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeCalcRateOrPct() {
    return employeeCalcRateOrPct;
  }


  public void setEmployeeCalcRateOrPct(Double employeeCalcRateOrPct) {
    
    
    
    this.employeeCalcRateOrPct = employeeCalcRateOrPct;
  }


  public EmpDeductions employeeCalcRule(String employeeCalcRule) {
    
    
    
    
    this.employeeCalcRule = employeeCalcRule;
    return this;
  }

   /**
   * Get employeeCalcRule
   * @return employeeCalcRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeCalcRule() {
    return employeeCalcRule;
  }


  public void setEmployeeCalcRule(String employeeCalcRule) {
    
    
    
    this.employeeCalcRule = employeeCalcRule;
  }


  public EmpDeductions employeeCauseNumber(String employeeCauseNumber) {
    
    
    
    
    this.employeeCauseNumber = employeeCauseNumber;
    return this;
  }

   /**
   * Get employeeCauseNumber
   * @return employeeCauseNumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeCauseNumber() {
    return employeeCauseNumber;
  }


  public void setEmployeeCauseNumber(String employeeCauseNumber) {
    
    
    
    this.employeeCauseNumber = employeeCauseNumber;
  }


  public EmpDeductions employeeDedLastPaid(OffsetDateTime employeeDedLastPaid) {
    
    
    
    
    this.employeeDedLastPaid = employeeDedLastPaid;
    return this;
  }

   /**
   * Get employeeDedLastPaid
   * @return employeeDedLastPaid
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEmployeeDedLastPaid() {
    return employeeDedLastPaid;
  }


  public void setEmployeeDedLastPaid(OffsetDateTime employeeDedLastPaid) {
    
    
    
    this.employeeDedLastPaid = employeeDedLastPaid;
  }


  public EmpDeductions employeeEligibilityDate(OffsetDateTime employeeEligibilityDate) {
    
    
    
    
    this.employeeEligibilityDate = employeeEligibilityDate;
    return this;
  }

   /**
   * Get employeeEligibilityDate
   * @return employeeEligibilityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEmployeeEligibilityDate() {
    return employeeEligibilityDate;
  }


  public void setEmployeeEligibilityDate(OffsetDateTime employeeEligibilityDate) {
    
    
    
    this.employeeEligibilityDate = employeeEligibilityDate;
  }


  public EmpDeductions employeeFiscalYTDAmt(Double employeeFiscalYTDAmt) {
    
    
    
    
    this.employeeFiscalYTDAmt = employeeFiscalYTDAmt;
    return this;
  }

   /**
   * Get employeeFiscalYTDAmt
   * @return employeeFiscalYTDAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeFiscalYTDAmt() {
    return employeeFiscalYTDAmt;
  }


  public void setEmployeeFiscalYTDAmt(Double employeeFiscalYTDAmt) {
    
    
    
    this.employeeFiscalYTDAmt = employeeFiscalYTDAmt;
  }


  public EmpDeductions employeeGoalAmt(Double employeeGoalAmt) {
    
    
    
    
    this.employeeGoalAmt = employeeGoalAmt;
    return this;
  }

   /**
   * Get employeeGoalAmt
   * @return employeeGoalAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeGoalAmt() {
    return employeeGoalAmt;
  }


  public void setEmployeeGoalAmt(Double employeeGoalAmt) {
    
    
    
    this.employeeGoalAmt = employeeGoalAmt;
  }


  public EmpDeductions employeeGoalToDateAmt(Double employeeGoalToDateAmt) {
    
    
    
    
    this.employeeGoalToDateAmt = employeeGoalToDateAmt;
    return this;
  }

   /**
   * Get employeeGoalToDateAmt
   * @return employeeGoalToDateAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeGoalToDateAmt() {
    return employeeGoalToDateAmt;
  }


  public void setEmployeeGoalToDateAmt(Double employeeGoalToDateAmt) {
    
    
    
    this.employeeGoalToDateAmt = employeeGoalToDateAmt;
  }


  public EmpDeductions employeeID(String employeeID) {
    
    
    
    
    this.employeeID = employeeID;
    return this;
  }

   /**
   * Get employeeID
   * @return employeeID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeID() {
    return employeeID;
  }


  public void setEmployeeID(String employeeID) {
    
    
    
    this.employeeID = employeeID;
  }


  public EmpDeductions employeeLastAmount(Double employeeLastAmount) {
    
    
    
    
    this.employeeLastAmount = employeeLastAmount;
    return this;
  }

   /**
   * Get employeeLastAmount
   * @return employeeLastAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeLastAmount() {
    return employeeLastAmount;
  }


  public void setEmployeeLastAmount(Double employeeLastAmount) {
    
    
    
    this.employeeLastAmount = employeeLastAmount;
  }


  public EmpDeductions employeeMonthToDateAmount(Double employeeMonthToDateAmount) {
    
    
    
    
    this.employeeMonthToDateAmount = employeeMonthToDateAmount;
    return this;
  }

   /**
   * Get employeeMonthToDateAmount
   * @return employeeMonthToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeMonthToDateAmount() {
    return employeeMonthToDateAmount;
  }


  public void setEmployeeMonthToDateAmount(Double employeeMonthToDateAmount) {
    
    
    
    this.employeeMonthToDateAmount = employeeMonthToDateAmount;
  }


  public EmpDeductions employeeQuarterToDateAmount(Double employeeQuarterToDateAmount) {
    
    
    
    
    this.employeeQuarterToDateAmount = employeeQuarterToDateAmount;
    return this;
  }

   /**
   * Get employeeQuarterToDateAmount
   * @return employeeQuarterToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeQuarterToDateAmount() {
    return employeeQuarterToDateAmount;
  }


  public void setEmployeeQuarterToDateAmount(Double employeeQuarterToDateAmount) {
    
    
    
    this.employeeQuarterToDateAmount = employeeQuarterToDateAmount;
  }


  public EmpDeductions employeeYearToDateAmount(Double employeeYearToDateAmount) {
    
    
    
    
    this.employeeYearToDateAmount = employeeYearToDateAmount;
    return this;
  }

   /**
   * Get employeeYearToDateAmount
   * @return employeeYearToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeYearToDateAmount() {
    return employeeYearToDateAmount;
  }


  public void setEmployeeYearToDateAmount(Double employeeYearToDateAmount) {
    
    
    
    this.employeeYearToDateAmount = employeeYearToDateAmount;
  }


  public EmpDeductions evidenceOfInsurabilityDate(OffsetDateTime evidenceOfInsurabilityDate) {
    
    
    
    
    this.evidenceOfInsurabilityDate = evidenceOfInsurabilityDate;
    return this;
  }

   /**
   * Get evidenceOfInsurabilityDate
   * @return evidenceOfInsurabilityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEvidenceOfInsurabilityDate() {
    return evidenceOfInsurabilityDate;
  }


  public void setEvidenceOfInsurabilityDate(OffsetDateTime evidenceOfInsurabilityDate) {
    
    
    
    this.evidenceOfInsurabilityDate = evidenceOfInsurabilityDate;
  }


  public EmpDeductions evidenceOfInsurabilityDesiredAmt(Double evidenceOfInsurabilityDesiredAmt) {
    
    
    
    
    this.evidenceOfInsurabilityDesiredAmt = evidenceOfInsurabilityDesiredAmt;
    return this;
  }

   /**
   * Get evidenceOfInsurabilityDesiredAmt
   * @return evidenceOfInsurabilityDesiredAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEvidenceOfInsurabilityDesiredAmt() {
    return evidenceOfInsurabilityDesiredAmt;
  }


  public void setEvidenceOfInsurabilityDesiredAmt(Double evidenceOfInsurabilityDesiredAmt) {
    
    
    
    this.evidenceOfInsurabilityDesiredAmt = evidenceOfInsurabilityDesiredAmt;
  }


  public EmpDeductions evidenceOfInsurabilityDesiredCalcRateOrPct(Double evidenceOfInsurabilityDesiredCalcRateOrPct) {
    
    
    
    
    this.evidenceOfInsurabilityDesiredCalcRateOrPct = evidenceOfInsurabilityDesiredCalcRateOrPct;
    return this;
  }

   /**
   * Get evidenceOfInsurabilityDesiredCalcRateOrPct
   * @return evidenceOfInsurabilityDesiredCalcRateOrPct
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEvidenceOfInsurabilityDesiredCalcRateOrPct() {
    return evidenceOfInsurabilityDesiredCalcRateOrPct;
  }


  public void setEvidenceOfInsurabilityDesiredCalcRateOrPct(Double evidenceOfInsurabilityDesiredCalcRateOrPct) {
    
    
    
    this.evidenceOfInsurabilityDesiredCalcRateOrPct = evidenceOfInsurabilityDesiredCalcRateOrPct;
  }


  public EmpDeductions employerAmount(Double employerAmount) {
    
    
    
    
    this.employerAmount = employerAmount;
    return this;
  }

   /**
   * Get employerAmount
   * @return employerAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerAmount() {
    return employerAmount;
  }


  public void setEmployerAmount(Double employerAmount) {
    
    
    
    this.employerAmount = employerAmount;
  }


  public EmpDeductions employerCalcRateOrPct(Double employerCalcRateOrPct) {
    
    
    
    
    this.employerCalcRateOrPct = employerCalcRateOrPct;
    return this;
  }

   /**
   * Get employerCalcRateOrPct
   * @return employerCalcRateOrPct
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerCalcRateOrPct() {
    return employerCalcRateOrPct;
  }


  public void setEmployerCalcRateOrPct(Double employerCalcRateOrPct) {
    
    
    
    this.employerCalcRateOrPct = employerCalcRateOrPct;
  }


  public EmpDeductions employerCalcRule(String employerCalcRule) {
    
    
    
    
    this.employerCalcRule = employerCalcRule;
    return this;
  }

   /**
   * Get employerCalcRule
   * @return employerCalcRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployerCalcRule() {
    return employerCalcRule;
  }


  public void setEmployerCalcRule(String employerCalcRule) {
    
    
    
    this.employerCalcRule = employerCalcRule;
  }


  public EmpDeductions employerFiscalYearToDateAmount(Double employerFiscalYearToDateAmount) {
    
    
    
    
    this.employerFiscalYearToDateAmount = employerFiscalYearToDateAmount;
    return this;
  }

   /**
   * Get employerFiscalYearToDateAmount
   * @return employerFiscalYearToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerFiscalYearToDateAmount() {
    return employerFiscalYearToDateAmount;
  }


  public void setEmployerFiscalYearToDateAmount(Double employerFiscalYearToDateAmount) {
    
    
    
    this.employerFiscalYearToDateAmount = employerFiscalYearToDateAmount;
  }


  public EmpDeductions employerLastAmount(Double employerLastAmount) {
    
    
    
    
    this.employerLastAmount = employerLastAmount;
    return this;
  }

   /**
   * Get employerLastAmount
   * @return employerLastAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerLastAmount() {
    return employerLastAmount;
  }


  public void setEmployerLastAmount(Double employerLastAmount) {
    
    
    
    this.employerLastAmount = employerLastAmount;
  }


  public EmpDeductions employerMonthToDateAmount(Double employerMonthToDateAmount) {
    
    
    
    
    this.employerMonthToDateAmount = employerMonthToDateAmount;
    return this;
  }

   /**
   * Get employerMonthToDateAmount
   * @return employerMonthToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerMonthToDateAmount() {
    return employerMonthToDateAmount;
  }


  public void setEmployerMonthToDateAmount(Double employerMonthToDateAmount) {
    
    
    
    this.employerMonthToDateAmount = employerMonthToDateAmount;
  }


  public EmpDeductions employerQuarterToDateAmount(Double employerQuarterToDateAmount) {
    
    
    
    
    this.employerQuarterToDateAmount = employerQuarterToDateAmount;
    return this;
  }

   /**
   * Get employerQuarterToDateAmount
   * @return employerQuarterToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerQuarterToDateAmount() {
    return employerQuarterToDateAmount;
  }


  public void setEmployerQuarterToDateAmount(Double employerQuarterToDateAmount) {
    
    
    
    this.employerQuarterToDateAmount = employerQuarterToDateAmount;
  }


  public EmpDeductions employerYearToDateAmount(Double employerYearToDateAmount) {
    
    
    
    
    this.employerYearToDateAmount = employerYearToDateAmount;
    return this;
  }

   /**
   * Get employerYearToDateAmount
   * @return employerYearToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerYearToDateAmount() {
    return employerYearToDateAmount;
  }


  public void setEmployerYearToDateAmount(Double employerYearToDateAmount) {
    
    
    
    this.employerYearToDateAmount = employerYearToDateAmount;
  }


  public EmpDeductions interestAmount(Double interestAmount) {
    
    
    
    
    this.interestAmount = interestAmount;
    return this;
  }

   /**
   * Get interestAmount
   * @return interestAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getInterestAmount() {
    return interestAmount;
  }


  public void setInterestAmount(Double interestAmount) {
    
    
    
    this.interestAmount = interestAmount;
  }


  public EmpDeductions isDeductionOffset(Boolean isDeductionOffset) {
    
    
    
    
    this.isDeductionOffset = isDeductionOffset;
    return this;
  }

   /**
   * Get isDeductionOffset
   * @return isDeductionOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDeductionOffset() {
    return isDeductionOffset;
  }


  public void setIsDeductionOffset(Boolean isDeductionOffset) {
    
    
    
    this.isDeductionOffset = isDeductionOffset;
  }


  public EmpDeductions medicalIndicator(Boolean medicalIndicator) {
    
    
    
    
    this.medicalIndicator = medicalIndicator;
    return this;
  }

   /**
   * Get medicalIndicator
   * @return medicalIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMedicalIndicator() {
    return medicalIndicator;
  }


  public void setMedicalIndicator(Boolean medicalIndicator) {
    
    
    
    this.medicalIndicator = medicalIndicator;
  }


  public EmpDeductions needEvidenceOfInsurability(Boolean needEvidenceOfInsurability) {
    
    
    
    
    this.needEvidenceOfInsurability = needEvidenceOfInsurability;
    return this;
  }

   /**
   * Get needEvidenceOfInsurability
   * @return needEvidenceOfInsurability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNeedEvidenceOfInsurability() {
    return needEvidenceOfInsurability;
  }


  public void setNeedEvidenceOfInsurability(Boolean needEvidenceOfInsurability) {
    
    
    
    this.needEvidenceOfInsurability = needEvidenceOfInsurability;
  }


  public EmpDeductions notes(String notes) {
    
    
    
    
    this.notes = notes;
    return this;
  }

   /**
   * Get notes
   * @return notes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotes() {
    return notes;
  }


  public void setNotes(String notes) {
    
    
    
    this.notes = notes;
  }


  public EmpDeductions primaryCarePhysician(String primaryCarePhysician) {
    
    
    
    
    this.primaryCarePhysician = primaryCarePhysician;
    return this;
  }

   /**
   * Get primaryCarePhysician
   * @return primaryCarePhysician
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryCarePhysician() {
    return primaryCarePhysician;
  }


  public void setPrimaryCarePhysician(String primaryCarePhysician) {
    
    
    
    this.primaryCarePhysician = primaryCarePhysician;
  }


  public EmpDeductions primaryCarePhysicianId(String primaryCarePhysicianId) {
    
    
    
    
    this.primaryCarePhysicianId = primaryCarePhysicianId;
    return this;
  }

   /**
   * Get primaryCarePhysicianId
   * @return primaryCarePhysicianId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryCarePhysicianId() {
    return primaryCarePhysicianId;
  }


  public void setPrimaryCarePhysicianId(String primaryCarePhysicianId) {
    
    
    
    this.primaryCarePhysicianId = primaryCarePhysicianId;
  }


  public EmpDeductions priorEmployeeAmount(Double priorEmployeeAmount) {
    
    
    
    
    this.priorEmployeeAmount = priorEmployeeAmount;
    return this;
  }

   /**
   * Get priorEmployeeAmount
   * @return priorEmployeeAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPriorEmployeeAmount() {
    return priorEmployeeAmount;
  }


  public void setPriorEmployeeAmount(Double priorEmployeeAmount) {
    
    
    
    this.priorEmployeeAmount = priorEmployeeAmount;
  }


  public EmpDeductions priorEmployeeGoalAmount(Double priorEmployeeGoalAmount) {
    
    
    
    
    this.priorEmployeeGoalAmount = priorEmployeeGoalAmount;
    return this;
  }

   /**
   * Get priorEmployeeGoalAmount
   * @return priorEmployeeGoalAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPriorEmployeeGoalAmount() {
    return priorEmployeeGoalAmount;
  }


  public void setPriorEmployeeGoalAmount(Double priorEmployeeGoalAmount) {
    
    
    
    this.priorEmployeeGoalAmount = priorEmployeeGoalAmount;
  }


  public EmpDeductions priorEmployeeYearToDateAmount(Double priorEmployeeYearToDateAmount) {
    
    
    
    
    this.priorEmployeeYearToDateAmount = priorEmployeeYearToDateAmount;
    return this;
  }

   /**
   * Get priorEmployeeYearToDateAmount
   * @return priorEmployeeYearToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPriorEmployeeYearToDateAmount() {
    return priorEmployeeYearToDateAmount;
  }


  public void setPriorEmployeeYearToDateAmount(Double priorEmployeeYearToDateAmount) {
    
    
    
    this.priorEmployeeYearToDateAmount = priorEmployeeYearToDateAmount;
  }


  public EmpDeductions priorEmployerYearToDateAmount(Double priorEmployerYearToDateAmount) {
    
    
    
    
    this.priorEmployerYearToDateAmount = priorEmployerYearToDateAmount;
    return this;
  }

   /**
   * Get priorEmployerYearToDateAmount
   * @return priorEmployerYearToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getPriorEmployerYearToDateAmount() {
    return priorEmployerYearToDateAmount;
  }


  public void setPriorEmployerYearToDateAmount(Double priorEmployerYearToDateAmount) {
    
    
    
    this.priorEmployerYearToDateAmount = priorEmployerYearToDateAmount;
  }


  public EmpDeductions deductionStartDate(OffsetDateTime deductionStartDate) {
    
    
    
    
    this.deductionStartDate = deductionStartDate;
    return this;
  }

   /**
   * Get deductionStartDate
   * @return deductionStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeductionStartDate() {
    return deductionStartDate;
  }


  public void setDeductionStartDate(OffsetDateTime deductionStartDate) {
    
    
    
    this.deductionStartDate = deductionStartDate;
  }


  public EmpDeductions deductionStopDate(OffsetDateTime deductionStopDate) {
    
    
    
    
    this.deductionStopDate = deductionStopDate;
    return this;
  }

   /**
   * Get deductionStopDate
   * @return deductionStopDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeductionStopDate() {
    return deductionStopDate;
  }


  public void setDeductionStopDate(OffsetDateTime deductionStopDate) {
    
    
    
    this.deductionStopDate = deductionStopDate;
  }


  public EmpDeductions systemID(String systemID) {
    
    
    
    
    this.systemID = systemID;
    return this;
  }

   /**
   * Get systemID
   * @return systemID
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSystemID() {
    return systemID;
  }


  public void setSystemID(String systemID) {
    
    
    
    this.systemID = systemID;
  }


  public EmpDeductions waiveReason(String waiveReason) {
    
    
    
    
    this.waiveReason = waiveReason;
    return this;
  }

   /**
   * Get waiveReason
   * @return waiveReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWaiveReason() {
    return waiveReason;
  }


  public void setWaiveReason(String waiveReason) {
    
    
    
    this.waiveReason = waiveReason;
  }


  public EmpDeductions isHomeCompany(Boolean isHomeCompany) {
    
    
    
    
    this.isHomeCompany = isHomeCompany;
    return this;
  }

   /**
   * Get isHomeCompany
   * @return isHomeCompany
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsHomeCompany() {
    return isHomeCompany;
  }


  public void setIsHomeCompany(Boolean isHomeCompany) {
    
    
    
    this.isHomeCompany = isHomeCompany;
  }


  public EmpDeductions isWaived(Boolean isWaived) {
    
    
    
    
    this.isWaived = isWaived;
    return this;
  }

   /**
   * Get isWaived
   * @return isWaived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsWaived() {
    return isWaived;
  }


  public void setIsWaived(Boolean isWaived) {
    
    
    
    this.isWaived = isWaived;
  }


  public EmpDeductions includeInAdditionalCheck(Boolean includeInAdditionalCheck) {
    
    
    
    
    this.includeInAdditionalCheck = includeInAdditionalCheck;
    return this;
  }

   /**
   * Get includeInAdditionalCheck
   * @return includeInAdditionalCheck
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeInAdditionalCheck() {
    return includeInAdditionalCheck;
  }


  public void setIncludeInAdditionalCheck(Boolean includeInAdditionalCheck) {
    
    
    
    this.includeInAdditionalCheck = includeInAdditionalCheck;
  }


  public EmpDeductions includeInManualCheck(Boolean includeInManualCheck) {
    
    
    
    
    this.includeInManualCheck = includeInManualCheck;
    return this;
  }

   /**
   * Get includeInManualCheck
   * @return includeInManualCheck
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIncludeInManualCheck() {
    return includeInManualCheck;
  }


  public void setIncludeInManualCheck(Boolean includeInManualCheck) {
    
    
    
    this.includeInManualCheck = includeInManualCheck;
  }


  public EmpDeductions employeePerCapAmount(Double employeePerCapAmount) {
    
    
    
    
    this.employeePerCapAmount = employeePerCapAmount;
    return this;
  }

   /**
   * Get employeePerCapAmount
   * @return employeePerCapAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeePerCapAmount() {
    return employeePerCapAmount;
  }


  public void setEmployeePerCapAmount(Double employeePerCapAmount) {
    
    
    
    this.employeePerCapAmount = employeePerCapAmount;
  }


  public EmpDeductions employeePerCapPercent(Double employeePerCapPercent) {
    
    
    
    
    this.employeePerCapPercent = employeePerCapPercent;
    return this;
  }

   /**
   * Get employeePerCapPercent
   * @return employeePerCapPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeePerCapPercent() {
    return employeePerCapPercent;
  }


  public void setEmployeePerCapPercent(Double employeePerCapPercent) {
    
    
    
    this.employeePerCapPercent = employeePerCapPercent;
  }


  public EmpDeductions employeePerCapCalcRule(String employeePerCapCalcRule) {
    
    
    
    
    this.employeePerCapCalcRule = employeePerCapCalcRule;
    return this;
  }

   /**
   * Get employeePerCapCalcRule
   * @return employeePerCapCalcRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeePerCapCalcRule() {
    return employeePerCapCalcRule;
  }


  public void setEmployeePerCapCalcRule(String employeePerCapCalcRule) {
    
    
    
    this.employeePerCapCalcRule = employeePerCapCalcRule;
  }


  public EmpDeductions employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public EmpDeductions companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public EmpDeductions dedCode(String dedCode) {
    
    
    
    
    this.dedCode = dedCode;
    return this;
  }

   /**
   * Get dedCode
   * @return dedCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDedCode() {
    return dedCode;
  }


  public void setDedCode(String dedCode) {
    
    
    
    this.dedCode = dedCode;
  }


  public EmpDeductions benStatus(String benStatus) {
    
    
    
    
    this.benStatus = benStatus;
    return this;
  }

   /**
   * Get benStatus
   * @return benStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenStatus() {
    return benStatus;
  }


  public void setBenStatus(String benStatus) {
    
    
    
    this.benStatus = benStatus;
  }


  public EmpDeductions endDateTime(OffsetDateTime endDateTime) {
    
    
    
    
    this.endDateTime = endDateTime;
    return this;
  }

   /**
   * Get endDateTime
   * @return endDateTime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndDateTime() {
    return endDateTime;
  }


  public void setEndDateTime(OffsetDateTime endDateTime) {
    
    
    
    this.endDateTime = endDateTime;
  }


  public EmpDeductions page(Integer page) {
    
    
    
    
    this.page = page;
    return this;
  }

   /**
   * Get page
   * @return page
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPage() {
    return page;
  }


  public void setPage(Integer page) {
    
    
    
    this.page = page;
  }


  public EmpDeductions perPage(Integer perPage) {
    
    
    
    
    this.perPage = perPage;
    return this;
  }

   /**
   * Get perPage
   * @return perPage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getPerPage() {
    return perPage;
  }


  public void setPerPage(Integer perPage) {
    
    
    
    this.perPage = perPage;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmpDeductions instance itself
   */
  public EmpDeductions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmpDeductions empDeductions = (EmpDeductions) o;
    return Objects.equals(this.arrearsAmt, empDeductions.arrearsAmt) &&
        Objects.equals(this.benefitAmount, empDeductions.benefitAmount) &&
        Objects.equals(this.benefitAmountCalcRule, empDeductions.benefitAmountCalcRule) &&
        Objects.equals(this.benefitAmountRateOrPercent, empDeductions.benefitAmountRateOrPercent) &&
        Objects.equals(this.benefitOption, empDeductions.benefitOption) &&
        Objects.equals(this.benefitStartDate, empDeductions.benefitStartDate) &&
        Objects.equals(this.benefitStatus, empDeductions.benefitStatus) &&
        Objects.equals(this.benefitStatusDate, empDeductions.benefitStatusDate) &&
        Objects.equals(this.benefitStopDate, empDeductions.benefitStopDate) &&
        Objects.equals(this.companyID, empDeductions.companyID) &&
        Objects.equals(this.customAmount1, empDeductions.customAmount1) &&
        Objects.equals(this.customAmount2, empDeductions.customAmount2) &&
        Objects.equals(this.customDate, empDeductions.customDate) &&
        Objects.equals(this.dateSuspendedFrom, empDeductions.dateSuspendedFrom) &&
        Objects.equals(this.dateSuspendedTo, empDeductions.dateSuspendedTo) &&
        Objects.equals(this.datetimeChanged, empDeductions.datetimeChanged) &&
        Objects.equals(this.datetimeCreated, empDeductions.datetimeCreated) &&
        Objects.equals(this.declinedByCarrier, empDeductions.declinedByCarrier) &&
        Objects.equals(this.declinedByCarrierDate, empDeductions.declinedByCarrierDate) &&
        Objects.equals(this.declinedByCarrierReason, empDeductions.declinedByCarrierReason) &&
        Objects.equals(this.deductionCode, empDeductions.deductionCode) &&
        Objects.equals(this.effectiveRecordID, empDeductions.effectiveRecordID) &&
        Objects.equals(this.contactID, empDeductions.contactID) &&
        Objects.equals(this.memberOrCaseNumber, empDeductions.memberOrCaseNumber) &&
        Objects.equals(this.employeeAmount, empDeductions.employeeAmount) &&
        Objects.equals(this.employeeCalcRateOrPct, empDeductions.employeeCalcRateOrPct) &&
        Objects.equals(this.employeeCalcRule, empDeductions.employeeCalcRule) &&
        Objects.equals(this.employeeCauseNumber, empDeductions.employeeCauseNumber) &&
        Objects.equals(this.employeeDedLastPaid, empDeductions.employeeDedLastPaid) &&
        Objects.equals(this.employeeEligibilityDate, empDeductions.employeeEligibilityDate) &&
        Objects.equals(this.employeeFiscalYTDAmt, empDeductions.employeeFiscalYTDAmt) &&
        Objects.equals(this.employeeGoalAmt, empDeductions.employeeGoalAmt) &&
        Objects.equals(this.employeeGoalToDateAmt, empDeductions.employeeGoalToDateAmt) &&
        Objects.equals(this.employeeID, empDeductions.employeeID) &&
        Objects.equals(this.employeeLastAmount, empDeductions.employeeLastAmount) &&
        Objects.equals(this.employeeMonthToDateAmount, empDeductions.employeeMonthToDateAmount) &&
        Objects.equals(this.employeeQuarterToDateAmount, empDeductions.employeeQuarterToDateAmount) &&
        Objects.equals(this.employeeYearToDateAmount, empDeductions.employeeYearToDateAmount) &&
        Objects.equals(this.evidenceOfInsurabilityDate, empDeductions.evidenceOfInsurabilityDate) &&
        Objects.equals(this.evidenceOfInsurabilityDesiredAmt, empDeductions.evidenceOfInsurabilityDesiredAmt) &&
        Objects.equals(this.evidenceOfInsurabilityDesiredCalcRateOrPct, empDeductions.evidenceOfInsurabilityDesiredCalcRateOrPct) &&
        Objects.equals(this.employerAmount, empDeductions.employerAmount) &&
        Objects.equals(this.employerCalcRateOrPct, empDeductions.employerCalcRateOrPct) &&
        Objects.equals(this.employerCalcRule, empDeductions.employerCalcRule) &&
        Objects.equals(this.employerFiscalYearToDateAmount, empDeductions.employerFiscalYearToDateAmount) &&
        Objects.equals(this.employerLastAmount, empDeductions.employerLastAmount) &&
        Objects.equals(this.employerMonthToDateAmount, empDeductions.employerMonthToDateAmount) &&
        Objects.equals(this.employerQuarterToDateAmount, empDeductions.employerQuarterToDateAmount) &&
        Objects.equals(this.employerYearToDateAmount, empDeductions.employerYearToDateAmount) &&
        Objects.equals(this.interestAmount, empDeductions.interestAmount) &&
        Objects.equals(this.isDeductionOffset, empDeductions.isDeductionOffset) &&
        Objects.equals(this.medicalIndicator, empDeductions.medicalIndicator) &&
        Objects.equals(this.needEvidenceOfInsurability, empDeductions.needEvidenceOfInsurability) &&
        Objects.equals(this.notes, empDeductions.notes) &&
        Objects.equals(this.primaryCarePhysician, empDeductions.primaryCarePhysician) &&
        Objects.equals(this.primaryCarePhysicianId, empDeductions.primaryCarePhysicianId) &&
        Objects.equals(this.priorEmployeeAmount, empDeductions.priorEmployeeAmount) &&
        Objects.equals(this.priorEmployeeGoalAmount, empDeductions.priorEmployeeGoalAmount) &&
        Objects.equals(this.priorEmployeeYearToDateAmount, empDeductions.priorEmployeeYearToDateAmount) &&
        Objects.equals(this.priorEmployerYearToDateAmount, empDeductions.priorEmployerYearToDateAmount) &&
        Objects.equals(this.deductionStartDate, empDeductions.deductionStartDate) &&
        Objects.equals(this.deductionStopDate, empDeductions.deductionStopDate) &&
        Objects.equals(this.systemID, empDeductions.systemID) &&
        Objects.equals(this.waiveReason, empDeductions.waiveReason) &&
        Objects.equals(this.isHomeCompany, empDeductions.isHomeCompany) &&
        Objects.equals(this.isWaived, empDeductions.isWaived) &&
        Objects.equals(this.includeInAdditionalCheck, empDeductions.includeInAdditionalCheck) &&
        Objects.equals(this.includeInManualCheck, empDeductions.includeInManualCheck) &&
        Objects.equals(this.employeePerCapAmount, empDeductions.employeePerCapAmount) &&
        Objects.equals(this.employeePerCapPercent, empDeductions.employeePerCapPercent) &&
        Objects.equals(this.employeePerCapCalcRule, empDeductions.employeePerCapCalcRule) &&
        Objects.equals(this.employeeId, empDeductions.employeeId) &&
        Objects.equals(this.companyId, empDeductions.companyId) &&
        Objects.equals(this.dedCode, empDeductions.dedCode) &&
        Objects.equals(this.benStatus, empDeductions.benStatus) &&
        Objects.equals(this.endDateTime, empDeductions.endDateTime) &&
        Objects.equals(this.page, empDeductions.page) &&
        Objects.equals(this.perPage, empDeductions.perPage)&&
        Objects.equals(this.additionalProperties, empDeductions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arrearsAmt, benefitAmount, benefitAmountCalcRule, benefitAmountRateOrPercent, benefitOption, benefitStartDate, benefitStatus, benefitStatusDate, benefitStopDate, companyID, customAmount1, customAmount2, customDate, dateSuspendedFrom, dateSuspendedTo, datetimeChanged, datetimeCreated, declinedByCarrier, declinedByCarrierDate, declinedByCarrierReason, deductionCode, effectiveRecordID, contactID, memberOrCaseNumber, employeeAmount, employeeCalcRateOrPct, employeeCalcRule, employeeCauseNumber, employeeDedLastPaid, employeeEligibilityDate, employeeFiscalYTDAmt, employeeGoalAmt, employeeGoalToDateAmt, employeeID, employeeLastAmount, employeeMonthToDateAmount, employeeQuarterToDateAmount, employeeYearToDateAmount, evidenceOfInsurabilityDate, evidenceOfInsurabilityDesiredAmt, evidenceOfInsurabilityDesiredCalcRateOrPct, employerAmount, employerCalcRateOrPct, employerCalcRule, employerFiscalYearToDateAmount, employerLastAmount, employerMonthToDateAmount, employerQuarterToDateAmount, employerYearToDateAmount, interestAmount, isDeductionOffset, medicalIndicator, needEvidenceOfInsurability, notes, primaryCarePhysician, primaryCarePhysicianId, priorEmployeeAmount, priorEmployeeGoalAmount, priorEmployeeYearToDateAmount, priorEmployerYearToDateAmount, deductionStartDate, deductionStopDate, systemID, waiveReason, isHomeCompany, isWaived, includeInAdditionalCheck, includeInManualCheck, employeePerCapAmount, employeePerCapPercent, employeePerCapCalcRule, employeeId, companyId, dedCode, benStatus, endDateTime, page, perPage, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmpDeductions {\n");
    sb.append("    arrearsAmt: ").append(toIndentedString(arrearsAmt)).append("\n");
    sb.append("    benefitAmount: ").append(toIndentedString(benefitAmount)).append("\n");
    sb.append("    benefitAmountCalcRule: ").append(toIndentedString(benefitAmountCalcRule)).append("\n");
    sb.append("    benefitAmountRateOrPercent: ").append(toIndentedString(benefitAmountRateOrPercent)).append("\n");
    sb.append("    benefitOption: ").append(toIndentedString(benefitOption)).append("\n");
    sb.append("    benefitStartDate: ").append(toIndentedString(benefitStartDate)).append("\n");
    sb.append("    benefitStatus: ").append(toIndentedString(benefitStatus)).append("\n");
    sb.append("    benefitStatusDate: ").append(toIndentedString(benefitStatusDate)).append("\n");
    sb.append("    benefitStopDate: ").append(toIndentedString(benefitStopDate)).append("\n");
    sb.append("    companyID: ").append(toIndentedString(companyID)).append("\n");
    sb.append("    customAmount1: ").append(toIndentedString(customAmount1)).append("\n");
    sb.append("    customAmount2: ").append(toIndentedString(customAmount2)).append("\n");
    sb.append("    customDate: ").append(toIndentedString(customDate)).append("\n");
    sb.append("    dateSuspendedFrom: ").append(toIndentedString(dateSuspendedFrom)).append("\n");
    sb.append("    dateSuspendedTo: ").append(toIndentedString(dateSuspendedTo)).append("\n");
    sb.append("    datetimeChanged: ").append(toIndentedString(datetimeChanged)).append("\n");
    sb.append("    datetimeCreated: ").append(toIndentedString(datetimeCreated)).append("\n");
    sb.append("    declinedByCarrier: ").append(toIndentedString(declinedByCarrier)).append("\n");
    sb.append("    declinedByCarrierDate: ").append(toIndentedString(declinedByCarrierDate)).append("\n");
    sb.append("    declinedByCarrierReason: ").append(toIndentedString(declinedByCarrierReason)).append("\n");
    sb.append("    deductionCode: ").append(toIndentedString(deductionCode)).append("\n");
    sb.append("    effectiveRecordID: ").append(toIndentedString(effectiveRecordID)).append("\n");
    sb.append("    contactID: ").append(toIndentedString(contactID)).append("\n");
    sb.append("    memberOrCaseNumber: ").append(toIndentedString(memberOrCaseNumber)).append("\n");
    sb.append("    employeeAmount: ").append(toIndentedString(employeeAmount)).append("\n");
    sb.append("    employeeCalcRateOrPct: ").append(toIndentedString(employeeCalcRateOrPct)).append("\n");
    sb.append("    employeeCalcRule: ").append(toIndentedString(employeeCalcRule)).append("\n");
    sb.append("    employeeCauseNumber: ").append(toIndentedString(employeeCauseNumber)).append("\n");
    sb.append("    employeeDedLastPaid: ").append(toIndentedString(employeeDedLastPaid)).append("\n");
    sb.append("    employeeEligibilityDate: ").append(toIndentedString(employeeEligibilityDate)).append("\n");
    sb.append("    employeeFiscalYTDAmt: ").append(toIndentedString(employeeFiscalYTDAmt)).append("\n");
    sb.append("    employeeGoalAmt: ").append(toIndentedString(employeeGoalAmt)).append("\n");
    sb.append("    employeeGoalToDateAmt: ").append(toIndentedString(employeeGoalToDateAmt)).append("\n");
    sb.append("    employeeID: ").append(toIndentedString(employeeID)).append("\n");
    sb.append("    employeeLastAmount: ").append(toIndentedString(employeeLastAmount)).append("\n");
    sb.append("    employeeMonthToDateAmount: ").append(toIndentedString(employeeMonthToDateAmount)).append("\n");
    sb.append("    employeeQuarterToDateAmount: ").append(toIndentedString(employeeQuarterToDateAmount)).append("\n");
    sb.append("    employeeYearToDateAmount: ").append(toIndentedString(employeeYearToDateAmount)).append("\n");
    sb.append("    evidenceOfInsurabilityDate: ").append(toIndentedString(evidenceOfInsurabilityDate)).append("\n");
    sb.append("    evidenceOfInsurabilityDesiredAmt: ").append(toIndentedString(evidenceOfInsurabilityDesiredAmt)).append("\n");
    sb.append("    evidenceOfInsurabilityDesiredCalcRateOrPct: ").append(toIndentedString(evidenceOfInsurabilityDesiredCalcRateOrPct)).append("\n");
    sb.append("    employerAmount: ").append(toIndentedString(employerAmount)).append("\n");
    sb.append("    employerCalcRateOrPct: ").append(toIndentedString(employerCalcRateOrPct)).append("\n");
    sb.append("    employerCalcRule: ").append(toIndentedString(employerCalcRule)).append("\n");
    sb.append("    employerFiscalYearToDateAmount: ").append(toIndentedString(employerFiscalYearToDateAmount)).append("\n");
    sb.append("    employerLastAmount: ").append(toIndentedString(employerLastAmount)).append("\n");
    sb.append("    employerMonthToDateAmount: ").append(toIndentedString(employerMonthToDateAmount)).append("\n");
    sb.append("    employerQuarterToDateAmount: ").append(toIndentedString(employerQuarterToDateAmount)).append("\n");
    sb.append("    employerYearToDateAmount: ").append(toIndentedString(employerYearToDateAmount)).append("\n");
    sb.append("    interestAmount: ").append(toIndentedString(interestAmount)).append("\n");
    sb.append("    isDeductionOffset: ").append(toIndentedString(isDeductionOffset)).append("\n");
    sb.append("    medicalIndicator: ").append(toIndentedString(medicalIndicator)).append("\n");
    sb.append("    needEvidenceOfInsurability: ").append(toIndentedString(needEvidenceOfInsurability)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    primaryCarePhysician: ").append(toIndentedString(primaryCarePhysician)).append("\n");
    sb.append("    primaryCarePhysicianId: ").append(toIndentedString(primaryCarePhysicianId)).append("\n");
    sb.append("    priorEmployeeAmount: ").append(toIndentedString(priorEmployeeAmount)).append("\n");
    sb.append("    priorEmployeeGoalAmount: ").append(toIndentedString(priorEmployeeGoalAmount)).append("\n");
    sb.append("    priorEmployeeYearToDateAmount: ").append(toIndentedString(priorEmployeeYearToDateAmount)).append("\n");
    sb.append("    priorEmployerYearToDateAmount: ").append(toIndentedString(priorEmployerYearToDateAmount)).append("\n");
    sb.append("    deductionStartDate: ").append(toIndentedString(deductionStartDate)).append("\n");
    sb.append("    deductionStopDate: ").append(toIndentedString(deductionStopDate)).append("\n");
    sb.append("    systemID: ").append(toIndentedString(systemID)).append("\n");
    sb.append("    waiveReason: ").append(toIndentedString(waiveReason)).append("\n");
    sb.append("    isHomeCompany: ").append(toIndentedString(isHomeCompany)).append("\n");
    sb.append("    isWaived: ").append(toIndentedString(isWaived)).append("\n");
    sb.append("    includeInAdditionalCheck: ").append(toIndentedString(includeInAdditionalCheck)).append("\n");
    sb.append("    includeInManualCheck: ").append(toIndentedString(includeInManualCheck)).append("\n");
    sb.append("    employeePerCapAmount: ").append(toIndentedString(employeePerCapAmount)).append("\n");
    sb.append("    employeePerCapPercent: ").append(toIndentedString(employeePerCapPercent)).append("\n");
    sb.append("    employeePerCapCalcRule: ").append(toIndentedString(employeePerCapCalcRule)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    dedCode: ").append(toIndentedString(dedCode)).append("\n");
    sb.append("    benStatus: ").append(toIndentedString(benStatus)).append("\n");
    sb.append("    endDateTime: ").append(toIndentedString(endDateTime)).append("\n");
    sb.append("    page: ").append(toIndentedString(page)).append("\n");
    sb.append("    perPage: ").append(toIndentedString(perPage)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("arrearsAmt");
    openapiFields.add("benefitAmount");
    openapiFields.add("benefitAmountCalcRule");
    openapiFields.add("benefitAmountRateOrPercent");
    openapiFields.add("benefitOption");
    openapiFields.add("benefitStartDate");
    openapiFields.add("benefitStatus");
    openapiFields.add("benefitStatusDate");
    openapiFields.add("benefitStopDate");
    openapiFields.add("companyID");
    openapiFields.add("customAmount1");
    openapiFields.add("customAmount2");
    openapiFields.add("customDate");
    openapiFields.add("dateSuspendedFrom");
    openapiFields.add("dateSuspendedTo");
    openapiFields.add("datetimeChanged");
    openapiFields.add("datetimeCreated");
    openapiFields.add("declinedByCarrier");
    openapiFields.add("declinedByCarrierDate");
    openapiFields.add("declinedByCarrierReason");
    openapiFields.add("deductionCode");
    openapiFields.add("effectiveRecordID");
    openapiFields.add("contactID");
    openapiFields.add("memberOrCaseNumber");
    openapiFields.add("employeeAmount");
    openapiFields.add("employeeCalcRateOrPct");
    openapiFields.add("employeeCalcRule");
    openapiFields.add("employeeCauseNumber");
    openapiFields.add("employeeDedLastPaid");
    openapiFields.add("employeeEligibilityDate");
    openapiFields.add("employeeFiscalYTDAmt");
    openapiFields.add("employeeGoalAmt");
    openapiFields.add("employeeGoalToDateAmt");
    openapiFields.add("employeeID");
    openapiFields.add("employeeLastAmount");
    openapiFields.add("employeeMonthToDateAmount");
    openapiFields.add("employeeQuarterToDateAmount");
    openapiFields.add("employeeYearToDateAmount");
    openapiFields.add("evidenceOfInsurabilityDate");
    openapiFields.add("evidenceOfInsurabilityDesiredAmt");
    openapiFields.add("evidenceOfInsurabilityDesiredCalcRateOrPct");
    openapiFields.add("employerAmount");
    openapiFields.add("employerCalcRateOrPct");
    openapiFields.add("employerCalcRule");
    openapiFields.add("employerFiscalYearToDateAmount");
    openapiFields.add("employerLastAmount");
    openapiFields.add("employerMonthToDateAmount");
    openapiFields.add("employerQuarterToDateAmount");
    openapiFields.add("employerYearToDateAmount");
    openapiFields.add("interestAmount");
    openapiFields.add("isDeductionOffset");
    openapiFields.add("medicalIndicator");
    openapiFields.add("needEvidenceOfInsurability");
    openapiFields.add("notes");
    openapiFields.add("primaryCarePhysician");
    openapiFields.add("primaryCarePhysicianId");
    openapiFields.add("priorEmployeeAmount");
    openapiFields.add("priorEmployeeGoalAmount");
    openapiFields.add("priorEmployeeYearToDateAmount");
    openapiFields.add("priorEmployerYearToDateAmount");
    openapiFields.add("deductionStartDate");
    openapiFields.add("deductionStopDate");
    openapiFields.add("systemID");
    openapiFields.add("waiveReason");
    openapiFields.add("isHomeCompany");
    openapiFields.add("isWaived");
    openapiFields.add("includeInAdditionalCheck");
    openapiFields.add("includeInManualCheck");
    openapiFields.add("employeePerCapAmount");
    openapiFields.add("employeePerCapPercent");
    openapiFields.add("employeePerCapCalcRule");
    openapiFields.add("employeeId");
    openapiFields.add("companyId");
    openapiFields.add("dedCode");
    openapiFields.add("benStatus");
    openapiFields.add("endDateTime");
    openapiFields.add("page");
    openapiFields.add("per_Page");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmpDeductions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmpDeductions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmpDeductions is not found in the empty JSON string", EmpDeductions.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("benefitAmountCalcRule") != null && !jsonObj.get("benefitAmountCalcRule").isJsonNull()) && !jsonObj.get("benefitAmountCalcRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitAmountCalcRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitAmountCalcRule").toString()));
      }
      if ((jsonObj.get("benefitOption") != null && !jsonObj.get("benefitOption").isJsonNull()) && !jsonObj.get("benefitOption").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitOption` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitOption").toString()));
      }
      if ((jsonObj.get("benefitStatus") != null && !jsonObj.get("benefitStatus").isJsonNull()) && !jsonObj.get("benefitStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitStatus").toString()));
      }
      if ((jsonObj.get("companyID") != null && !jsonObj.get("companyID").isJsonNull()) && !jsonObj.get("companyID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyID").toString()));
      }
      if ((jsonObj.get("declinedByCarrier") != null && !jsonObj.get("declinedByCarrier").isJsonNull()) && !jsonObj.get("declinedByCarrier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `declinedByCarrier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("declinedByCarrier").toString()));
      }
      if ((jsonObj.get("declinedByCarrierReason") != null && !jsonObj.get("declinedByCarrierReason").isJsonNull()) && !jsonObj.get("declinedByCarrierReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `declinedByCarrierReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("declinedByCarrierReason").toString()));
      }
      if ((jsonObj.get("deductionCode") != null && !jsonObj.get("deductionCode").isJsonNull()) && !jsonObj.get("deductionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionCode").toString()));
      }
      if ((jsonObj.get("effectiveRecordID") != null && !jsonObj.get("effectiveRecordID").isJsonNull()) && !jsonObj.get("effectiveRecordID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `effectiveRecordID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("effectiveRecordID").toString()));
      }
      if ((jsonObj.get("contactID") != null && !jsonObj.get("contactID").isJsonNull()) && !jsonObj.get("contactID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactID").toString()));
      }
      if ((jsonObj.get("memberOrCaseNumber") != null && !jsonObj.get("memberOrCaseNumber").isJsonNull()) && !jsonObj.get("memberOrCaseNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memberOrCaseNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memberOrCaseNumber").toString()));
      }
      if ((jsonObj.get("employeeCalcRule") != null && !jsonObj.get("employeeCalcRule").isJsonNull()) && !jsonObj.get("employeeCalcRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeCalcRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeCalcRule").toString()));
      }
      if ((jsonObj.get("employeeCauseNumber") != null && !jsonObj.get("employeeCauseNumber").isJsonNull()) && !jsonObj.get("employeeCauseNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeCauseNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeCauseNumber").toString()));
      }
      if ((jsonObj.get("employeeID") != null && !jsonObj.get("employeeID").isJsonNull()) && !jsonObj.get("employeeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeID").toString()));
      }
      if ((jsonObj.get("employerCalcRule") != null && !jsonObj.get("employerCalcRule").isJsonNull()) && !jsonObj.get("employerCalcRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employerCalcRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employerCalcRule").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("primaryCarePhysician") != null && !jsonObj.get("primaryCarePhysician").isJsonNull()) && !jsonObj.get("primaryCarePhysician").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryCarePhysician` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryCarePhysician").toString()));
      }
      if ((jsonObj.get("primaryCarePhysicianId") != null && !jsonObj.get("primaryCarePhysicianId").isJsonNull()) && !jsonObj.get("primaryCarePhysicianId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryCarePhysicianId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryCarePhysicianId").toString()));
      }
      if ((jsonObj.get("systemID") != null && !jsonObj.get("systemID").isJsonNull()) && !jsonObj.get("systemID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `systemID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("systemID").toString()));
      }
      if ((jsonObj.get("waiveReason") != null && !jsonObj.get("waiveReason").isJsonNull()) && !jsonObj.get("waiveReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `waiveReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("waiveReason").toString()));
      }
      if ((jsonObj.get("employeePerCapCalcRule") != null && !jsonObj.get("employeePerCapCalcRule").isJsonNull()) && !jsonObj.get("employeePerCapCalcRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeePerCapCalcRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeePerCapCalcRule").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("dedCode") != null && !jsonObj.get("dedCode").isJsonNull()) && !jsonObj.get("dedCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dedCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dedCode").toString()));
      }
      if ((jsonObj.get("benStatus") != null && !jsonObj.get("benStatus").isJsonNull()) && !jsonObj.get("benStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benStatus").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmpDeductions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmpDeductions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmpDeductions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmpDeductions.class));

       return (TypeAdapter<T>) new TypeAdapter<EmpDeductions>() {
           @Override
           public void write(JsonWriter out, EmpDeductions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmpDeductions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmpDeductions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmpDeductions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmpDeductions
  * @throws IOException if the JSON string is invalid with respect to EmpDeductions
  */
  public static EmpDeductions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmpDeductions.class);
  }

 /**
  * Convert an instance of EmpDeductions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

