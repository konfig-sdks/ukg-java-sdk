/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.EmployeePayStatementAccrualsModel;
import com.konfigthis.client.model.EmployeePayStatementDeductionsModel;
import com.konfigthis.client.model.EmployeePayStatementEarningsModel;
import com.konfigthis.client.model.EmployeePayStatementIdentifierModel;
import com.konfigthis.client.model.EmployeePayStatementNetPayModel;
import com.konfigthis.client.model.EmployeePayStatementTaxesModel;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * EmployeePayStatementModel
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class EmployeePayStatementModel {
  public static final String SERIALIZED_NAME_ACCRUALS = "accruals";
  @SerializedName(SERIALIZED_NAME_ACCRUALS)
  private List<EmployeePayStatementAccrualsModel> accruals = null;

  public static final String SERIALIZED_NAME_ADDRESSLINE1 = "addressline1";
  @SerializedName(SERIALIZED_NAME_ADDRESSLINE1)
  private String addressline1;

  public static final String SERIALIZED_NAME_ADDRESSLINE2 = "addressline2";
  @SerializedName(SERIALIZED_NAME_ADDRESSLINE2)
  private String addressline2;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_COMPANYADDRESSCITY = "companyaddresscity";
  @SerializedName(SERIALIZED_NAME_COMPANYADDRESSCITY)
  private String companyaddresscity;

  public static final String SERIALIZED_NAME_COMPANYADDRESSCOUNTRY = "companyaddresscountry";
  @SerializedName(SERIALIZED_NAME_COMPANYADDRESSCOUNTRY)
  private String companyaddresscountry;

  public static final String SERIALIZED_NAME_COMPANYADDRESSCOUNTY = "companyaddresscounty";
  @SerializedName(SERIALIZED_NAME_COMPANYADDRESSCOUNTY)
  private String companyaddresscounty;

  public static final String SERIALIZED_NAME_COMPANYADDRESSLINE1 = "companyaddressline1";
  @SerializedName(SERIALIZED_NAME_COMPANYADDRESSLINE1)
  private String companyaddressline1;

  public static final String SERIALIZED_NAME_COMPANYADDRESSLINE2 = "companyaddressline2";
  @SerializedName(SERIALIZED_NAME_COMPANYADDRESSLINE2)
  private String companyaddressline2;

  public static final String SERIALIZED_NAME_COMPANYADDRESSPOSTALCODE = "companyaddresspostalcode";
  @SerializedName(SERIALIZED_NAME_COMPANYADDRESSPOSTALCODE)
  private String companyaddresspostalcode;

  public static final String SERIALIZED_NAME_COMPANYADDRESSSTATEORPROVINCE = "companyaddressstateorprovince";
  @SerializedName(SERIALIZED_NAME_COMPANYADDRESSSTATEORPROVINCE)
  private String companyaddressstateorprovince;

  public static final String SERIALIZED_NAME_COMPANYNAME = "companyname";
  @SerializedName(SERIALIZED_NAME_COMPANYNAME)
  private String companyname;

  public static final String SERIALIZED_NAME_COMPANYPHONE = "companyphone";
  @SerializedName(SERIALIZED_NAME_COMPANYPHONE)
  private String companyphone;

  public static final String SERIALIZED_NAME_COMPANYPHONEEXT = "companyphoneext";
  @SerializedName(SERIALIZED_NAME_COMPANYPHONEEXT)
  private String companyphoneext;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_DEDUCTIONS = "deductions";
  @SerializedName(SERIALIZED_NAME_DEDUCTIONS)
  private List<EmployeePayStatementDeductionsModel> deductions = null;

  public static final String SERIALIZED_NAME_DEDUCTIONSCURRENT = "deductionscurrent";
  @SerializedName(SERIALIZED_NAME_DEDUCTIONSCURRENT)
  private Float deductionscurrent;

  public static final String SERIALIZED_NAME_DEDUCTIONSYTD = "deductionsytd";
  @SerializedName(SERIALIZED_NAME_DEDUCTIONSYTD)
  private Float deductionsytd;

  public static final String SERIALIZED_NAME_DOCUMENT = "document";
  @SerializedName(SERIALIZED_NAME_DOCUMENT)
  private String document;

  public static final String SERIALIZED_NAME_EARNINGS = "earnings";
  @SerializedName(SERIALIZED_NAME_EARNINGS)
  private List<EmployeePayStatementEarningsModel> earnings = null;

  public static final String SERIALIZED_NAME_EMPLOYEEIDENTIFIER = "employeeidentifier";
  @SerializedName(SERIALIZED_NAME_EMPLOYEEIDENTIFIER)
  private EmployeePayStatementIdentifierModel employeeidentifier;

  public static final String SERIALIZED_NAME_EMPLOYEENUMBER = "employeenumber";
  @SerializedName(SERIALIZED_NAME_EMPLOYEENUMBER)
  private String employeenumber;

  public static final String SERIALIZED_NAME_FEDERALADDITIONALAMOUNT_WITHHELD = "federaladditionalamountWithheld";
  @SerializedName(SERIALIZED_NAME_FEDERALADDITIONALAMOUNT_WITHHELD)
  private Float federaladditionalamountWithheld;

  public static final String SERIALIZED_NAME_FEDERALALLOWANCESCLAIMED = "federalallowancesclaimed";
  @SerializedName(SERIALIZED_NAME_FEDERALALLOWANCESCLAIMED)
  private Integer federalallowancesclaimed;

  public static final String SERIALIZED_NAME_FEDERALFILINGSTATUS = "federalfilingstatus";
  @SerializedName(SERIALIZED_NAME_FEDERALFILINGSTATUS)
  private String federalfilingstatus;

  public static final String SERIALIZED_NAME_FEDERALTAXABLEWAGESCURRENT = "federaltaxablewagescurrent";
  @SerializedName(SERIALIZED_NAME_FEDERALTAXABLEWAGESCURRENT)
  private Float federaltaxablewagescurrent;

  public static final String SERIALIZED_NAME_FEDERALTAXABLEWAGESYTD = "federaltaxablewagesytd";
  @SerializedName(SERIALIZED_NAME_FEDERALTAXABLEWAGESYTD)
  private Float federaltaxablewagesytd;

  public static final String SERIALIZED_NAME_FULLNAME = "fullname";
  @SerializedName(SERIALIZED_NAME_FULLNAME)
  private String fullname;

  public static final String SERIALIZED_NAME_GROSSWAGESCURRENT = "grosswagescurrent";
  @SerializedName(SERIALIZED_NAME_GROSSWAGESCURRENT)
  private Float grosswagescurrent;

  public static final String SERIALIZED_NAME_GROSSWAGESYTD = "grosswagesytd";
  @SerializedName(SERIALIZED_NAME_GROSSWAGESYTD)
  private Float grosswagesytd;

  public static final String SERIALIZED_NAME_JOB = "job";
  @SerializedName(SERIALIZED_NAME_JOB)
  private String job;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_NETPAY = "netpay";
  @SerializedName(SERIALIZED_NAME_NETPAY)
  private List<EmployeePayStatementNetPayModel> netpay = null;

  public static final String SERIALIZED_NAME_NETPAYCURRENT = "netpaycurrent";
  @SerializedName(SERIALIZED_NAME_NETPAYCURRENT)
  private Float netpaycurrent;

  public static final String SERIALIZED_NAME_NETPAYYTD = "netpayytd";
  @SerializedName(SERIALIZED_NAME_NETPAYYTD)
  private Float netpayytd;

  public static final String SERIALIZED_NAME_ORGLEVEL1 = "orglevel1";
  @SerializedName(SERIALIZED_NAME_ORGLEVEL1)
  private String orglevel1;

  public static final String SERIALIZED_NAME_ORGLEVEL2 = "orglevel2";
  @SerializedName(SERIALIZED_NAME_ORGLEVEL2)
  private String orglevel2;

  public static final String SERIALIZED_NAME_ORGLEVEL3 = "orglevel3";
  @SerializedName(SERIALIZED_NAME_ORGLEVEL3)
  private String orglevel3;

  public static final String SERIALIZED_NAME_ORGLEVEL4 = "orglevel4";
  @SerializedName(SERIALIZED_NAME_ORGLEVEL4)
  private String orglevel4;

  public static final String SERIALIZED_NAME_PAYDATE = "paydate";
  @SerializedName(SERIALIZED_NAME_PAYDATE)
  private OffsetDateTime paydate;

  public static final String SERIALIZED_NAME_PAYPERIODFREQUENCY = "payperiodfrequency";
  @SerializedName(SERIALIZED_NAME_PAYPERIODFREQUENCY)
  private String payperiodfrequency;

  public static final String SERIALIZED_NAME_PAYGROUP = "paygroup";
  @SerializedName(SERIALIZED_NAME_PAYGROUP)
  private String paygroup;

  public static final String SERIALIZED_NAME_PAYIDENTIFIER = "payidentifier";
  @SerializedName(SERIALIZED_NAME_PAYIDENTIFIER)
  private String payidentifier;

  public static final String SERIALIZED_NAME_PAYRATE = "payrate";
  @SerializedName(SERIALIZED_NAME_PAYRATE)
  private Float payrate;

  public static final String SERIALIZED_NAME_PERIODENDDATE = "periodenddate";
  @SerializedName(SERIALIZED_NAME_PERIODENDDATE)
  private OffsetDateTime periodenddate;

  public static final String SERIALIZED_NAME_PERIODSTARTDATE = "periodstartdate";
  @SerializedName(SERIALIZED_NAME_PERIODSTARTDATE)
  private OffsetDateTime periodstartdate;

  public static final String SERIALIZED_NAME_POSTALCODE = "postalcode";
  @SerializedName(SERIALIZED_NAME_POSTALCODE)
  private String postalcode;

  public static final String SERIALIZED_NAME_RESIDENTSTATEALLOWANCESCLAIMED = "residentstateallowancesclaimed";
  @SerializedName(SERIALIZED_NAME_RESIDENTSTATEALLOWANCESCLAIMED)
  private Integer residentstateallowancesclaimed;

  public static final String SERIALIZED_NAME_RESIDENTSTATEFILINGSTATUS = "residentstatefilingstatus";
  @SerializedName(SERIALIZED_NAME_RESIDENTSTATEFILINGSTATUS)
  private String residentstatefilingstatus;

  public static final String SERIALIZED_NAME_SSN = "ssn";
  @SerializedName(SERIALIZED_NAME_SSN)
  private String ssn;

  public static final String SERIALIZED_NAME_STATEORPROVINCE = "stateorprovince";
  @SerializedName(SERIALIZED_NAME_STATEORPROVINCE)
  private String stateorprovince;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  private List<EmployeePayStatementTaxesModel> taxes = null;

  public static final String SERIALIZED_NAME_TAXESCURRENT = "taxescurrent";
  @SerializedName(SERIALIZED_NAME_TAXESCURRENT)
  private Float taxescurrent;

  public static final String SERIALIZED_NAME_TAXESYTD = "taxesytd";
  @SerializedName(SERIALIZED_NAME_TAXESYTD)
  private Float taxesytd;

  public static final String SERIALIZED_NAME_WORKSTATEALLOWANCESCLAIMED = "workstateallowancesclaimed";
  @SerializedName(SERIALIZED_NAME_WORKSTATEALLOWANCESCLAIMED)
  private Integer workstateallowancesclaimed;

  public static final String SERIALIZED_NAME_WORKSTATEFILINGSTATUS = "workstatefilingstatus";
  @SerializedName(SERIALIZED_NAME_WORKSTATEFILINGSTATUS)
  private String workstatefilingstatus;

  public EmployeePayStatementModel() {
  }

  public EmployeePayStatementModel accruals(List<EmployeePayStatementAccrualsModel> accruals) {
    
    
    
    
    this.accruals = accruals;
    return this;
  }

  public EmployeePayStatementModel addAccrualsItem(EmployeePayStatementAccrualsModel accrualsItem) {
    if (this.accruals == null) {
      this.accruals = new ArrayList<>();
    }
    this.accruals.add(accrualsItem);
    return this;
  }

   /**
   * Get accruals
   * @return accruals
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmployeePayStatementAccrualsModel> getAccruals() {
    return accruals;
  }


  public void setAccruals(List<EmployeePayStatementAccrualsModel> accruals) {
    
    
    
    this.accruals = accruals;
  }


  public EmployeePayStatementModel addressline1(String addressline1) {
    
    
    
    
    this.addressline1 = addressline1;
    return this;
  }

   /**
   * Get addressline1
   * @return addressline1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressline1() {
    return addressline1;
  }


  public void setAddressline1(String addressline1) {
    
    
    
    this.addressline1 = addressline1;
  }


  public EmployeePayStatementModel addressline2(String addressline2) {
    
    
    
    
    this.addressline2 = addressline2;
    return this;
  }

   /**
   * Get addressline2
   * @return addressline2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getAddressline2() {
    return addressline2;
  }


  public void setAddressline2(String addressline2) {
    
    
    
    this.addressline2 = addressline2;
  }


  public EmployeePayStatementModel city(String city) {
    
    
    
    
    this.city = city;
    return this;
  }

   /**
   * Get city
   * @return city
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCity() {
    return city;
  }


  public void setCity(String city) {
    
    
    
    this.city = city;
  }


  public EmployeePayStatementModel companyaddresscity(String companyaddresscity) {
    
    
    
    
    this.companyaddresscity = companyaddresscity;
    return this;
  }

   /**
   * Get companyaddresscity
   * @return companyaddresscity
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyaddresscity() {
    return companyaddresscity;
  }


  public void setCompanyaddresscity(String companyaddresscity) {
    
    
    
    this.companyaddresscity = companyaddresscity;
  }


  public EmployeePayStatementModel companyaddresscountry(String companyaddresscountry) {
    
    
    
    
    this.companyaddresscountry = companyaddresscountry;
    return this;
  }

   /**
   * Get companyaddresscountry
   * @return companyaddresscountry
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyaddresscountry() {
    return companyaddresscountry;
  }


  public void setCompanyaddresscountry(String companyaddresscountry) {
    
    
    
    this.companyaddresscountry = companyaddresscountry;
  }


  public EmployeePayStatementModel companyaddresscounty(String companyaddresscounty) {
    
    
    
    
    this.companyaddresscounty = companyaddresscounty;
    return this;
  }

   /**
   * Get companyaddresscounty
   * @return companyaddresscounty
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyaddresscounty() {
    return companyaddresscounty;
  }


  public void setCompanyaddresscounty(String companyaddresscounty) {
    
    
    
    this.companyaddresscounty = companyaddresscounty;
  }


  public EmployeePayStatementModel companyaddressline1(String companyaddressline1) {
    
    
    
    
    this.companyaddressline1 = companyaddressline1;
    return this;
  }

   /**
   * Get companyaddressline1
   * @return companyaddressline1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyaddressline1() {
    return companyaddressline1;
  }


  public void setCompanyaddressline1(String companyaddressline1) {
    
    
    
    this.companyaddressline1 = companyaddressline1;
  }


  public EmployeePayStatementModel companyaddressline2(String companyaddressline2) {
    
    
    
    
    this.companyaddressline2 = companyaddressline2;
    return this;
  }

   /**
   * Get companyaddressline2
   * @return companyaddressline2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyaddressline2() {
    return companyaddressline2;
  }


  public void setCompanyaddressline2(String companyaddressline2) {
    
    
    
    this.companyaddressline2 = companyaddressline2;
  }


  public EmployeePayStatementModel companyaddresspostalcode(String companyaddresspostalcode) {
    
    
    
    
    this.companyaddresspostalcode = companyaddresspostalcode;
    return this;
  }

   /**
   * Get companyaddresspostalcode
   * @return companyaddresspostalcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyaddresspostalcode() {
    return companyaddresspostalcode;
  }


  public void setCompanyaddresspostalcode(String companyaddresspostalcode) {
    
    
    
    this.companyaddresspostalcode = companyaddresspostalcode;
  }


  public EmployeePayStatementModel companyaddressstateorprovince(String companyaddressstateorprovince) {
    
    
    
    
    this.companyaddressstateorprovince = companyaddressstateorprovince;
    return this;
  }

   /**
   * Get companyaddressstateorprovince
   * @return companyaddressstateorprovince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyaddressstateorprovince() {
    return companyaddressstateorprovince;
  }


  public void setCompanyaddressstateorprovince(String companyaddressstateorprovince) {
    
    
    
    this.companyaddressstateorprovince = companyaddressstateorprovince;
  }


  public EmployeePayStatementModel companyname(String companyname) {
    
    
    
    
    this.companyname = companyname;
    return this;
  }

   /**
   * Get companyname
   * @return companyname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyname() {
    return companyname;
  }


  public void setCompanyname(String companyname) {
    
    
    
    this.companyname = companyname;
  }


  public EmployeePayStatementModel companyphone(String companyphone) {
    
    
    
    
    this.companyphone = companyphone;
    return this;
  }

   /**
   * Get companyphone
   * @return companyphone
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyphone() {
    return companyphone;
  }


  public void setCompanyphone(String companyphone) {
    
    
    
    this.companyphone = companyphone;
  }


  public EmployeePayStatementModel companyphoneext(String companyphoneext) {
    
    
    
    
    this.companyphoneext = companyphoneext;
    return this;
  }

   /**
   * Get companyphoneext
   * @return companyphoneext
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyphoneext() {
    return companyphoneext;
  }


  public void setCompanyphoneext(String companyphoneext) {
    
    
    
    this.companyphoneext = companyphoneext;
  }


  public EmployeePayStatementModel country(String country) {
    
    
    
    
    this.country = country;
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCountry() {
    return country;
  }


  public void setCountry(String country) {
    
    
    
    this.country = country;
  }


  public EmployeePayStatementModel deductions(List<EmployeePayStatementDeductionsModel> deductions) {
    
    
    
    
    this.deductions = deductions;
    return this;
  }

  public EmployeePayStatementModel addDeductionsItem(EmployeePayStatementDeductionsModel deductionsItem) {
    if (this.deductions == null) {
      this.deductions = new ArrayList<>();
    }
    this.deductions.add(deductionsItem);
    return this;
  }

   /**
   * Get deductions
   * @return deductions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmployeePayStatementDeductionsModel> getDeductions() {
    return deductions;
  }


  public void setDeductions(List<EmployeePayStatementDeductionsModel> deductions) {
    
    
    
    this.deductions = deductions;
  }


  public EmployeePayStatementModel deductionscurrent(Float deductionscurrent) {
    
    
    
    
    this.deductionscurrent = deductionscurrent;
    return this;
  }

   /**
   * Get deductionscurrent
   * @return deductionscurrent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getDeductionscurrent() {
    return deductionscurrent;
  }


  public void setDeductionscurrent(Float deductionscurrent) {
    
    
    
    this.deductionscurrent = deductionscurrent;
  }


  public EmployeePayStatementModel deductionsytd(Float deductionsytd) {
    
    
    
    
    this.deductionsytd = deductionsytd;
    return this;
  }

   /**
   * Get deductionsytd
   * @return deductionsytd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getDeductionsytd() {
    return deductionsytd;
  }


  public void setDeductionsytd(Float deductionsytd) {
    
    
    
    this.deductionsytd = deductionsytd;
  }


  public EmployeePayStatementModel document(String document) {
    
    
    
    
    this.document = document;
    return this;
  }

   /**
   * Get document
   * @return document
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDocument() {
    return document;
  }


  public void setDocument(String document) {
    
    
    
    this.document = document;
  }


  public EmployeePayStatementModel earnings(List<EmployeePayStatementEarningsModel> earnings) {
    
    
    
    
    this.earnings = earnings;
    return this;
  }

  public EmployeePayStatementModel addEarningsItem(EmployeePayStatementEarningsModel earningsItem) {
    if (this.earnings == null) {
      this.earnings = new ArrayList<>();
    }
    this.earnings.add(earningsItem);
    return this;
  }

   /**
   * Get earnings
   * @return earnings
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmployeePayStatementEarningsModel> getEarnings() {
    return earnings;
  }


  public void setEarnings(List<EmployeePayStatementEarningsModel> earnings) {
    
    
    
    this.earnings = earnings;
  }


  public EmployeePayStatementModel employeeidentifier(EmployeePayStatementIdentifierModel employeeidentifier) {
    
    
    
    
    this.employeeidentifier = employeeidentifier;
    return this;
  }

   /**
   * Get employeeidentifier
   * @return employeeidentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public EmployeePayStatementIdentifierModel getEmployeeidentifier() {
    return employeeidentifier;
  }


  public void setEmployeeidentifier(EmployeePayStatementIdentifierModel employeeidentifier) {
    
    
    
    this.employeeidentifier = employeeidentifier;
  }


  public EmployeePayStatementModel employeenumber(String employeenumber) {
    
    
    
    
    this.employeenumber = employeenumber;
    return this;
  }

   /**
   * Get employeenumber
   * @return employeenumber
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeenumber() {
    return employeenumber;
  }


  public void setEmployeenumber(String employeenumber) {
    
    
    
    this.employeenumber = employeenumber;
  }


  public EmployeePayStatementModel federaladditionalamountWithheld(Float federaladditionalamountWithheld) {
    
    
    
    
    this.federaladditionalamountWithheld = federaladditionalamountWithheld;
    return this;
  }

   /**
   * Get federaladditionalamountWithheld
   * @return federaladditionalamountWithheld
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getFederaladditionalamountWithheld() {
    return federaladditionalamountWithheld;
  }


  public void setFederaladditionalamountWithheld(Float federaladditionalamountWithheld) {
    
    
    
    this.federaladditionalamountWithheld = federaladditionalamountWithheld;
  }


  public EmployeePayStatementModel federalallowancesclaimed(Integer federalallowancesclaimed) {
    
    
    
    
    this.federalallowancesclaimed = federalallowancesclaimed;
    return this;
  }

   /**
   * Get federalallowancesclaimed
   * @return federalallowancesclaimed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getFederalallowancesclaimed() {
    return federalallowancesclaimed;
  }


  public void setFederalallowancesclaimed(Integer federalallowancesclaimed) {
    
    
    
    this.federalallowancesclaimed = federalallowancesclaimed;
  }


  public EmployeePayStatementModel federalfilingstatus(String federalfilingstatus) {
    
    
    
    
    this.federalfilingstatus = federalfilingstatus;
    return this;
  }

   /**
   * Get federalfilingstatus
   * @return federalfilingstatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFederalfilingstatus() {
    return federalfilingstatus;
  }


  public void setFederalfilingstatus(String federalfilingstatus) {
    
    
    
    this.federalfilingstatus = federalfilingstatus;
  }


  public EmployeePayStatementModel federaltaxablewagescurrent(Float federaltaxablewagescurrent) {
    
    
    
    
    this.federaltaxablewagescurrent = federaltaxablewagescurrent;
    return this;
  }

   /**
   * Get federaltaxablewagescurrent
   * @return federaltaxablewagescurrent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getFederaltaxablewagescurrent() {
    return federaltaxablewagescurrent;
  }


  public void setFederaltaxablewagescurrent(Float federaltaxablewagescurrent) {
    
    
    
    this.federaltaxablewagescurrent = federaltaxablewagescurrent;
  }


  public EmployeePayStatementModel federaltaxablewagesytd(Float federaltaxablewagesytd) {
    
    
    
    
    this.federaltaxablewagesytd = federaltaxablewagesytd;
    return this;
  }

   /**
   * Get federaltaxablewagesytd
   * @return federaltaxablewagesytd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getFederaltaxablewagesytd() {
    return federaltaxablewagesytd;
  }


  public void setFederaltaxablewagesytd(Float federaltaxablewagesytd) {
    
    
    
    this.federaltaxablewagesytd = federaltaxablewagesytd;
  }


  public EmployeePayStatementModel fullname(String fullname) {
    
    
    
    
    this.fullname = fullname;
    return this;
  }

   /**
   * Get fullname
   * @return fullname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getFullname() {
    return fullname;
  }


  public void setFullname(String fullname) {
    
    
    
    this.fullname = fullname;
  }


  public EmployeePayStatementModel grosswagescurrent(Float grosswagescurrent) {
    
    
    
    
    this.grosswagescurrent = grosswagescurrent;
    return this;
  }

   /**
   * Get grosswagescurrent
   * @return grosswagescurrent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getGrosswagescurrent() {
    return grosswagescurrent;
  }


  public void setGrosswagescurrent(Float grosswagescurrent) {
    
    
    
    this.grosswagescurrent = grosswagescurrent;
  }


  public EmployeePayStatementModel grosswagesytd(Float grosswagesytd) {
    
    
    
    
    this.grosswagesytd = grosswagesytd;
    return this;
  }

   /**
   * Get grosswagesytd
   * @return grosswagesytd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getGrosswagesytd() {
    return grosswagesytd;
  }


  public void setGrosswagesytd(Float grosswagesytd) {
    
    
    
    this.grosswagesytd = grosswagesytd;
  }


  public EmployeePayStatementModel job(String job) {
    
    
    
    
    this.job = job;
    return this;
  }

   /**
   * Get job
   * @return job
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getJob() {
    return job;
  }


  public void setJob(String job) {
    
    
    
    this.job = job;
  }


  public EmployeePayStatementModel location(String location) {
    
    
    
    
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getLocation() {
    return location;
  }


  public void setLocation(String location) {
    
    
    
    this.location = location;
  }


  public EmployeePayStatementModel netpay(List<EmployeePayStatementNetPayModel> netpay) {
    
    
    
    
    this.netpay = netpay;
    return this;
  }

  public EmployeePayStatementModel addNetpayItem(EmployeePayStatementNetPayModel netpayItem) {
    if (this.netpay == null) {
      this.netpay = new ArrayList<>();
    }
    this.netpay.add(netpayItem);
    return this;
  }

   /**
   * Get netpay
   * @return netpay
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmployeePayStatementNetPayModel> getNetpay() {
    return netpay;
  }


  public void setNetpay(List<EmployeePayStatementNetPayModel> netpay) {
    
    
    
    this.netpay = netpay;
  }


  public EmployeePayStatementModel netpaycurrent(Float netpaycurrent) {
    
    
    
    
    this.netpaycurrent = netpaycurrent;
    return this;
  }

   /**
   * Get netpaycurrent
   * @return netpaycurrent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getNetpaycurrent() {
    return netpaycurrent;
  }


  public void setNetpaycurrent(Float netpaycurrent) {
    
    
    
    this.netpaycurrent = netpaycurrent;
  }


  public EmployeePayStatementModel netpayytd(Float netpayytd) {
    
    
    
    
    this.netpayytd = netpayytd;
    return this;
  }

   /**
   * Get netpayytd
   * @return netpayytd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getNetpayytd() {
    return netpayytd;
  }


  public void setNetpayytd(Float netpayytd) {
    
    
    
    this.netpayytd = netpayytd;
  }


  public EmployeePayStatementModel orglevel1(String orglevel1) {
    
    
    
    
    this.orglevel1 = orglevel1;
    return this;
  }

   /**
   * Get orglevel1
   * @return orglevel1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrglevel1() {
    return orglevel1;
  }


  public void setOrglevel1(String orglevel1) {
    
    
    
    this.orglevel1 = orglevel1;
  }


  public EmployeePayStatementModel orglevel2(String orglevel2) {
    
    
    
    
    this.orglevel2 = orglevel2;
    return this;
  }

   /**
   * Get orglevel2
   * @return orglevel2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrglevel2() {
    return orglevel2;
  }


  public void setOrglevel2(String orglevel2) {
    
    
    
    this.orglevel2 = orglevel2;
  }


  public EmployeePayStatementModel orglevel3(String orglevel3) {
    
    
    
    
    this.orglevel3 = orglevel3;
    return this;
  }

   /**
   * Get orglevel3
   * @return orglevel3
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrglevel3() {
    return orglevel3;
  }


  public void setOrglevel3(String orglevel3) {
    
    
    
    this.orglevel3 = orglevel3;
  }


  public EmployeePayStatementModel orglevel4(String orglevel4) {
    
    
    
    
    this.orglevel4 = orglevel4;
    return this;
  }

   /**
   * Get orglevel4
   * @return orglevel4
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOrglevel4() {
    return orglevel4;
  }


  public void setOrglevel4(String orglevel4) {
    
    
    
    this.orglevel4 = orglevel4;
  }


  public EmployeePayStatementModel paydate(OffsetDateTime paydate) {
    
    
    
    
    this.paydate = paydate;
    return this;
  }

   /**
   * Get paydate
   * @return paydate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPaydate() {
    return paydate;
  }


  public void setPaydate(OffsetDateTime paydate) {
    
    
    
    this.paydate = paydate;
  }


  public EmployeePayStatementModel payperiodfrequency(String payperiodfrequency) {
    
    
    
    
    this.payperiodfrequency = payperiodfrequency;
    return this;
  }

   /**
   * Get payperiodfrequency
   * @return payperiodfrequency
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayperiodfrequency() {
    return payperiodfrequency;
  }


  public void setPayperiodfrequency(String payperiodfrequency) {
    
    
    
    this.payperiodfrequency = payperiodfrequency;
  }


  public EmployeePayStatementModel paygroup(String paygroup) {
    
    
    
    
    this.paygroup = paygroup;
    return this;
  }

   /**
   * Get paygroup
   * @return paygroup
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPaygroup() {
    return paygroup;
  }


  public void setPaygroup(String paygroup) {
    
    
    
    this.paygroup = paygroup;
  }


  public EmployeePayStatementModel payidentifier(String payidentifier) {
    
    
    
    
    this.payidentifier = payidentifier;
    return this;
  }

   /**
   * Get payidentifier
   * @return payidentifier
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPayidentifier() {
    return payidentifier;
  }


  public void setPayidentifier(String payidentifier) {
    
    
    
    this.payidentifier = payidentifier;
  }


  public EmployeePayStatementModel payrate(Float payrate) {
    
    
    
    
    this.payrate = payrate;
    return this;
  }

   /**
   * Get payrate
   * @return payrate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getPayrate() {
    return payrate;
  }


  public void setPayrate(Float payrate) {
    
    
    
    this.payrate = payrate;
  }


  public EmployeePayStatementModel periodenddate(OffsetDateTime periodenddate) {
    
    
    
    
    this.periodenddate = periodenddate;
    return this;
  }

   /**
   * Get periodenddate
   * @return periodenddate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPeriodenddate() {
    return periodenddate;
  }


  public void setPeriodenddate(OffsetDateTime periodenddate) {
    
    
    
    this.periodenddate = periodenddate;
  }


  public EmployeePayStatementModel periodstartdate(OffsetDateTime periodstartdate) {
    
    
    
    
    this.periodstartdate = periodstartdate;
    return this;
  }

   /**
   * Get periodstartdate
   * @return periodstartdate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getPeriodstartdate() {
    return periodstartdate;
  }


  public void setPeriodstartdate(OffsetDateTime periodstartdate) {
    
    
    
    this.periodstartdate = periodstartdate;
  }


  public EmployeePayStatementModel postalcode(String postalcode) {
    
    
    
    
    this.postalcode = postalcode;
    return this;
  }

   /**
   * Get postalcode
   * @return postalcode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPostalcode() {
    return postalcode;
  }


  public void setPostalcode(String postalcode) {
    
    
    
    this.postalcode = postalcode;
  }


  public EmployeePayStatementModel residentstateallowancesclaimed(Integer residentstateallowancesclaimed) {
    
    
    
    
    this.residentstateallowancesclaimed = residentstateallowancesclaimed;
    return this;
  }

   /**
   * Get residentstateallowancesclaimed
   * @return residentstateallowancesclaimed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getResidentstateallowancesclaimed() {
    return residentstateallowancesclaimed;
  }


  public void setResidentstateallowancesclaimed(Integer residentstateallowancesclaimed) {
    
    
    
    this.residentstateallowancesclaimed = residentstateallowancesclaimed;
  }


  public EmployeePayStatementModel residentstatefilingstatus(String residentstatefilingstatus) {
    
    
    
    
    this.residentstatefilingstatus = residentstatefilingstatus;
    return this;
  }

   /**
   * Get residentstatefilingstatus
   * @return residentstatefilingstatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getResidentstatefilingstatus() {
    return residentstatefilingstatus;
  }


  public void setResidentstatefilingstatus(String residentstatefilingstatus) {
    
    
    
    this.residentstatefilingstatus = residentstatefilingstatus;
  }


  public EmployeePayStatementModel ssn(String ssn) {
    
    
    
    
    this.ssn = ssn;
    return this;
  }

   /**
   * Get ssn
   * @return ssn
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getSsn() {
    return ssn;
  }


  public void setSsn(String ssn) {
    
    
    
    this.ssn = ssn;
  }


  public EmployeePayStatementModel stateorprovince(String stateorprovince) {
    
    
    
    
    this.stateorprovince = stateorprovince;
    return this;
  }

   /**
   * Get stateorprovince
   * @return stateorprovince
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getStateorprovince() {
    return stateorprovince;
  }


  public void setStateorprovince(String stateorprovince) {
    
    
    
    this.stateorprovince = stateorprovince;
  }


  public EmployeePayStatementModel taxes(List<EmployeePayStatementTaxesModel> taxes) {
    
    
    
    
    this.taxes = taxes;
    return this;
  }

  public EmployeePayStatementModel addTaxesItem(EmployeePayStatementTaxesModel taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

   /**
   * Get taxes
   * @return taxes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public List<EmployeePayStatementTaxesModel> getTaxes() {
    return taxes;
  }


  public void setTaxes(List<EmployeePayStatementTaxesModel> taxes) {
    
    
    
    this.taxes = taxes;
  }


  public EmployeePayStatementModel taxescurrent(Float taxescurrent) {
    
    
    
    
    this.taxescurrent = taxescurrent;
    return this;
  }

   /**
   * Get taxescurrent
   * @return taxescurrent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getTaxescurrent() {
    return taxescurrent;
  }


  public void setTaxescurrent(Float taxescurrent) {
    
    
    
    this.taxescurrent = taxescurrent;
  }


  public EmployeePayStatementModel taxesytd(Float taxesytd) {
    
    
    
    
    this.taxesytd = taxesytd;
    return this;
  }

   /**
   * Get taxesytd
   * @return taxesytd
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Float getTaxesytd() {
    return taxesytd;
  }


  public void setTaxesytd(Float taxesytd) {
    
    
    
    this.taxesytd = taxesytd;
  }


  public EmployeePayStatementModel workstateallowancesclaimed(Integer workstateallowancesclaimed) {
    
    
    
    
    this.workstateallowancesclaimed = workstateallowancesclaimed;
    return this;
  }

   /**
   * Get workstateallowancesclaimed
   * @return workstateallowancesclaimed
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getWorkstateallowancesclaimed() {
    return workstateallowancesclaimed;
  }


  public void setWorkstateallowancesclaimed(Integer workstateallowancesclaimed) {
    
    
    
    this.workstateallowancesclaimed = workstateallowancesclaimed;
  }


  public EmployeePayStatementModel workstatefilingstatus(String workstatefilingstatus) {
    
    
    
    
    this.workstatefilingstatus = workstatefilingstatus;
    return this;
  }

   /**
   * Get workstatefilingstatus
   * @return workstatefilingstatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getWorkstatefilingstatus() {
    return workstatefilingstatus;
  }


  public void setWorkstatefilingstatus(String workstatefilingstatus) {
    
    
    
    this.workstatefilingstatus = workstatefilingstatus;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the EmployeePayStatementModel instance itself
   */
  public EmployeePayStatementModel putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmployeePayStatementModel employeePayStatementModel = (EmployeePayStatementModel) o;
    return Objects.equals(this.accruals, employeePayStatementModel.accruals) &&
        Objects.equals(this.addressline1, employeePayStatementModel.addressline1) &&
        Objects.equals(this.addressline2, employeePayStatementModel.addressline2) &&
        Objects.equals(this.city, employeePayStatementModel.city) &&
        Objects.equals(this.companyaddresscity, employeePayStatementModel.companyaddresscity) &&
        Objects.equals(this.companyaddresscountry, employeePayStatementModel.companyaddresscountry) &&
        Objects.equals(this.companyaddresscounty, employeePayStatementModel.companyaddresscounty) &&
        Objects.equals(this.companyaddressline1, employeePayStatementModel.companyaddressline1) &&
        Objects.equals(this.companyaddressline2, employeePayStatementModel.companyaddressline2) &&
        Objects.equals(this.companyaddresspostalcode, employeePayStatementModel.companyaddresspostalcode) &&
        Objects.equals(this.companyaddressstateorprovince, employeePayStatementModel.companyaddressstateorprovince) &&
        Objects.equals(this.companyname, employeePayStatementModel.companyname) &&
        Objects.equals(this.companyphone, employeePayStatementModel.companyphone) &&
        Objects.equals(this.companyphoneext, employeePayStatementModel.companyphoneext) &&
        Objects.equals(this.country, employeePayStatementModel.country) &&
        Objects.equals(this.deductions, employeePayStatementModel.deductions) &&
        Objects.equals(this.deductionscurrent, employeePayStatementModel.deductionscurrent) &&
        Objects.equals(this.deductionsytd, employeePayStatementModel.deductionsytd) &&
        Objects.equals(this.document, employeePayStatementModel.document) &&
        Objects.equals(this.earnings, employeePayStatementModel.earnings) &&
        Objects.equals(this.employeeidentifier, employeePayStatementModel.employeeidentifier) &&
        Objects.equals(this.employeenumber, employeePayStatementModel.employeenumber) &&
        Objects.equals(this.federaladditionalamountWithheld, employeePayStatementModel.federaladditionalamountWithheld) &&
        Objects.equals(this.federalallowancesclaimed, employeePayStatementModel.federalallowancesclaimed) &&
        Objects.equals(this.federalfilingstatus, employeePayStatementModel.federalfilingstatus) &&
        Objects.equals(this.federaltaxablewagescurrent, employeePayStatementModel.federaltaxablewagescurrent) &&
        Objects.equals(this.federaltaxablewagesytd, employeePayStatementModel.federaltaxablewagesytd) &&
        Objects.equals(this.fullname, employeePayStatementModel.fullname) &&
        Objects.equals(this.grosswagescurrent, employeePayStatementModel.grosswagescurrent) &&
        Objects.equals(this.grosswagesytd, employeePayStatementModel.grosswagesytd) &&
        Objects.equals(this.job, employeePayStatementModel.job) &&
        Objects.equals(this.location, employeePayStatementModel.location) &&
        Objects.equals(this.netpay, employeePayStatementModel.netpay) &&
        Objects.equals(this.netpaycurrent, employeePayStatementModel.netpaycurrent) &&
        Objects.equals(this.netpayytd, employeePayStatementModel.netpayytd) &&
        Objects.equals(this.orglevel1, employeePayStatementModel.orglevel1) &&
        Objects.equals(this.orglevel2, employeePayStatementModel.orglevel2) &&
        Objects.equals(this.orglevel3, employeePayStatementModel.orglevel3) &&
        Objects.equals(this.orglevel4, employeePayStatementModel.orglevel4) &&
        Objects.equals(this.paydate, employeePayStatementModel.paydate) &&
        Objects.equals(this.payperiodfrequency, employeePayStatementModel.payperiodfrequency) &&
        Objects.equals(this.paygroup, employeePayStatementModel.paygroup) &&
        Objects.equals(this.payidentifier, employeePayStatementModel.payidentifier) &&
        Objects.equals(this.payrate, employeePayStatementModel.payrate) &&
        Objects.equals(this.periodenddate, employeePayStatementModel.periodenddate) &&
        Objects.equals(this.periodstartdate, employeePayStatementModel.periodstartdate) &&
        Objects.equals(this.postalcode, employeePayStatementModel.postalcode) &&
        Objects.equals(this.residentstateallowancesclaimed, employeePayStatementModel.residentstateallowancesclaimed) &&
        Objects.equals(this.residentstatefilingstatus, employeePayStatementModel.residentstatefilingstatus) &&
        Objects.equals(this.ssn, employeePayStatementModel.ssn) &&
        Objects.equals(this.stateorprovince, employeePayStatementModel.stateorprovince) &&
        Objects.equals(this.taxes, employeePayStatementModel.taxes) &&
        Objects.equals(this.taxescurrent, employeePayStatementModel.taxescurrent) &&
        Objects.equals(this.taxesytd, employeePayStatementModel.taxesytd) &&
        Objects.equals(this.workstateallowancesclaimed, employeePayStatementModel.workstateallowancesclaimed) &&
        Objects.equals(this.workstatefilingstatus, employeePayStatementModel.workstatefilingstatus)&&
        Objects.equals(this.additionalProperties, employeePayStatementModel.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accruals, addressline1, addressline2, city, companyaddresscity, companyaddresscountry, companyaddresscounty, companyaddressline1, companyaddressline2, companyaddresspostalcode, companyaddressstateorprovince, companyname, companyphone, companyphoneext, country, deductions, deductionscurrent, deductionsytd, document, earnings, employeeidentifier, employeenumber, federaladditionalamountWithheld, federalallowancesclaimed, federalfilingstatus, federaltaxablewagescurrent, federaltaxablewagesytd, fullname, grosswagescurrent, grosswagesytd, job, location, netpay, netpaycurrent, netpayytd, orglevel1, orglevel2, orglevel3, orglevel4, paydate, payperiodfrequency, paygroup, payidentifier, payrate, periodenddate, periodstartdate, postalcode, residentstateallowancesclaimed, residentstatefilingstatus, ssn, stateorprovince, taxes, taxescurrent, taxesytd, workstateallowancesclaimed, workstatefilingstatus, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmployeePayStatementModel {\n");
    sb.append("    accruals: ").append(toIndentedString(accruals)).append("\n");
    sb.append("    addressline1: ").append(toIndentedString(addressline1)).append("\n");
    sb.append("    addressline2: ").append(toIndentedString(addressline2)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    companyaddresscity: ").append(toIndentedString(companyaddresscity)).append("\n");
    sb.append("    companyaddresscountry: ").append(toIndentedString(companyaddresscountry)).append("\n");
    sb.append("    companyaddresscounty: ").append(toIndentedString(companyaddresscounty)).append("\n");
    sb.append("    companyaddressline1: ").append(toIndentedString(companyaddressline1)).append("\n");
    sb.append("    companyaddressline2: ").append(toIndentedString(companyaddressline2)).append("\n");
    sb.append("    companyaddresspostalcode: ").append(toIndentedString(companyaddresspostalcode)).append("\n");
    sb.append("    companyaddressstateorprovince: ").append(toIndentedString(companyaddressstateorprovince)).append("\n");
    sb.append("    companyname: ").append(toIndentedString(companyname)).append("\n");
    sb.append("    companyphone: ").append(toIndentedString(companyphone)).append("\n");
    sb.append("    companyphoneext: ").append(toIndentedString(companyphoneext)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    deductions: ").append(toIndentedString(deductions)).append("\n");
    sb.append("    deductionscurrent: ").append(toIndentedString(deductionscurrent)).append("\n");
    sb.append("    deductionsytd: ").append(toIndentedString(deductionsytd)).append("\n");
    sb.append("    document: ").append(toIndentedString(document)).append("\n");
    sb.append("    earnings: ").append(toIndentedString(earnings)).append("\n");
    sb.append("    employeeidentifier: ").append(toIndentedString(employeeidentifier)).append("\n");
    sb.append("    employeenumber: ").append(toIndentedString(employeenumber)).append("\n");
    sb.append("    federaladditionalamountWithheld: ").append(toIndentedString(federaladditionalamountWithheld)).append("\n");
    sb.append("    federalallowancesclaimed: ").append(toIndentedString(federalallowancesclaimed)).append("\n");
    sb.append("    federalfilingstatus: ").append(toIndentedString(federalfilingstatus)).append("\n");
    sb.append("    federaltaxablewagescurrent: ").append(toIndentedString(federaltaxablewagescurrent)).append("\n");
    sb.append("    federaltaxablewagesytd: ").append(toIndentedString(federaltaxablewagesytd)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    grosswagescurrent: ").append(toIndentedString(grosswagescurrent)).append("\n");
    sb.append("    grosswagesytd: ").append(toIndentedString(grosswagesytd)).append("\n");
    sb.append("    job: ").append(toIndentedString(job)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    netpay: ").append(toIndentedString(netpay)).append("\n");
    sb.append("    netpaycurrent: ").append(toIndentedString(netpaycurrent)).append("\n");
    sb.append("    netpayytd: ").append(toIndentedString(netpayytd)).append("\n");
    sb.append("    orglevel1: ").append(toIndentedString(orglevel1)).append("\n");
    sb.append("    orglevel2: ").append(toIndentedString(orglevel2)).append("\n");
    sb.append("    orglevel3: ").append(toIndentedString(orglevel3)).append("\n");
    sb.append("    orglevel4: ").append(toIndentedString(orglevel4)).append("\n");
    sb.append("    paydate: ").append(toIndentedString(paydate)).append("\n");
    sb.append("    payperiodfrequency: ").append(toIndentedString(payperiodfrequency)).append("\n");
    sb.append("    paygroup: ").append(toIndentedString(paygroup)).append("\n");
    sb.append("    payidentifier: ").append(toIndentedString(payidentifier)).append("\n");
    sb.append("    payrate: ").append(toIndentedString(payrate)).append("\n");
    sb.append("    periodenddate: ").append(toIndentedString(periodenddate)).append("\n");
    sb.append("    periodstartdate: ").append(toIndentedString(periodstartdate)).append("\n");
    sb.append("    postalcode: ").append(toIndentedString(postalcode)).append("\n");
    sb.append("    residentstateallowancesclaimed: ").append(toIndentedString(residentstateallowancesclaimed)).append("\n");
    sb.append("    residentstatefilingstatus: ").append(toIndentedString(residentstatefilingstatus)).append("\n");
    sb.append("    ssn: ").append(toIndentedString(ssn)).append("\n");
    sb.append("    stateorprovince: ").append(toIndentedString(stateorprovince)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    taxescurrent: ").append(toIndentedString(taxescurrent)).append("\n");
    sb.append("    taxesytd: ").append(toIndentedString(taxesytd)).append("\n");
    sb.append("    workstateallowancesclaimed: ").append(toIndentedString(workstateallowancesclaimed)).append("\n");
    sb.append("    workstatefilingstatus: ").append(toIndentedString(workstatefilingstatus)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accruals");
    openapiFields.add("addressline1");
    openapiFields.add("addressline2");
    openapiFields.add("city");
    openapiFields.add("companyaddresscity");
    openapiFields.add("companyaddresscountry");
    openapiFields.add("companyaddresscounty");
    openapiFields.add("companyaddressline1");
    openapiFields.add("companyaddressline2");
    openapiFields.add("companyaddresspostalcode");
    openapiFields.add("companyaddressstateorprovince");
    openapiFields.add("companyname");
    openapiFields.add("companyphone");
    openapiFields.add("companyphoneext");
    openapiFields.add("country");
    openapiFields.add("deductions");
    openapiFields.add("deductionscurrent");
    openapiFields.add("deductionsytd");
    openapiFields.add("document");
    openapiFields.add("earnings");
    openapiFields.add("employeeidentifier");
    openapiFields.add("employeenumber");
    openapiFields.add("federaladditionalamountWithheld");
    openapiFields.add("federalallowancesclaimed");
    openapiFields.add("federalfilingstatus");
    openapiFields.add("federaltaxablewagescurrent");
    openapiFields.add("federaltaxablewagesytd");
    openapiFields.add("fullname");
    openapiFields.add("grosswagescurrent");
    openapiFields.add("grosswagesytd");
    openapiFields.add("job");
    openapiFields.add("location");
    openapiFields.add("netpay");
    openapiFields.add("netpaycurrent");
    openapiFields.add("netpayytd");
    openapiFields.add("orglevel1");
    openapiFields.add("orglevel2");
    openapiFields.add("orglevel3");
    openapiFields.add("orglevel4");
    openapiFields.add("paydate");
    openapiFields.add("payperiodfrequency");
    openapiFields.add("paygroup");
    openapiFields.add("payidentifier");
    openapiFields.add("payrate");
    openapiFields.add("periodenddate");
    openapiFields.add("periodstartdate");
    openapiFields.add("postalcode");
    openapiFields.add("residentstateallowancesclaimed");
    openapiFields.add("residentstatefilingstatus");
    openapiFields.add("ssn");
    openapiFields.add("stateorprovince");
    openapiFields.add("taxes");
    openapiFields.add("taxescurrent");
    openapiFields.add("taxesytd");
    openapiFields.add("workstateallowancesclaimed");
    openapiFields.add("workstatefilingstatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to EmployeePayStatementModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!EmployeePayStatementModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EmployeePayStatementModel is not found in the empty JSON string", EmployeePayStatementModel.openapiRequiredFields.toString()));
        }
      }
      if (jsonObj.get("accruals") != null && !jsonObj.get("accruals").isJsonNull()) {
        JsonArray jsonArrayaccruals = jsonObj.getAsJsonArray("accruals");
        if (jsonArrayaccruals != null) {
          // ensure the json data is an array
          if (!jsonObj.get("accruals").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `accruals` to be an array in the JSON string but got `%s`", jsonObj.get("accruals").toString()));
          }

          // validate the optional field `accruals` (array)
          for (int i = 0; i < jsonArrayaccruals.size(); i++) {
            EmployeePayStatementAccrualsModel.validateJsonObject(jsonArrayaccruals.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("addressline1") != null && !jsonObj.get("addressline1").isJsonNull()) && !jsonObj.get("addressline1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressline1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressline1").toString()));
      }
      if ((jsonObj.get("addressline2") != null && !jsonObj.get("addressline2").isJsonNull()) && !jsonObj.get("addressline2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `addressline2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("addressline2").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("companyaddresscity") != null && !jsonObj.get("companyaddresscity").isJsonNull()) && !jsonObj.get("companyaddresscity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyaddresscity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyaddresscity").toString()));
      }
      if ((jsonObj.get("companyaddresscountry") != null && !jsonObj.get("companyaddresscountry").isJsonNull()) && !jsonObj.get("companyaddresscountry").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyaddresscountry` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyaddresscountry").toString()));
      }
      if ((jsonObj.get("companyaddresscounty") != null && !jsonObj.get("companyaddresscounty").isJsonNull()) && !jsonObj.get("companyaddresscounty").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyaddresscounty` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyaddresscounty").toString()));
      }
      if ((jsonObj.get("companyaddressline1") != null && !jsonObj.get("companyaddressline1").isJsonNull()) && !jsonObj.get("companyaddressline1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyaddressline1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyaddressline1").toString()));
      }
      if ((jsonObj.get("companyaddressline2") != null && !jsonObj.get("companyaddressline2").isJsonNull()) && !jsonObj.get("companyaddressline2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyaddressline2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyaddressline2").toString()));
      }
      if ((jsonObj.get("companyaddresspostalcode") != null && !jsonObj.get("companyaddresspostalcode").isJsonNull()) && !jsonObj.get("companyaddresspostalcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyaddresspostalcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyaddresspostalcode").toString()));
      }
      if ((jsonObj.get("companyaddressstateorprovince") != null && !jsonObj.get("companyaddressstateorprovince").isJsonNull()) && !jsonObj.get("companyaddressstateorprovince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyaddressstateorprovince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyaddressstateorprovince").toString()));
      }
      if ((jsonObj.get("companyname") != null && !jsonObj.get("companyname").isJsonNull()) && !jsonObj.get("companyname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyname").toString()));
      }
      if ((jsonObj.get("companyphone") != null && !jsonObj.get("companyphone").isJsonNull()) && !jsonObj.get("companyphone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyphone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyphone").toString()));
      }
      if ((jsonObj.get("companyphoneext") != null && !jsonObj.get("companyphoneext").isJsonNull()) && !jsonObj.get("companyphoneext").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyphoneext` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyphoneext").toString()));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if (jsonObj.get("deductions") != null && !jsonObj.get("deductions").isJsonNull()) {
        JsonArray jsonArraydeductions = jsonObj.getAsJsonArray("deductions");
        if (jsonArraydeductions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("deductions").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `deductions` to be an array in the JSON string but got `%s`", jsonObj.get("deductions").toString()));
          }

          // validate the optional field `deductions` (array)
          for (int i = 0; i < jsonArraydeductions.size(); i++) {
            EmployeePayStatementDeductionsModel.validateJsonObject(jsonArraydeductions.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("document") != null && !jsonObj.get("document").isJsonNull()) && !jsonObj.get("document").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `document` to be a primitive type in the JSON string but got `%s`", jsonObj.get("document").toString()));
      }
      if (jsonObj.get("earnings") != null && !jsonObj.get("earnings").isJsonNull()) {
        JsonArray jsonArrayearnings = jsonObj.getAsJsonArray("earnings");
        if (jsonArrayearnings != null) {
          // ensure the json data is an array
          if (!jsonObj.get("earnings").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `earnings` to be an array in the JSON string but got `%s`", jsonObj.get("earnings").toString()));
          }

          // validate the optional field `earnings` (array)
          for (int i = 0; i < jsonArrayearnings.size(); i++) {
            EmployeePayStatementEarningsModel.validateJsonObject(jsonArrayearnings.get(i).getAsJsonObject());
          };
        }
      }
      // validate the optional field `employeeidentifier`
      if (jsonObj.get("employeeidentifier") != null && !jsonObj.get("employeeidentifier").isJsonNull()) {
        EmployeePayStatementIdentifierModel.validateJsonObject(jsonObj.getAsJsonObject("employeeidentifier"));
      }
      if ((jsonObj.get("employeenumber") != null && !jsonObj.get("employeenumber").isJsonNull()) && !jsonObj.get("employeenumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeenumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeenumber").toString()));
      }
      if ((jsonObj.get("federalfilingstatus") != null && !jsonObj.get("federalfilingstatus").isJsonNull()) && !jsonObj.get("federalfilingstatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `federalfilingstatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("federalfilingstatus").toString()));
      }
      if ((jsonObj.get("fullname") != null && !jsonObj.get("fullname").isJsonNull()) && !jsonObj.get("fullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullname").toString()));
      }
      if ((jsonObj.get("job") != null && !jsonObj.get("job").isJsonNull()) && !jsonObj.get("job").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if (jsonObj.get("netpay") != null && !jsonObj.get("netpay").isJsonNull()) {
        JsonArray jsonArraynetpay = jsonObj.getAsJsonArray("netpay");
        if (jsonArraynetpay != null) {
          // ensure the json data is an array
          if (!jsonObj.get("netpay").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `netpay` to be an array in the JSON string but got `%s`", jsonObj.get("netpay").toString()));
          }

          // validate the optional field `netpay` (array)
          for (int i = 0; i < jsonArraynetpay.size(); i++) {
            EmployeePayStatementNetPayModel.validateJsonObject(jsonArraynetpay.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("orglevel1") != null && !jsonObj.get("orglevel1").isJsonNull()) && !jsonObj.get("orglevel1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orglevel1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orglevel1").toString()));
      }
      if ((jsonObj.get("orglevel2") != null && !jsonObj.get("orglevel2").isJsonNull()) && !jsonObj.get("orglevel2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orglevel2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orglevel2").toString()));
      }
      if ((jsonObj.get("orglevel3") != null && !jsonObj.get("orglevel3").isJsonNull()) && !jsonObj.get("orglevel3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orglevel3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orglevel3").toString()));
      }
      if ((jsonObj.get("orglevel4") != null && !jsonObj.get("orglevel4").isJsonNull()) && !jsonObj.get("orglevel4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orglevel4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orglevel4").toString()));
      }
      if ((jsonObj.get("payperiodfrequency") != null && !jsonObj.get("payperiodfrequency").isJsonNull()) && !jsonObj.get("payperiodfrequency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payperiodfrequency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payperiodfrequency").toString()));
      }
      if ((jsonObj.get("paygroup") != null && !jsonObj.get("paygroup").isJsonNull()) && !jsonObj.get("paygroup").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paygroup` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paygroup").toString()));
      }
      if ((jsonObj.get("payidentifier") != null && !jsonObj.get("payidentifier").isJsonNull()) && !jsonObj.get("payidentifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payidentifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payidentifier").toString()));
      }
      if ((jsonObj.get("postalcode") != null && !jsonObj.get("postalcode").isJsonNull()) && !jsonObj.get("postalcode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `postalcode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("postalcode").toString()));
      }
      if ((jsonObj.get("residentstatefilingstatus") != null && !jsonObj.get("residentstatefilingstatus").isJsonNull()) && !jsonObj.get("residentstatefilingstatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `residentstatefilingstatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("residentstatefilingstatus").toString()));
      }
      if ((jsonObj.get("ssn") != null && !jsonObj.get("ssn").isJsonNull()) && !jsonObj.get("ssn").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ssn` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ssn").toString()));
      }
      if ((jsonObj.get("stateorprovince") != null && !jsonObj.get("stateorprovince").isJsonNull()) && !jsonObj.get("stateorprovince").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stateorprovince` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stateorprovince").toString()));
      }
      if (jsonObj.get("taxes") != null && !jsonObj.get("taxes").isJsonNull()) {
        JsonArray jsonArraytaxes = jsonObj.getAsJsonArray("taxes");
        if (jsonArraytaxes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taxes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taxes` to be an array in the JSON string but got `%s`", jsonObj.get("taxes").toString()));
          }

          // validate the optional field `taxes` (array)
          for (int i = 0; i < jsonArraytaxes.size(); i++) {
            EmployeePayStatementTaxesModel.validateJsonObject(jsonArraytaxes.get(i).getAsJsonObject());
          };
        }
      }
      if ((jsonObj.get("workstatefilingstatus") != null && !jsonObj.get("workstatefilingstatus").isJsonNull()) && !jsonObj.get("workstatefilingstatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `workstatefilingstatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("workstatefilingstatus").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EmployeePayStatementModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EmployeePayStatementModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EmployeePayStatementModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EmployeePayStatementModel.class));

       return (TypeAdapter<T>) new TypeAdapter<EmployeePayStatementModel>() {
           @Override
           public void write(JsonWriter out, EmployeePayStatementModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public EmployeePayStatementModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             EmployeePayStatementModel instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of EmployeePayStatementModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of EmployeePayStatementModel
  * @throws IOException if the JSON string is invalid with respect to EmployeePayStatementModel
  */
  public static EmployeePayStatementModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EmployeePayStatementModel.class);
  }

 /**
  * Convert an instance of EmployeePayStatementModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

