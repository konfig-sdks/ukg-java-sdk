/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * OpenEnrollmentEmployeeDeductions
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class OpenEnrollmentEmployeeDeductions {
  public static final String SERIALIZED_NAME_BENEFIT_AMOUNT = "benefitAmount";
  @SerializedName(SERIALIZED_NAME_BENEFIT_AMOUNT)
  private Double benefitAmount;

  public static final String SERIALIZED_NAME_BENEFIT_AMOUNT_RATE_OR_PERCENT = "benefitAmountRateOrPercent";
  @SerializedName(SERIALIZED_NAME_BENEFIT_AMOUNT_RATE_OR_PERCENT)
  private Double benefitAmountRateOrPercent;

  public static final String SERIALIZED_NAME_BENEFIT_OPTION = "benefitOption";
  @SerializedName(SERIALIZED_NAME_BENEFIT_OPTION)
  private String benefitOption;

  public static final String SERIALIZED_NAME_ADD_COVERAGE = "addCoverage";
  @SerializedName(SERIALIZED_NAME_ADD_COVERAGE)
  private Boolean addCoverage;

  public static final String SERIALIZED_NAME_CHANGE_REASON = "changeReason";
  @SerializedName(SERIALIZED_NAME_CHANGE_REASON)
  private String changeReason;

  public static final String SERIALIZED_NAME_BENEFIT_START_DATE = "benefitStartDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_START_DATE)
  private OffsetDateTime benefitStartDate;

  public static final String SERIALIZED_NAME_BENEFIT_STATUS = "benefitStatus";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STATUS)
  private String benefitStatus;

  public static final String SERIALIZED_NAME_BENEFIT_STATUS_DATE = "benefitStatusDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STATUS_DATE)
  private OffsetDateTime benefitStatusDate;

  public static final String SERIALIZED_NAME_BENEFIT_STOP_DATE = "benefitStopDate";
  @SerializedName(SERIALIZED_NAME_BENEFIT_STOP_DATE)
  private OffsetDateTime benefitStopDate;

  public static final String SERIALIZED_NAME_COMPANY_ID = "companyId";
  @SerializedName(SERIALIZED_NAME_COMPANY_ID)
  private String companyId;

  public static final String SERIALIZED_NAME_CUSTOM_AMOUNT1 = "customAmount1";
  @SerializedName(SERIALIZED_NAME_CUSTOM_AMOUNT1)
  private Double customAmount1;

  public static final String SERIALIZED_NAME_CUSTOM_AMOUNT2 = "customAmount2";
  @SerializedName(SERIALIZED_NAME_CUSTOM_AMOUNT2)
  private Double customAmount2;

  public static final String SERIALIZED_NAME_CUSTOM_DATE = "customDate";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DATE)
  private OffsetDateTime customDate;

  public static final String SERIALIZED_NAME_CHANGE_DATETIME = "changeDatetime";
  @SerializedName(SERIALIZED_NAME_CHANGE_DATETIME)
  private OffsetDateTime changeDatetime;

  public static final String SERIALIZED_NAME_CREATE_DATETIME = "createDatetime";
  @SerializedName(SERIALIZED_NAME_CREATE_DATETIME)
  private OffsetDateTime createDatetime;

  public static final String SERIALIZED_NAME_DEDUCTION_CODE = "deductionCode";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_CODE)
  private String deductionCode;

  public static final String SERIALIZED_NAME_DEDUCTION_TYPE = "deductionType";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_TYPE)
  private String deductionType;

  public static final String SERIALIZED_NAME_EMPLOYEE_AMOUNT = "employeeAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_AMOUNT)
  private Double employeeAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_CALCULATION_RATE_OR_PERCENT = "employeeCalculationRateOrPercent";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_CALCULATION_RATE_OR_PERCENT)
  private Double employeeCalculationRateOrPercent;

  public static final String SERIALIZED_NAME_EMPLOYEE_ELIGIBILITY_DATE = "employeeEligibilityDate";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ELIGIBILITY_DATE)
  private OffsetDateTime employeeEligibilityDate;

  public static final String SERIALIZED_NAME_EMPLOYEE_GOAL_AMT = "employeeGoalAmt";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_GOAL_AMT)
  private Double employeeGoalAmt;

  public static final String SERIALIZED_NAME_EMPLOYEE_GOAL_TO_DATE_AMOUNT = "employeeGoalToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_GOAL_TO_DATE_AMOUNT)
  private Double employeeGoalToDateAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_ID = "employeeId";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ID)
  private String employeeId;

  public static final String SERIALIZED_NAME_EMPLOYEE_MEMBER_OR_CASE_NO = "employeeMemberOrCaseNo";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_MEMBER_OR_CASE_NO)
  private String employeeMemberOrCaseNo;

  public static final String SERIALIZED_NAME_EMPLOYEE_YEAR_TO_DATE_AMOUNT = "employeeYearToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_YEAR_TO_DATE_AMOUNT)
  private Double employeeYearToDateAmount;

  public static final String SERIALIZED_NAME_EVIDENCEOF_INSURABILITY_DATE = "evidenceofInsurabilityDate";
  @SerializedName(SERIALIZED_NAME_EVIDENCEOF_INSURABILITY_DATE)
  private OffsetDateTime evidenceofInsurabilityDate;

  public static final String SERIALIZED_NAME_NEED_EVIDENCE_OF_INSURABILITY = "needEvidenceOfInsurability";
  @SerializedName(SERIALIZED_NAME_NEED_EVIDENCE_OF_INSURABILITY)
  private Boolean needEvidenceOfInsurability;

  public static final String SERIALIZED_NAME_EVIDENCEOF_INSURABILITY_DESIRED_AMOUNT = "evidenceofInsurabilityDesiredAmount";
  @SerializedName(SERIALIZED_NAME_EVIDENCEOF_INSURABILITY_DESIRED_AMOUNT)
  private Double evidenceofInsurabilityDesiredAmount;

  public static final String SERIALIZED_NAME_EMPLOYEE_ELIGIBILITY_DESIRED_CALCULATION_RATE_OR_PERCENT = "employeeEligibilityDesiredCalculationRateOrPercent";
  @SerializedName(SERIALIZED_NAME_EMPLOYEE_ELIGIBILITY_DESIRED_CALCULATION_RATE_OR_PERCENT)
  private Integer employeeEligibilityDesiredCalculationRateOrPercent;

  public static final String SERIALIZED_NAME_EMPLOYER_AMOUNT = "employerAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_AMOUNT)
  private Double employerAmount;

  public static final String SERIALIZED_NAME_EMPLOYER_CALCULATION_RATE_OR_PERCENT = "employerCalculationRateOrPercent";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_CALCULATION_RATE_OR_PERCENT)
  private Double employerCalculationRateOrPercent;

  public static final String SERIALIZED_NAME_EMPLOYER_CALCULATION_RULE = "employerCalculationRule";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_CALCULATION_RULE)
  private String employerCalculationRule;

  public static final String SERIALIZED_NAME_EMPLOYER_YEAR_TO_DATE_AMOUNT = "employerYearToDateAmount";
  @SerializedName(SERIALIZED_NAME_EMPLOYER_YEAR_TO_DATE_AMOUNT)
  private Double employerYearToDateAmount;

  public static final String SERIALIZED_NAME_IS_DEDUCTION_OFFSET = "isDeductionOffset";
  @SerializedName(SERIALIZED_NAME_IS_DEDUCTION_OFFSET)
  private Boolean isDeductionOffset;

  public static final String SERIALIZED_NAME_MEDICAL_INDICATOR = "medicalIndicator";
  @SerializedName(SERIALIZED_NAME_MEDICAL_INDICATOR)
  private Boolean medicalIndicator;

  public static final String SERIALIZED_NAME_DEDUCTION_NOTES = "deductionNotes";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_NOTES)
  private String deductionNotes;

  public static final String SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN = "primaryCarePhysician";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN)
  private String primaryCarePhysician;

  public static final String SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN_ID = "primaryCarePhysicianId";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CARE_PHYSICIAN_ID)
  private String primaryCarePhysicianId;

  public static final String SERIALIZED_NAME_DEDUCTION_START_DATE = "deductionStartDate";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_START_DATE)
  private OffsetDateTime deductionStartDate;

  public static final String SERIALIZED_NAME_DEDUCTION_STOP_DATE = "deductionStopDate";
  @SerializedName(SERIALIZED_NAME_DEDUCTION_STOP_DATE)
  private OffsetDateTime deductionStopDate;

  public static final String SERIALIZED_NAME_BENEFIT_WAIVE_REASON = "benefitWaiveReason";
  @SerializedName(SERIALIZED_NAME_BENEFIT_WAIVE_REASON)
  private String benefitWaiveReason;

  public static final String SERIALIZED_NAME_IS_BENEFIT_WAIVED = "isBenefitWaived";
  @SerializedName(SERIALIZED_NAME_IS_BENEFIT_WAIVED)
  private Boolean isBenefitWaived;

  public static final String SERIALIZED_NAME_OE_DROP = "oeDrop";
  @SerializedName(SERIALIZED_NAME_OE_DROP)
  private Boolean oeDrop;

  public OpenEnrollmentEmployeeDeductions() {
  }

  public OpenEnrollmentEmployeeDeductions benefitAmount(Double benefitAmount) {
    
    
    
    
    this.benefitAmount = benefitAmount;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions benefitAmount(Integer benefitAmount) {
    
    
    
    
    this.benefitAmount = benefitAmount.doubleValue();
    return this;
  }

   /**
   * Get benefitAmount
   * @return benefitAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBenefitAmount() {
    return benefitAmount;
  }


  public void setBenefitAmount(Double benefitAmount) {
    
    
    
    this.benefitAmount = benefitAmount;
  }


  public OpenEnrollmentEmployeeDeductions benefitAmountRateOrPercent(Double benefitAmountRateOrPercent) {
    
    
    
    
    this.benefitAmountRateOrPercent = benefitAmountRateOrPercent;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions benefitAmountRateOrPercent(Integer benefitAmountRateOrPercent) {
    
    
    
    
    this.benefitAmountRateOrPercent = benefitAmountRateOrPercent.doubleValue();
    return this;
  }

   /**
   * Get benefitAmountRateOrPercent
   * @return benefitAmountRateOrPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getBenefitAmountRateOrPercent() {
    return benefitAmountRateOrPercent;
  }


  public void setBenefitAmountRateOrPercent(Double benefitAmountRateOrPercent) {
    
    
    
    this.benefitAmountRateOrPercent = benefitAmountRateOrPercent;
  }


  public OpenEnrollmentEmployeeDeductions benefitOption(String benefitOption) {
    
    
    
    
    this.benefitOption = benefitOption;
    return this;
  }

   /**
   * Get benefitOption
   * @return benefitOption
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitOption() {
    return benefitOption;
  }


  public void setBenefitOption(String benefitOption) {
    
    
    
    this.benefitOption = benefitOption;
  }


  public OpenEnrollmentEmployeeDeductions addCoverage(Boolean addCoverage) {
    
    
    
    
    this.addCoverage = addCoverage;
    return this;
  }

   /**
   * Get addCoverage
   * @return addCoverage
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getAddCoverage() {
    return addCoverage;
  }


  public void setAddCoverage(Boolean addCoverage) {
    
    
    
    this.addCoverage = addCoverage;
  }


  public OpenEnrollmentEmployeeDeductions changeReason(String changeReason) {
    
    
    
    
    this.changeReason = changeReason;
    return this;
  }

   /**
   * Get changeReason
   * @return changeReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getChangeReason() {
    return changeReason;
  }


  public void setChangeReason(String changeReason) {
    
    
    
    this.changeReason = changeReason;
  }


  public OpenEnrollmentEmployeeDeductions benefitStartDate(OffsetDateTime benefitStartDate) {
    
    
    
    
    this.benefitStartDate = benefitStartDate;
    return this;
  }

   /**
   * Get benefitStartDate
   * @return benefitStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStartDate() {
    return benefitStartDate;
  }


  public void setBenefitStartDate(OffsetDateTime benefitStartDate) {
    
    
    
    this.benefitStartDate = benefitStartDate;
  }


  public OpenEnrollmentEmployeeDeductions benefitStatus(String benefitStatus) {
    
    
    
    
    this.benefitStatus = benefitStatus;
    return this;
  }

   /**
   * Get benefitStatus
   * @return benefitStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitStatus() {
    return benefitStatus;
  }


  public void setBenefitStatus(String benefitStatus) {
    
    
    
    this.benefitStatus = benefitStatus;
  }


  public OpenEnrollmentEmployeeDeductions benefitStatusDate(OffsetDateTime benefitStatusDate) {
    
    
    
    
    this.benefitStatusDate = benefitStatusDate;
    return this;
  }

   /**
   * Get benefitStatusDate
   * @return benefitStatusDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStatusDate() {
    return benefitStatusDate;
  }


  public void setBenefitStatusDate(OffsetDateTime benefitStatusDate) {
    
    
    
    this.benefitStatusDate = benefitStatusDate;
  }


  public OpenEnrollmentEmployeeDeductions benefitStopDate(OffsetDateTime benefitStopDate) {
    
    
    
    
    this.benefitStopDate = benefitStopDate;
    return this;
  }

   /**
   * Get benefitStopDate
   * @return benefitStopDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getBenefitStopDate() {
    return benefitStopDate;
  }


  public void setBenefitStopDate(OffsetDateTime benefitStopDate) {
    
    
    
    this.benefitStopDate = benefitStopDate;
  }


  public OpenEnrollmentEmployeeDeductions companyId(String companyId) {
    
    
    
    
    this.companyId = companyId;
    return this;
  }

   /**
   * Get companyId
   * @return companyId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getCompanyId() {
    return companyId;
  }


  public void setCompanyId(String companyId) {
    
    
    
    this.companyId = companyId;
  }


  public OpenEnrollmentEmployeeDeductions customAmount1(Double customAmount1) {
    
    
    
    
    this.customAmount1 = customAmount1;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions customAmount1(Integer customAmount1) {
    
    
    
    
    this.customAmount1 = customAmount1.doubleValue();
    return this;
  }

   /**
   * Get customAmount1
   * @return customAmount1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCustomAmount1() {
    return customAmount1;
  }


  public void setCustomAmount1(Double customAmount1) {
    
    
    
    this.customAmount1 = customAmount1;
  }


  public OpenEnrollmentEmployeeDeductions customAmount2(Double customAmount2) {
    
    
    
    
    this.customAmount2 = customAmount2;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions customAmount2(Integer customAmount2) {
    
    
    
    
    this.customAmount2 = customAmount2.doubleValue();
    return this;
  }

   /**
   * Get customAmount2
   * @return customAmount2
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getCustomAmount2() {
    return customAmount2;
  }


  public void setCustomAmount2(Double customAmount2) {
    
    
    
    this.customAmount2 = customAmount2;
  }


  public OpenEnrollmentEmployeeDeductions customDate(OffsetDateTime customDate) {
    
    
    
    
    this.customDate = customDate;
    return this;
  }

   /**
   * Get customDate
   * @return customDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCustomDate() {
    return customDate;
  }


  public void setCustomDate(OffsetDateTime customDate) {
    
    
    
    this.customDate = customDate;
  }


  public OpenEnrollmentEmployeeDeductions changeDatetime(OffsetDateTime changeDatetime) {
    
    
    
    
    this.changeDatetime = changeDatetime;
    return this;
  }

   /**
   * Get changeDatetime
   * @return changeDatetime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getChangeDatetime() {
    return changeDatetime;
  }


  public void setChangeDatetime(OffsetDateTime changeDatetime) {
    
    
    
    this.changeDatetime = changeDatetime;
  }


  public OpenEnrollmentEmployeeDeductions createDatetime(OffsetDateTime createDatetime) {
    
    
    
    
    this.createDatetime = createDatetime;
    return this;
  }

   /**
   * Get createDatetime
   * @return createDatetime
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getCreateDatetime() {
    return createDatetime;
  }


  public void setCreateDatetime(OffsetDateTime createDatetime) {
    
    
    
    this.createDatetime = createDatetime;
  }


  public OpenEnrollmentEmployeeDeductions deductionCode(String deductionCode) {
    
    
    
    
    this.deductionCode = deductionCode;
    return this;
  }

   /**
   * Get deductionCode
   * @return deductionCode
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionCode() {
    return deductionCode;
  }


  public void setDeductionCode(String deductionCode) {
    
    
    
    this.deductionCode = deductionCode;
  }


  public OpenEnrollmentEmployeeDeductions deductionType(String deductionType) {
    
    
    
    
    this.deductionType = deductionType;
    return this;
  }

   /**
   * Get deductionType
   * @return deductionType
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionType() {
    return deductionType;
  }


  public void setDeductionType(String deductionType) {
    
    
    
    this.deductionType = deductionType;
  }


  public OpenEnrollmentEmployeeDeductions employeeAmount(Double employeeAmount) {
    
    
    
    
    this.employeeAmount = employeeAmount;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions employeeAmount(Integer employeeAmount) {
    
    
    
    
    this.employeeAmount = employeeAmount.doubleValue();
    return this;
  }

   /**
   * Get employeeAmount
   * @return employeeAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeAmount() {
    return employeeAmount;
  }


  public void setEmployeeAmount(Double employeeAmount) {
    
    
    
    this.employeeAmount = employeeAmount;
  }


  public OpenEnrollmentEmployeeDeductions employeeCalculationRateOrPercent(Double employeeCalculationRateOrPercent) {
    
    
    
    
    this.employeeCalculationRateOrPercent = employeeCalculationRateOrPercent;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions employeeCalculationRateOrPercent(Integer employeeCalculationRateOrPercent) {
    
    
    
    
    this.employeeCalculationRateOrPercent = employeeCalculationRateOrPercent.doubleValue();
    return this;
  }

   /**
   * Get employeeCalculationRateOrPercent
   * @return employeeCalculationRateOrPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeCalculationRateOrPercent() {
    return employeeCalculationRateOrPercent;
  }


  public void setEmployeeCalculationRateOrPercent(Double employeeCalculationRateOrPercent) {
    
    
    
    this.employeeCalculationRateOrPercent = employeeCalculationRateOrPercent;
  }


  public OpenEnrollmentEmployeeDeductions employeeEligibilityDate(OffsetDateTime employeeEligibilityDate) {
    
    
    
    
    this.employeeEligibilityDate = employeeEligibilityDate;
    return this;
  }

   /**
   * Get employeeEligibilityDate
   * @return employeeEligibilityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEmployeeEligibilityDate() {
    return employeeEligibilityDate;
  }


  public void setEmployeeEligibilityDate(OffsetDateTime employeeEligibilityDate) {
    
    
    
    this.employeeEligibilityDate = employeeEligibilityDate;
  }


  public OpenEnrollmentEmployeeDeductions employeeGoalAmt(Double employeeGoalAmt) {
    
    
    
    
    this.employeeGoalAmt = employeeGoalAmt;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions employeeGoalAmt(Integer employeeGoalAmt) {
    
    
    
    
    this.employeeGoalAmt = employeeGoalAmt.doubleValue();
    return this;
  }

   /**
   * Get employeeGoalAmt
   * @return employeeGoalAmt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeGoalAmt() {
    return employeeGoalAmt;
  }


  public void setEmployeeGoalAmt(Double employeeGoalAmt) {
    
    
    
    this.employeeGoalAmt = employeeGoalAmt;
  }


  public OpenEnrollmentEmployeeDeductions employeeGoalToDateAmount(Double employeeGoalToDateAmount) {
    
    
    
    
    this.employeeGoalToDateAmount = employeeGoalToDateAmount;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions employeeGoalToDateAmount(Integer employeeGoalToDateAmount) {
    
    
    
    
    this.employeeGoalToDateAmount = employeeGoalToDateAmount.doubleValue();
    return this;
  }

   /**
   * Get employeeGoalToDateAmount
   * @return employeeGoalToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeGoalToDateAmount() {
    return employeeGoalToDateAmount;
  }


  public void setEmployeeGoalToDateAmount(Double employeeGoalToDateAmount) {
    
    
    
    this.employeeGoalToDateAmount = employeeGoalToDateAmount;
  }


  public OpenEnrollmentEmployeeDeductions employeeId(String employeeId) {
    
    
    
    
    this.employeeId = employeeId;
    return this;
  }

   /**
   * Get employeeId
   * @return employeeId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeId() {
    return employeeId;
  }


  public void setEmployeeId(String employeeId) {
    
    
    
    this.employeeId = employeeId;
  }


  public OpenEnrollmentEmployeeDeductions employeeMemberOrCaseNo(String employeeMemberOrCaseNo) {
    
    
    
    
    this.employeeMemberOrCaseNo = employeeMemberOrCaseNo;
    return this;
  }

   /**
   * Get employeeMemberOrCaseNo
   * @return employeeMemberOrCaseNo
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployeeMemberOrCaseNo() {
    return employeeMemberOrCaseNo;
  }


  public void setEmployeeMemberOrCaseNo(String employeeMemberOrCaseNo) {
    
    
    
    this.employeeMemberOrCaseNo = employeeMemberOrCaseNo;
  }


  public OpenEnrollmentEmployeeDeductions employeeYearToDateAmount(Double employeeYearToDateAmount) {
    
    
    
    
    this.employeeYearToDateAmount = employeeYearToDateAmount;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions employeeYearToDateAmount(Integer employeeYearToDateAmount) {
    
    
    
    
    this.employeeYearToDateAmount = employeeYearToDateAmount.doubleValue();
    return this;
  }

   /**
   * Get employeeYearToDateAmount
   * @return employeeYearToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployeeYearToDateAmount() {
    return employeeYearToDateAmount;
  }


  public void setEmployeeYearToDateAmount(Double employeeYearToDateAmount) {
    
    
    
    this.employeeYearToDateAmount = employeeYearToDateAmount;
  }


  public OpenEnrollmentEmployeeDeductions evidenceofInsurabilityDate(OffsetDateTime evidenceofInsurabilityDate) {
    
    
    
    
    this.evidenceofInsurabilityDate = evidenceofInsurabilityDate;
    return this;
  }

   /**
   * Get evidenceofInsurabilityDate
   * @return evidenceofInsurabilityDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEvidenceofInsurabilityDate() {
    return evidenceofInsurabilityDate;
  }


  public void setEvidenceofInsurabilityDate(OffsetDateTime evidenceofInsurabilityDate) {
    
    
    
    this.evidenceofInsurabilityDate = evidenceofInsurabilityDate;
  }


  public OpenEnrollmentEmployeeDeductions needEvidenceOfInsurability(Boolean needEvidenceOfInsurability) {
    
    
    
    
    this.needEvidenceOfInsurability = needEvidenceOfInsurability;
    return this;
  }

   /**
   * Get needEvidenceOfInsurability
   * @return needEvidenceOfInsurability
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getNeedEvidenceOfInsurability() {
    return needEvidenceOfInsurability;
  }


  public void setNeedEvidenceOfInsurability(Boolean needEvidenceOfInsurability) {
    
    
    
    this.needEvidenceOfInsurability = needEvidenceOfInsurability;
  }


  public OpenEnrollmentEmployeeDeductions evidenceofInsurabilityDesiredAmount(Double evidenceofInsurabilityDesiredAmount) {
    
    
    
    
    this.evidenceofInsurabilityDesiredAmount = evidenceofInsurabilityDesiredAmount;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions evidenceofInsurabilityDesiredAmount(Integer evidenceofInsurabilityDesiredAmount) {
    
    
    
    
    this.evidenceofInsurabilityDesiredAmount = evidenceofInsurabilityDesiredAmount.doubleValue();
    return this;
  }

   /**
   * Get evidenceofInsurabilityDesiredAmount
   * @return evidenceofInsurabilityDesiredAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEvidenceofInsurabilityDesiredAmount() {
    return evidenceofInsurabilityDesiredAmount;
  }


  public void setEvidenceofInsurabilityDesiredAmount(Double evidenceofInsurabilityDesiredAmount) {
    
    
    
    this.evidenceofInsurabilityDesiredAmount = evidenceofInsurabilityDesiredAmount;
  }


  public OpenEnrollmentEmployeeDeductions employeeEligibilityDesiredCalculationRateOrPercent(Integer employeeEligibilityDesiredCalculationRateOrPercent) {
    
    
    
    
    this.employeeEligibilityDesiredCalculationRateOrPercent = employeeEligibilityDesiredCalculationRateOrPercent;
    return this;
  }

   /**
   * Get employeeEligibilityDesiredCalculationRateOrPercent
   * @return employeeEligibilityDesiredCalculationRateOrPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Integer getEmployeeEligibilityDesiredCalculationRateOrPercent() {
    return employeeEligibilityDesiredCalculationRateOrPercent;
  }


  public void setEmployeeEligibilityDesiredCalculationRateOrPercent(Integer employeeEligibilityDesiredCalculationRateOrPercent) {
    
    
    
    this.employeeEligibilityDesiredCalculationRateOrPercent = employeeEligibilityDesiredCalculationRateOrPercent;
  }


  public OpenEnrollmentEmployeeDeductions employerAmount(Double employerAmount) {
    
    
    
    
    this.employerAmount = employerAmount;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions employerAmount(Integer employerAmount) {
    
    
    
    
    this.employerAmount = employerAmount.doubleValue();
    return this;
  }

   /**
   * Get employerAmount
   * @return employerAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerAmount() {
    return employerAmount;
  }


  public void setEmployerAmount(Double employerAmount) {
    
    
    
    this.employerAmount = employerAmount;
  }


  public OpenEnrollmentEmployeeDeductions employerCalculationRateOrPercent(Double employerCalculationRateOrPercent) {
    
    
    
    
    this.employerCalculationRateOrPercent = employerCalculationRateOrPercent;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions employerCalculationRateOrPercent(Integer employerCalculationRateOrPercent) {
    
    
    
    
    this.employerCalculationRateOrPercent = employerCalculationRateOrPercent.doubleValue();
    return this;
  }

   /**
   * Get employerCalculationRateOrPercent
   * @return employerCalculationRateOrPercent
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerCalculationRateOrPercent() {
    return employerCalculationRateOrPercent;
  }


  public void setEmployerCalculationRateOrPercent(Double employerCalculationRateOrPercent) {
    
    
    
    this.employerCalculationRateOrPercent = employerCalculationRateOrPercent;
  }


  public OpenEnrollmentEmployeeDeductions employerCalculationRule(String employerCalculationRule) {
    
    
    
    
    this.employerCalculationRule = employerCalculationRule;
    return this;
  }

   /**
   * Get employerCalculationRule
   * @return employerCalculationRule
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getEmployerCalculationRule() {
    return employerCalculationRule;
  }


  public void setEmployerCalculationRule(String employerCalculationRule) {
    
    
    
    this.employerCalculationRule = employerCalculationRule;
  }


  public OpenEnrollmentEmployeeDeductions employerYearToDateAmount(Double employerYearToDateAmount) {
    
    
    
    
    this.employerYearToDateAmount = employerYearToDateAmount;
    return this;
  }

  public OpenEnrollmentEmployeeDeductions employerYearToDateAmount(Integer employerYearToDateAmount) {
    
    
    
    
    this.employerYearToDateAmount = employerYearToDateAmount.doubleValue();
    return this;
  }

   /**
   * Get employerYearToDateAmount
   * @return employerYearToDateAmount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Double getEmployerYearToDateAmount() {
    return employerYearToDateAmount;
  }


  public void setEmployerYearToDateAmount(Double employerYearToDateAmount) {
    
    
    
    this.employerYearToDateAmount = employerYearToDateAmount;
  }


  public OpenEnrollmentEmployeeDeductions isDeductionOffset(Boolean isDeductionOffset) {
    
    
    
    
    this.isDeductionOffset = isDeductionOffset;
    return this;
  }

   /**
   * Get isDeductionOffset
   * @return isDeductionOffset
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsDeductionOffset() {
    return isDeductionOffset;
  }


  public void setIsDeductionOffset(Boolean isDeductionOffset) {
    
    
    
    this.isDeductionOffset = isDeductionOffset;
  }


  public OpenEnrollmentEmployeeDeductions medicalIndicator(Boolean medicalIndicator) {
    
    
    
    
    this.medicalIndicator = medicalIndicator;
    return this;
  }

   /**
   * Get medicalIndicator
   * @return medicalIndicator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getMedicalIndicator() {
    return medicalIndicator;
  }


  public void setMedicalIndicator(Boolean medicalIndicator) {
    
    
    
    this.medicalIndicator = medicalIndicator;
  }


  public OpenEnrollmentEmployeeDeductions deductionNotes(String deductionNotes) {
    
    
    
    
    this.deductionNotes = deductionNotes;
    return this;
  }

   /**
   * Get deductionNotes
   * @return deductionNotes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getDeductionNotes() {
    return deductionNotes;
  }


  public void setDeductionNotes(String deductionNotes) {
    
    
    
    this.deductionNotes = deductionNotes;
  }


  public OpenEnrollmentEmployeeDeductions primaryCarePhysician(String primaryCarePhysician) {
    
    
    
    
    this.primaryCarePhysician = primaryCarePhysician;
    return this;
  }

   /**
   * Get primaryCarePhysician
   * @return primaryCarePhysician
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryCarePhysician() {
    return primaryCarePhysician;
  }


  public void setPrimaryCarePhysician(String primaryCarePhysician) {
    
    
    
    this.primaryCarePhysician = primaryCarePhysician;
  }


  public OpenEnrollmentEmployeeDeductions primaryCarePhysicianId(String primaryCarePhysicianId) {
    
    
    
    
    this.primaryCarePhysicianId = primaryCarePhysicianId;
    return this;
  }

   /**
   * Get primaryCarePhysicianId
   * @return primaryCarePhysicianId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getPrimaryCarePhysicianId() {
    return primaryCarePhysicianId;
  }


  public void setPrimaryCarePhysicianId(String primaryCarePhysicianId) {
    
    
    
    this.primaryCarePhysicianId = primaryCarePhysicianId;
  }


  public OpenEnrollmentEmployeeDeductions deductionStartDate(OffsetDateTime deductionStartDate) {
    
    
    
    
    this.deductionStartDate = deductionStartDate;
    return this;
  }

   /**
   * Get deductionStartDate
   * @return deductionStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeductionStartDate() {
    return deductionStartDate;
  }


  public void setDeductionStartDate(OffsetDateTime deductionStartDate) {
    
    
    
    this.deductionStartDate = deductionStartDate;
  }


  public OpenEnrollmentEmployeeDeductions deductionStopDate(OffsetDateTime deductionStopDate) {
    
    
    
    
    this.deductionStopDate = deductionStopDate;
    return this;
  }

   /**
   * Get deductionStopDate
   * @return deductionStopDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getDeductionStopDate() {
    return deductionStopDate;
  }


  public void setDeductionStopDate(OffsetDateTime deductionStopDate) {
    
    
    
    this.deductionStopDate = deductionStopDate;
  }


  public OpenEnrollmentEmployeeDeductions benefitWaiveReason(String benefitWaiveReason) {
    
    
    
    
    this.benefitWaiveReason = benefitWaiveReason;
    return this;
  }

   /**
   * Get benefitWaiveReason
   * @return benefitWaiveReason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getBenefitWaiveReason() {
    return benefitWaiveReason;
  }


  public void setBenefitWaiveReason(String benefitWaiveReason) {
    
    
    
    this.benefitWaiveReason = benefitWaiveReason;
  }


  public OpenEnrollmentEmployeeDeductions isBenefitWaived(Boolean isBenefitWaived) {
    
    
    
    
    this.isBenefitWaived = isBenefitWaived;
    return this;
  }

   /**
   * Get isBenefitWaived
   * @return isBenefitWaived
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getIsBenefitWaived() {
    return isBenefitWaived;
  }


  public void setIsBenefitWaived(Boolean isBenefitWaived) {
    
    
    
    this.isBenefitWaived = isBenefitWaived;
  }


  public OpenEnrollmentEmployeeDeductions oeDrop(Boolean oeDrop) {
    
    
    
    
    this.oeDrop = oeDrop;
    return this;
  }

   /**
   * Get oeDrop
   * @return oeDrop
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getOeDrop() {
    return oeDrop;
  }


  public void setOeDrop(Boolean oeDrop) {
    
    
    
    this.oeDrop = oeDrop;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the OpenEnrollmentEmployeeDeductions instance itself
   */
  public OpenEnrollmentEmployeeDeductions putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OpenEnrollmentEmployeeDeductions openEnrollmentEmployeeDeductions = (OpenEnrollmentEmployeeDeductions) o;
    return Objects.equals(this.benefitAmount, openEnrollmentEmployeeDeductions.benefitAmount) &&
        Objects.equals(this.benefitAmountRateOrPercent, openEnrollmentEmployeeDeductions.benefitAmountRateOrPercent) &&
        Objects.equals(this.benefitOption, openEnrollmentEmployeeDeductions.benefitOption) &&
        Objects.equals(this.addCoverage, openEnrollmentEmployeeDeductions.addCoverage) &&
        Objects.equals(this.changeReason, openEnrollmentEmployeeDeductions.changeReason) &&
        Objects.equals(this.benefitStartDate, openEnrollmentEmployeeDeductions.benefitStartDate) &&
        Objects.equals(this.benefitStatus, openEnrollmentEmployeeDeductions.benefitStatus) &&
        Objects.equals(this.benefitStatusDate, openEnrollmentEmployeeDeductions.benefitStatusDate) &&
        Objects.equals(this.benefitStopDate, openEnrollmentEmployeeDeductions.benefitStopDate) &&
        Objects.equals(this.companyId, openEnrollmentEmployeeDeductions.companyId) &&
        Objects.equals(this.customAmount1, openEnrollmentEmployeeDeductions.customAmount1) &&
        Objects.equals(this.customAmount2, openEnrollmentEmployeeDeductions.customAmount2) &&
        Objects.equals(this.customDate, openEnrollmentEmployeeDeductions.customDate) &&
        Objects.equals(this.changeDatetime, openEnrollmentEmployeeDeductions.changeDatetime) &&
        Objects.equals(this.createDatetime, openEnrollmentEmployeeDeductions.createDatetime) &&
        Objects.equals(this.deductionCode, openEnrollmentEmployeeDeductions.deductionCode) &&
        Objects.equals(this.deductionType, openEnrollmentEmployeeDeductions.deductionType) &&
        Objects.equals(this.employeeAmount, openEnrollmentEmployeeDeductions.employeeAmount) &&
        Objects.equals(this.employeeCalculationRateOrPercent, openEnrollmentEmployeeDeductions.employeeCalculationRateOrPercent) &&
        Objects.equals(this.employeeEligibilityDate, openEnrollmentEmployeeDeductions.employeeEligibilityDate) &&
        Objects.equals(this.employeeGoalAmt, openEnrollmentEmployeeDeductions.employeeGoalAmt) &&
        Objects.equals(this.employeeGoalToDateAmount, openEnrollmentEmployeeDeductions.employeeGoalToDateAmount) &&
        Objects.equals(this.employeeId, openEnrollmentEmployeeDeductions.employeeId) &&
        Objects.equals(this.employeeMemberOrCaseNo, openEnrollmentEmployeeDeductions.employeeMemberOrCaseNo) &&
        Objects.equals(this.employeeYearToDateAmount, openEnrollmentEmployeeDeductions.employeeYearToDateAmount) &&
        Objects.equals(this.evidenceofInsurabilityDate, openEnrollmentEmployeeDeductions.evidenceofInsurabilityDate) &&
        Objects.equals(this.needEvidenceOfInsurability, openEnrollmentEmployeeDeductions.needEvidenceOfInsurability) &&
        Objects.equals(this.evidenceofInsurabilityDesiredAmount, openEnrollmentEmployeeDeductions.evidenceofInsurabilityDesiredAmount) &&
        Objects.equals(this.employeeEligibilityDesiredCalculationRateOrPercent, openEnrollmentEmployeeDeductions.employeeEligibilityDesiredCalculationRateOrPercent) &&
        Objects.equals(this.employerAmount, openEnrollmentEmployeeDeductions.employerAmount) &&
        Objects.equals(this.employerCalculationRateOrPercent, openEnrollmentEmployeeDeductions.employerCalculationRateOrPercent) &&
        Objects.equals(this.employerCalculationRule, openEnrollmentEmployeeDeductions.employerCalculationRule) &&
        Objects.equals(this.employerYearToDateAmount, openEnrollmentEmployeeDeductions.employerYearToDateAmount) &&
        Objects.equals(this.isDeductionOffset, openEnrollmentEmployeeDeductions.isDeductionOffset) &&
        Objects.equals(this.medicalIndicator, openEnrollmentEmployeeDeductions.medicalIndicator) &&
        Objects.equals(this.deductionNotes, openEnrollmentEmployeeDeductions.deductionNotes) &&
        Objects.equals(this.primaryCarePhysician, openEnrollmentEmployeeDeductions.primaryCarePhysician) &&
        Objects.equals(this.primaryCarePhysicianId, openEnrollmentEmployeeDeductions.primaryCarePhysicianId) &&
        Objects.equals(this.deductionStartDate, openEnrollmentEmployeeDeductions.deductionStartDate) &&
        Objects.equals(this.deductionStopDate, openEnrollmentEmployeeDeductions.deductionStopDate) &&
        Objects.equals(this.benefitWaiveReason, openEnrollmentEmployeeDeductions.benefitWaiveReason) &&
        Objects.equals(this.isBenefitWaived, openEnrollmentEmployeeDeductions.isBenefitWaived) &&
        Objects.equals(this.oeDrop, openEnrollmentEmployeeDeductions.oeDrop)&&
        Objects.equals(this.additionalProperties, openEnrollmentEmployeeDeductions.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(benefitAmount, benefitAmountRateOrPercent, benefitOption, addCoverage, changeReason, benefitStartDate, benefitStatus, benefitStatusDate, benefitStopDate, companyId, customAmount1, customAmount2, customDate, changeDatetime, createDatetime, deductionCode, deductionType, employeeAmount, employeeCalculationRateOrPercent, employeeEligibilityDate, employeeGoalAmt, employeeGoalToDateAmount, employeeId, employeeMemberOrCaseNo, employeeYearToDateAmount, evidenceofInsurabilityDate, needEvidenceOfInsurability, evidenceofInsurabilityDesiredAmount, employeeEligibilityDesiredCalculationRateOrPercent, employerAmount, employerCalculationRateOrPercent, employerCalculationRule, employerYearToDateAmount, isDeductionOffset, medicalIndicator, deductionNotes, primaryCarePhysician, primaryCarePhysicianId, deductionStartDate, deductionStopDate, benefitWaiveReason, isBenefitWaived, oeDrop, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OpenEnrollmentEmployeeDeductions {\n");
    sb.append("    benefitAmount: ").append(toIndentedString(benefitAmount)).append("\n");
    sb.append("    benefitAmountRateOrPercent: ").append(toIndentedString(benefitAmountRateOrPercent)).append("\n");
    sb.append("    benefitOption: ").append(toIndentedString(benefitOption)).append("\n");
    sb.append("    addCoverage: ").append(toIndentedString(addCoverage)).append("\n");
    sb.append("    changeReason: ").append(toIndentedString(changeReason)).append("\n");
    sb.append("    benefitStartDate: ").append(toIndentedString(benefitStartDate)).append("\n");
    sb.append("    benefitStatus: ").append(toIndentedString(benefitStatus)).append("\n");
    sb.append("    benefitStatusDate: ").append(toIndentedString(benefitStatusDate)).append("\n");
    sb.append("    benefitStopDate: ").append(toIndentedString(benefitStopDate)).append("\n");
    sb.append("    companyId: ").append(toIndentedString(companyId)).append("\n");
    sb.append("    customAmount1: ").append(toIndentedString(customAmount1)).append("\n");
    sb.append("    customAmount2: ").append(toIndentedString(customAmount2)).append("\n");
    sb.append("    customDate: ").append(toIndentedString(customDate)).append("\n");
    sb.append("    changeDatetime: ").append(toIndentedString(changeDatetime)).append("\n");
    sb.append("    createDatetime: ").append(toIndentedString(createDatetime)).append("\n");
    sb.append("    deductionCode: ").append(toIndentedString(deductionCode)).append("\n");
    sb.append("    deductionType: ").append(toIndentedString(deductionType)).append("\n");
    sb.append("    employeeAmount: ").append(toIndentedString(employeeAmount)).append("\n");
    sb.append("    employeeCalculationRateOrPercent: ").append(toIndentedString(employeeCalculationRateOrPercent)).append("\n");
    sb.append("    employeeEligibilityDate: ").append(toIndentedString(employeeEligibilityDate)).append("\n");
    sb.append("    employeeGoalAmt: ").append(toIndentedString(employeeGoalAmt)).append("\n");
    sb.append("    employeeGoalToDateAmount: ").append(toIndentedString(employeeGoalToDateAmount)).append("\n");
    sb.append("    employeeId: ").append(toIndentedString(employeeId)).append("\n");
    sb.append("    employeeMemberOrCaseNo: ").append(toIndentedString(employeeMemberOrCaseNo)).append("\n");
    sb.append("    employeeYearToDateAmount: ").append(toIndentedString(employeeYearToDateAmount)).append("\n");
    sb.append("    evidenceofInsurabilityDate: ").append(toIndentedString(evidenceofInsurabilityDate)).append("\n");
    sb.append("    needEvidenceOfInsurability: ").append(toIndentedString(needEvidenceOfInsurability)).append("\n");
    sb.append("    evidenceofInsurabilityDesiredAmount: ").append(toIndentedString(evidenceofInsurabilityDesiredAmount)).append("\n");
    sb.append("    employeeEligibilityDesiredCalculationRateOrPercent: ").append(toIndentedString(employeeEligibilityDesiredCalculationRateOrPercent)).append("\n");
    sb.append("    employerAmount: ").append(toIndentedString(employerAmount)).append("\n");
    sb.append("    employerCalculationRateOrPercent: ").append(toIndentedString(employerCalculationRateOrPercent)).append("\n");
    sb.append("    employerCalculationRule: ").append(toIndentedString(employerCalculationRule)).append("\n");
    sb.append("    employerYearToDateAmount: ").append(toIndentedString(employerYearToDateAmount)).append("\n");
    sb.append("    isDeductionOffset: ").append(toIndentedString(isDeductionOffset)).append("\n");
    sb.append("    medicalIndicator: ").append(toIndentedString(medicalIndicator)).append("\n");
    sb.append("    deductionNotes: ").append(toIndentedString(deductionNotes)).append("\n");
    sb.append("    primaryCarePhysician: ").append(toIndentedString(primaryCarePhysician)).append("\n");
    sb.append("    primaryCarePhysicianId: ").append(toIndentedString(primaryCarePhysicianId)).append("\n");
    sb.append("    deductionStartDate: ").append(toIndentedString(deductionStartDate)).append("\n");
    sb.append("    deductionStopDate: ").append(toIndentedString(deductionStopDate)).append("\n");
    sb.append("    benefitWaiveReason: ").append(toIndentedString(benefitWaiveReason)).append("\n");
    sb.append("    isBenefitWaived: ").append(toIndentedString(isBenefitWaived)).append("\n");
    sb.append("    oeDrop: ").append(toIndentedString(oeDrop)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("benefitAmount");
    openapiFields.add("benefitAmountRateOrPercent");
    openapiFields.add("benefitOption");
    openapiFields.add("addCoverage");
    openapiFields.add("changeReason");
    openapiFields.add("benefitStartDate");
    openapiFields.add("benefitStatus");
    openapiFields.add("benefitStatusDate");
    openapiFields.add("benefitStopDate");
    openapiFields.add("companyId");
    openapiFields.add("customAmount1");
    openapiFields.add("customAmount2");
    openapiFields.add("customDate");
    openapiFields.add("changeDatetime");
    openapiFields.add("createDatetime");
    openapiFields.add("deductionCode");
    openapiFields.add("deductionType");
    openapiFields.add("employeeAmount");
    openapiFields.add("employeeCalculationRateOrPercent");
    openapiFields.add("employeeEligibilityDate");
    openapiFields.add("employeeGoalAmt");
    openapiFields.add("employeeGoalToDateAmount");
    openapiFields.add("employeeId");
    openapiFields.add("employeeMemberOrCaseNo");
    openapiFields.add("employeeYearToDateAmount");
    openapiFields.add("evidenceofInsurabilityDate");
    openapiFields.add("needEvidenceOfInsurability");
    openapiFields.add("evidenceofInsurabilityDesiredAmount");
    openapiFields.add("employeeEligibilityDesiredCalculationRateOrPercent");
    openapiFields.add("employerAmount");
    openapiFields.add("employerCalculationRateOrPercent");
    openapiFields.add("employerCalculationRule");
    openapiFields.add("employerYearToDateAmount");
    openapiFields.add("isDeductionOffset");
    openapiFields.add("medicalIndicator");
    openapiFields.add("deductionNotes");
    openapiFields.add("primaryCarePhysician");
    openapiFields.add("primaryCarePhysicianId");
    openapiFields.add("deductionStartDate");
    openapiFields.add("deductionStopDate");
    openapiFields.add("benefitWaiveReason");
    openapiFields.add("isBenefitWaived");
    openapiFields.add("oeDrop");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to OpenEnrollmentEmployeeDeductions
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!OpenEnrollmentEmployeeDeductions.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OpenEnrollmentEmployeeDeductions is not found in the empty JSON string", OpenEnrollmentEmployeeDeductions.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("benefitOption") != null && !jsonObj.get("benefitOption").isJsonNull()) && !jsonObj.get("benefitOption").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitOption` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitOption").toString()));
      }
      if ((jsonObj.get("changeReason") != null && !jsonObj.get("changeReason").isJsonNull()) && !jsonObj.get("changeReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `changeReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("changeReason").toString()));
      }
      if ((jsonObj.get("benefitStatus") != null && !jsonObj.get("benefitStatus").isJsonNull()) && !jsonObj.get("benefitStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitStatus").toString()));
      }
      if ((jsonObj.get("companyId") != null && !jsonObj.get("companyId").isJsonNull()) && !jsonObj.get("companyId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `companyId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("companyId").toString()));
      }
      if ((jsonObj.get("deductionCode") != null && !jsonObj.get("deductionCode").isJsonNull()) && !jsonObj.get("deductionCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionCode").toString()));
      }
      if ((jsonObj.get("deductionType") != null && !jsonObj.get("deductionType").isJsonNull()) && !jsonObj.get("deductionType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionType").toString()));
      }
      if ((jsonObj.get("employeeId") != null && !jsonObj.get("employeeId").isJsonNull()) && !jsonObj.get("employeeId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeId").toString()));
      }
      if ((jsonObj.get("employeeMemberOrCaseNo") != null && !jsonObj.get("employeeMemberOrCaseNo").isJsonNull()) && !jsonObj.get("employeeMemberOrCaseNo").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employeeMemberOrCaseNo` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employeeMemberOrCaseNo").toString()));
      }
      if ((jsonObj.get("employerCalculationRule") != null && !jsonObj.get("employerCalculationRule").isJsonNull()) && !jsonObj.get("employerCalculationRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `employerCalculationRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("employerCalculationRule").toString()));
      }
      if ((jsonObj.get("deductionNotes") != null && !jsonObj.get("deductionNotes").isJsonNull()) && !jsonObj.get("deductionNotes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `deductionNotes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("deductionNotes").toString()));
      }
      if ((jsonObj.get("primaryCarePhysician") != null && !jsonObj.get("primaryCarePhysician").isJsonNull()) && !jsonObj.get("primaryCarePhysician").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryCarePhysician` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryCarePhysician").toString()));
      }
      if ((jsonObj.get("primaryCarePhysicianId") != null && !jsonObj.get("primaryCarePhysicianId").isJsonNull()) && !jsonObj.get("primaryCarePhysicianId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primaryCarePhysicianId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primaryCarePhysicianId").toString()));
      }
      if ((jsonObj.get("benefitWaiveReason") != null && !jsonObj.get("benefitWaiveReason").isJsonNull()) && !jsonObj.get("benefitWaiveReason").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `benefitWaiveReason` to be a primitive type in the JSON string but got `%s`", jsonObj.get("benefitWaiveReason").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OpenEnrollmentEmployeeDeductions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OpenEnrollmentEmployeeDeductions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OpenEnrollmentEmployeeDeductions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OpenEnrollmentEmployeeDeductions.class));

       return (TypeAdapter<T>) new TypeAdapter<OpenEnrollmentEmployeeDeductions>() {
           @Override
           public void write(JsonWriter out, OpenEnrollmentEmployeeDeductions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public OpenEnrollmentEmployeeDeductions read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             OpenEnrollmentEmployeeDeductions instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of OpenEnrollmentEmployeeDeductions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of OpenEnrollmentEmployeeDeductions
  * @throws IOException if the JSON string is invalid with respect to OpenEnrollmentEmployeeDeductions
  */
  public static OpenEnrollmentEmployeeDeductions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OpenEnrollmentEmployeeDeductions.class);
  }

 /**
  * Convert an instance of OpenEnrollmentEmployeeDeductions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

