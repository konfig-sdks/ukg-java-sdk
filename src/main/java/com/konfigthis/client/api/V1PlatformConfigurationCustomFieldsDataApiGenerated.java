/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class V1PlatformConfigurationCustomFieldsDataApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public V1PlatformConfigurationCustomFieldsDataApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public V1PlatformConfigurationCustomFieldsDataApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call getFieldsDataCall(String className, String keyName, String keyValue, String fields, String employmentStatus, Integer page, Integer perPage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/personnel/v1/platform-configuration-fields/class-name/{className}"
            .replace("{" + "className" + "}", localVarApiClient.escapeString(className.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (keyName != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyName", keyName));
        }

        if (keyValue != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyValue", keyValue));
        }

        if (fields != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("fields", fields));
        }

        if (employmentStatus != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("employmentStatus", employmentStatus));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_Page", perPage));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json",
            "application/problem+json",
            "application/xml",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OauthSecurity" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getFieldsDataValidateBeforeCall(String className, String keyName, String keyValue, String fields, String employmentStatus, Integer page, Integer perPage, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'className' is set
        if (className == null) {
            throw new ApiException("Missing the required parameter 'className' when calling getFieldsData(Async)");
        }

        return getFieldsDataCall(className, keyName, keyValue, fields, employmentStatus, page, perPage, _callback);

    }


    private ApiResponse<List<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>> getFieldsDataWithHttpInfo(String className, String keyName, String keyValue, String fields, String employmentStatus, Integer page, Integer perPage) throws ApiException {
        okhttp3.Call localVarCall = getFieldsDataValidateBeforeCall(className, keyName, keyValue, fields, employmentStatus, page, perPage, null);
        Type localVarReturnType = new TypeToken<List<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getFieldsDataAsync(String className, String keyName, String keyValue, String fields, String employmentStatus, Integer page, Integer perPage, final ApiCallback<List<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>> _callback) throws ApiException {

        okhttp3.Call localVarCall = getFieldsDataValidateBeforeCall(className, keyName, keyValue, fields, employmentStatus, page, perPage, _callback);
        Type localVarReturnType = new TypeToken<List<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetFieldsDataRequestBuilder {
        private final String className;
        private String keyName;
        private String keyValue;
        private String fields;
        private String employmentStatus;
        private Integer page;
        private Integer perPage;

        private GetFieldsDataRequestBuilder(String className) {
            this.className = className;
        }

        /**
         * Set keyName
         * @param keyName Optional keyName to allow filtering results by the corresponding keyValue. keyNames are specific IDs that apply to the class in question. (optional)
         * @return GetFieldsDataRequestBuilder
         */
        public GetFieldsDataRequestBuilder keyName(String keyName) {
            this.keyName = keyName;
            return this;
        }
        
        /**
         * Set keyValue
         * @param keyValue Optional keyValue. Allows filtering results to only include a specific keyValue(s). keyValues correspond to a supplied keyName. (optional)
         * @return GetFieldsDataRequestBuilder
         */
        public GetFieldsDataRequestBuilder keyValue(String keyValue) {
            this.keyValue = keyValue;
            return this;
        }
        
        /**
         * Set fields
         * @param fields The exact name of a custom field or fields in a comma seperated list. Filters results to only fields with those names. (optional)
         * @return GetFieldsDataRequestBuilder
         */
        public GetFieldsDataRequestBuilder fields(String fields) {
            this.fields = fields;
            return this;
        }
        
        /**
         * Set employmentStatus
         * @param employmentStatus Use in junction with employment specific queries to filter custom field results by an internal employment status. (optional)
         * @return GetFieldsDataRequestBuilder
         */
        public GetFieldsDataRequestBuilder employmentStatus(String employmentStatus) {
            this.employmentStatus = employmentStatus;
            return this;
        }
        
        /**
         * Set page
         * @param page Offsets results. Used with page number to allow filtering results to a specific range of custom fields. (optional)
         * @return GetFieldsDataRequestBuilder
         */
        public GetFieldsDataRequestBuilder page(Integer page) {
            this.page = page;
            return this;
        }
        
        /**
         * Set perPage
         * @param perPage Offsets results. Used with page to allow filtering results to a specific range of custom fields. (optional)
         * @return GetFieldsDataRequestBuilder
         */
        public GetFieldsDataRequestBuilder perPage(Integer perPage) {
            this.perPage = perPage;
            return this;
        }
        
        /**
         * Build call for getFieldsData
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> NotFound </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getFieldsDataCall(className, keyName, keyValue, fields, employmentStatus, page, perPage, _callback);
        }


        /**
         * Execute getFieldsData request
         * @return List&lt;UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> NotFound </td><td>  -  </td></tr>
         </table>
         */
        public List<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData> execute() throws ApiException {
            ApiResponse<List<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>> localVarResp = getFieldsDataWithHttpInfo(className, keyName, keyValue, fields, employmentStatus, page, perPage);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getFieldsData request with HTTP info returned
         * @return ApiResponse&lt;List&lt;UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData&gt;&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> NotFound </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<List<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>> executeWithHttpInfo() throws ApiException {
            return getFieldsDataWithHttpInfo(className, keyName, keyValue, fields, employmentStatus, page, perPage);
        }

        /**
         * Execute getFieldsData request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
            <tr><td> 404 </td><td> NotFound </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<List<UltimateSoftwareFoundationServicesApiUltiProPersonnelPlatformConfigurationModelsPcData>> _callback) throws ApiException {
            return getFieldsDataAsync(className, keyName, keyValue, fields, employmentStatus, page, perPage, _callback);
        }
    }

    /**
     * Platform Configuration Fields Data v1
     * Returns information about the UKG Pro Platform Configuration Custom Fields Data. Specifically, each of a classes&#39; custom fields and their respective values. The keyNames, keyValues, employment status, and fields vary and are dependent on the class in question. Classes marked &#39;(not emp specific)&#39; in the list below will not work with the employmentStatus parameter.&lt;br /&gt;UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Personnel Integration\&quot; Web Service.&lt;br /&gt;&lt;b&gt;Supported classes&lt;/b&gt;:&lt;br /&gt;  1. Address&lt;br /&gt;  2. Person&lt;br /&gt;  3. PersonName&lt;br /&gt;  4. Employee&lt;br /&gt;  5. PhoneNumber&lt;br /&gt;  6. Employment&lt;br /&gt;  7. InternationalEmployee&lt;br /&gt;  8. ComponentCompany - (not emp specific)&lt;br /&gt;  9. Location - (not emp specific)&lt;br /&gt;  10. Job -(not emp specific)&lt;br /&gt;  11. OrgLevel1 - (not emp specific)&lt;br /&gt;  12. OrgLevel2 - (not emp specific)&lt;br /&gt;  13. OrgLevel3 - (not emp specific)&lt;br /&gt;  14. OrgLevel4 - (not emp specific).
     * @param className The name of a supported class, as listed above, to pull custom fields from. (required)
     * @return GetFieldsDataRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> NotFound </td><td>  -  </td></tr>
     </table>
     */
    public GetFieldsDataRequestBuilder getFieldsData(String className) throws IllegalArgumentException {
        if (className == null) throw new IllegalArgumentException("\"className\" is required but got null");
            

        return new GetFieldsDataRequestBuilder(className);
    }
}
