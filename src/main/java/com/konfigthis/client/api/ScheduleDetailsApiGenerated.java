/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.MultiStatusDtoScheduleModelStateDto;
import com.konfigthis.client.model.PublishScheduleDetailDto;
import com.konfigthis.client.model.ScheduleDetailDto;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class ScheduleDetailsApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ScheduleDetailsApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public ScheduleDetailsApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call publishDetailsCall(PublishScheduleDetailDto publishScheduleDetailDto, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = publishScheduleDetailDto;

        // create path and map variables
        String localVarPath = "/simpleschedule/schedule_details";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OauthSecurity" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call publishDetailsValidateBeforeCall(PublishScheduleDetailDto publishScheduleDetailDto, final ApiCallback _callback) throws ApiException {
        return publishDetailsCall(publishScheduleDetailDto, _callback);

    }


    private ApiResponse<List<MultiStatusDtoScheduleModelStateDto>> publishDetailsWithHttpInfo(PublishScheduleDetailDto publishScheduleDetailDto) throws ApiException {
        okhttp3.Call localVarCall = publishDetailsValidateBeforeCall(publishScheduleDetailDto, null);
        Type localVarReturnType = new TypeToken<List<MultiStatusDtoScheduleModelStateDto>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call publishDetailsAsync(PublishScheduleDetailDto publishScheduleDetailDto, final ApiCallback<List<MultiStatusDtoScheduleModelStateDto>> _callback) throws ApiException {

        okhttp3.Call localVarCall = publishDetailsValidateBeforeCall(publishScheduleDetailDto, _callback);
        Type localVarReturnType = new TypeToken<List<MultiStatusDtoScheduleModelStateDto>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class PublishDetailsRequestBuilder {
        private List<ScheduleDetailDto> scheduleDetails;
        private String comment;

        private PublishDetailsRequestBuilder() {
        }

        /**
         * Set scheduleDetails
         * @param scheduleDetails  (optional)
         * @return PublishDetailsRequestBuilder
         */
        public PublishDetailsRequestBuilder scheduleDetails(List<ScheduleDetailDto> scheduleDetails) {
            this.scheduleDetails = scheduleDetails;
            return this;
        }
        
        /**
         * Set comment
         * @param comment  (optional)
         * @return PublishDetailsRequestBuilder
         */
        public PublishDetailsRequestBuilder comment(String comment) {
            this.comment = comment;
            return this;
        }
        
        /**
         * Build call for publishDetails
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 207 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            PublishScheduleDetailDto publishScheduleDetailDto = buildBodyParams();
            return publishDetailsCall(publishScheduleDetailDto, _callback);
        }

        private PublishScheduleDetailDto buildBodyParams() {
            PublishScheduleDetailDto publishScheduleDetailDto = new PublishScheduleDetailDto();
            publishScheduleDetailDto.scheduleDetails(this.scheduleDetails);
            publishScheduleDetailDto.comment(this.comment);
            return publishScheduleDetailDto;
        }

        /**
         * Execute publishDetails request
         * @return List&lt;MultiStatusDtoScheduleModelStateDto&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 207 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public List<MultiStatusDtoScheduleModelStateDto> execute() throws ApiException {
            PublishScheduleDetailDto publishScheduleDetailDto = buildBodyParams();
            ApiResponse<List<MultiStatusDtoScheduleModelStateDto>> localVarResp = publishDetailsWithHttpInfo(publishScheduleDetailDto);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute publishDetails request with HTTP info returned
         * @return ApiResponse&lt;List&lt;MultiStatusDtoScheduleModelStateDto&gt;&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 207 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<List<MultiStatusDtoScheduleModelStateDto>> executeWithHttpInfo() throws ApiException {
            PublishScheduleDetailDto publishScheduleDetailDto = buildBodyParams();
            return publishDetailsWithHttpInfo(publishScheduleDetailDto);
        }

        /**
         * Execute publishDetails request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 207 </td><td>  </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<List<MultiStatusDtoScheduleModelStateDto>> _callback) throws ApiException {
            PublishScheduleDetailDto publishScheduleDetailDto = buildBodyParams();
            return publishDetailsAsync(publishScheduleDetailDto, _callback);
        }
    }

    /**
     * Publish schedule details.
     * Publish schedule details. Returns a multi-status messages based on detail validation.
     * @return PublishDetailsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 207 </td><td>  </td><td>  -  </td></tr>
     </table>
     */
    public PublishDetailsRequestBuilder publishDetails() throws IllegalArgumentException {
        return new PublishDetailsRequestBuilder();
    }
}
