/*
 * User Profile Details
 * Configure your UKG Pro Configuration Codes through UKG Pro APIs. Status: R1 deployment
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.time.OffsetDateTime;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class BusinessStructureStatusApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public BusinessStructureStatusApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public BusinessStructureStatusApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call listEmployeesChangeBusinessStructureCall(OffsetDateTime modifiedAfterDateTime, String companyId, OffsetDateTime effectiveDate, String employeeId, Integer page, Integer perPage, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/personnel/v1/integration/kronos/business-structure-status";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (modifiedAfterDateTime != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("modifiedAfterDateTime", modifiedAfterDateTime));
        }

        if (companyId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("companyId", companyId));
        }

        if (effectiveDate != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("effectiveDate", effectiveDate));
        }

        if (employeeId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("employeeId", employeeId));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("per_Page", perPage));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json",
            "application/problem+json",
            "application/xml",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OauthSecurity" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listEmployeesChangeBusinessStructureValidateBeforeCall(OffsetDateTime modifiedAfterDateTime, String companyId, OffsetDateTime effectiveDate, String employeeId, Integer page, Integer perPage, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'modifiedAfterDateTime' is set
        if (modifiedAfterDateTime == null) {
            throw new ApiException("Missing the required parameter 'modifiedAfterDateTime' when calling listEmployeesChangeBusinessStructure(Async)");
        }

        // verify the required parameter 'companyId' is set
        if (companyId == null) {
            throw new ApiException("Missing the required parameter 'companyId' when calling listEmployeesChangeBusinessStructure(Async)");
        }

        return listEmployeesChangeBusinessStructureCall(modifiedAfterDateTime, companyId, effectiveDate, employeeId, page, perPage, _callback);

    }


    private ApiResponse<List<String>> listEmployeesChangeBusinessStructureWithHttpInfo(OffsetDateTime modifiedAfterDateTime, String companyId, OffsetDateTime effectiveDate, String employeeId, Integer page, Integer perPage) throws ApiException {
        okhttp3.Call localVarCall = listEmployeesChangeBusinessStructureValidateBeforeCall(modifiedAfterDateTime, companyId, effectiveDate, employeeId, page, perPage, null);
        Type localVarReturnType = new TypeToken<List<String>>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listEmployeesChangeBusinessStructureAsync(OffsetDateTime modifiedAfterDateTime, String companyId, OffsetDateTime effectiveDate, String employeeId, Integer page, Integer perPage, final ApiCallback<List<String>> _callback) throws ApiException {

        okhttp3.Call localVarCall = listEmployeesChangeBusinessStructureValidateBeforeCall(modifiedAfterDateTime, companyId, effectiveDate, employeeId, page, perPage, _callback);
        Type localVarReturnType = new TypeToken<List<String>>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ListEmployeesChangeBusinessStructureRequestBuilder {
        private final OffsetDateTime modifiedAfterDateTime;
        private final String companyId;
        private OffsetDateTime effectiveDate;
        private String employeeId;
        private Integer page;
        private Integer perPage;

        private ListEmployeesChangeBusinessStructureRequestBuilder(OffsetDateTime modifiedAfterDateTime, String companyId) {
            this.modifiedAfterDateTime = modifiedAfterDateTime;
            this.companyId = companyId;
        }

        /**
         * Set effectiveDate
         * @param effectiveDate  (optional)
         * @return ListEmployeesChangeBusinessStructureRequestBuilder
         */
        public ListEmployeesChangeBusinessStructureRequestBuilder effectiveDate(OffsetDateTime effectiveDate) {
            this.effectiveDate = effectiveDate;
            return this;
        }
        
        /**
         * Set employeeId
         * @param employeeId  (optional)
         * @return ListEmployeesChangeBusinessStructureRequestBuilder
         */
        public ListEmployeesChangeBusinessStructureRequestBuilder employeeId(String employeeId) {
            this.employeeId = employeeId;
            return this;
        }
        
        /**
         * Set page
         * @param page  (optional)
         * @return ListEmployeesChangeBusinessStructureRequestBuilder
         */
        public ListEmployeesChangeBusinessStructureRequestBuilder page(Integer page) {
            this.page = page;
            return this;
        }
        
        /**
         * Set perPage
         * @param perPage  (optional)
         * @return ListEmployeesChangeBusinessStructureRequestBuilder
         */
        public ListEmployeesChangeBusinessStructureRequestBuilder perPage(Integer perPage) {
            this.perPage = perPage;
            return this;
        }
        
        /**
         * Build call for listEmployeesChangeBusinessStructure
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listEmployeesChangeBusinessStructureCall(modifiedAfterDateTime, companyId, effectiveDate, employeeId, page, perPage, _callback);
        }


        /**
         * Execute listEmployeesChangeBusinessStructure request
         * @return List&lt;String&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public List<String> execute() throws ApiException {
            ApiResponse<List<String>> localVarResp = listEmployeesChangeBusinessStructureWithHttpInfo(modifiedAfterDateTime, companyId, effectiveDate, employeeId, page, perPage);
            return localVarResp.getResponseBody();
        }

        /**
         * Execute listEmployeesChangeBusinessStructure request with HTTP info returned
         * @return ApiResponse&lt;List&lt;String&gt;&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<List<String>> executeWithHttpInfo() throws ApiException {
            return listEmployeesChangeBusinessStructureWithHttpInfo(modifiedAfterDateTime, companyId, effectiveDate, employeeId, page, perPage);
        }

        /**
         * Execute listEmployeesChangeBusinessStructure request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<List<String>> _callback) throws ApiException {
            return listEmployeesChangeBusinessStructureAsync(modifiedAfterDateTime, companyId, effectiveDate, employeeId, page, perPage, _callback);
        }
    }

    /**
     * Gets a list of Employees for which there is a change in business structure
     * If no pagination parameters specified, the default/max is applied. Permissions - UKG Pro service account must have \&quot;View\&quot; role for the \&quot;Personnel Integration\&quot; Web Service. Headers - US-Customer-Api-Key, Authorization (base64 encoded {username}:{password}) . 
     * @param modifiedAfterDateTime  (required)
     * @param companyId  (required)
     * @return ListEmployeesChangeBusinessStructureRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ListEmployeesChangeBusinessStructureRequestBuilder listEmployeesChangeBusinessStructure(OffsetDateTime modifiedAfterDateTime, String companyId) throws IllegalArgumentException {
        if (modifiedAfterDateTime == null) throw new IllegalArgumentException("\"modifiedAfterDateTime\" is required but got null");
        if (companyId == null) throw new IllegalArgumentException("\"companyId\" is required but got null");
            

        return new ListEmployeesChangeBusinessStructureRequestBuilder(modifiedAfterDateTime, companyId);
    }
}
